buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        //GWT plugin
        classpath 'de.richsource.gradle.plugins:gwt-gradle-plugin:0.6'
        classpath 'org.gradle.api.plugins:gradle-cargo-plugin:0.6.1'
    }
}

apply plugin: 'java'
apply plugin: 'war'
apply plugin: 'cargo'
apply plugin: 'jetty'
apply plugin: 'gwt'

configurations.runtime.artifacts.removeAll { it.archiveTask.is jar }

evaluationDependsOn(":core")

dependencies {
    def cargoVersion = '1.4.4'
    cargo "org.codehaus.cargo:cargo-core-uberjar:$cargoVersion",
            "org.codehaus.cargo:cargo-ant:$cargoVersion"

    //We use this notation to include the source, for GWT
    compile files(project(':core').sourceSets.main.java.srcDirs)
    compile files(project(':core').sourceSets.main.resources.srcDirs)
    compile project(':core')

    compile 'com.google.gwt:gwt-servlet:2.7.0'
    compile 'com.google.gwt:gwt-user:2.7.0'
    compile 'org.hibernate:hibernate-core:4.3.8.Final'
    compile 'org.hibernate:hibernate-validator:5.1.3.Final'
    compile 'javax.el:el-api:2.2'
    compile 'org.glassfish.jersey.containers:jersey-container-servlet:2.16'
    compile 'org.apache.derby:derby:10.12.1.1'
    compile 'org.mindrot:jbcrypt:0.3m'
    compile 'mysql:mysql-connector-java:5.1.6'

    compile 'org.fluttercode.datafactory:datafactory:0.8'

    compile 'org.slf4j:slf4j-api:1.7.12'
    compile 'ch.qos.logback:logback-classic:1.1.3'

    compile 'org.postgresql:postgresql:9.4-1204-jdbc4'

    testCompile 'junit:junit:4.12'

    compile group: 'com.google.guava', name: 'guava', version: '18.0', classifier: 'sources'
    gwt group: 'com.google.guava', name: 'guava', version: '18.0', classifier: 'sources'
    compile group: 'com.google.guava', name: 'guava-gwt', version: '18.0', classifier: 'sources'
    gwt group: 'com.google.guava', name: 'guava-gwt', version: '18.0', classifier: 'sources'
}

gwt {
    gwtVersion='2.7.0'
    modules 'rtdc.web.rtdc-web'

    maxHeapSize = "1024M"

    superDev {
        noPrecompile=true
    }
}

cargo {
    containerId = 'jetty9x'
    port = 8080

    deployable {
        file = tasks.draftWar.archivePath
        context = 'app'
    }

    local {
        installer {
            installUrl = file("$projectDir/etc/jetty-distribution-9.0.5.v20130815.zip").toURI()
            downloadDir = file("$buildDir/download")
            extractDir = file("$buildDir/extract")
        }
    }
}

war {
    archiveName='rtdc.war'

    from('war') {
        include 'web.css'
        include 'web.html'
        include 'WEB-INF/web.xml'
        include 'WEB-INF/META-INF/**'
    }
    rootSpec.eachFile { details ->
        if (details.name == "hibernate.cfg.xml" || details.name == "Config.properties") {
            details.exclude()
        } else if (details.name == "prod.hibernate.cfg.xml") {
            details.name = "hibernate.cfg.xml"
        } else if (details.name == "prod.Config.properties") {
            details.name = "Config.properties"
        }
    }
}

task jettyDraftWar(type: JettyRunWar) {
    dependsOn draftWar
    dependsOn.remove('war')
    webApp=draftWar.archivePath
}

afterEvaluate {
    tasks.cargoStartLocal.dependsOn(tasks.draftWar)
    tasks.cargoRunLocal.dependsOn(tasks.draftWar)
}