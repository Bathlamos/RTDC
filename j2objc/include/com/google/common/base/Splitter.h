//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kstanger/j2objc-0.9.5/j2objc/guava/sources/com/google/common/base/Splitter.java
//

#import "JreEmulation.h"

#if !ComGoogleCommonBaseSplitter_RESTRICT
#define ComGoogleCommonBaseSplitter_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonBaseSplitter_RESTRICT
#if ComGoogleCommonBaseSplitter_$4_$1_INCLUDE
#define ComGoogleCommonBaseSplitter_SplittingIterator_INCLUDE 1
#endif
#if ComGoogleCommonBaseSplitter_$4_INCLUDE
#define ComGoogleCommonBaseSplitter_Strategy_INCLUDE 1
#endif
#if ComGoogleCommonBaseSplitter_$3_$1_INCLUDE
#define ComGoogleCommonBaseSplitter_SplittingIterator_INCLUDE 1
#endif
#if ComGoogleCommonBaseSplitter_$3_INCLUDE
#define ComGoogleCommonBaseSplitter_Strategy_INCLUDE 1
#endif
#if ComGoogleCommonBaseSplitter_$2_$1_INCLUDE
#define ComGoogleCommonBaseSplitter_SplittingIterator_INCLUDE 1
#endif
#if ComGoogleCommonBaseSplitter_$2_INCLUDE
#define ComGoogleCommonBaseSplitter_Strategy_INCLUDE 1
#endif
#if ComGoogleCommonBaseSplitter_$1_$1_INCLUDE
#define ComGoogleCommonBaseSplitter_SplittingIterator_INCLUDE 1
#endif
#if ComGoogleCommonBaseSplitter_$1_INCLUDE
#define ComGoogleCommonBaseSplitter_Strategy_INCLUDE 1
#endif
#if !defined (_ComGoogleCommonBaseSplitter_) && (ComGoogleCommonBaseSplitter_INCLUDE_ALL || ComGoogleCommonBaseSplitter_INCLUDE)
#define _ComGoogleCommonBaseSplitter_

@class ComGoogleCommonBaseCharMatcher;
@class ComGoogleCommonBaseSplitter_MapSplitter;
@class JavaUtilRegexPattern;
@protocol ComGoogleCommonBaseSplitter_Strategy;
@protocol JavaLangCharSequence;
@protocol JavaLangIterable;
@protocol JavaUtilIterator;


@interface ComGoogleCommonBaseSplitter : NSObject {
}

+ (ComGoogleCommonBaseSplitter *)onWithChar:(jchar)separator;

+ (ComGoogleCommonBaseSplitter *)onWithComGoogleCommonBaseCharMatcher:(ComGoogleCommonBaseCharMatcher *)separatorMatcher;

+ (ComGoogleCommonBaseSplitter *)onWithNSString:(NSString *)separator;

+ (ComGoogleCommonBaseSplitter *)onWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)separatorPattern;

+ (ComGoogleCommonBaseSplitter *)onPatternWithNSString:(NSString *)separatorPattern;

+ (ComGoogleCommonBaseSplitter *)fixedLengthWithInt:(jint)length;

- (ComGoogleCommonBaseSplitter *)omitEmptyStrings;

- (ComGoogleCommonBaseSplitter *)limitWithInt:(jint)limit;

- (ComGoogleCommonBaseSplitter *)trimResults;

- (ComGoogleCommonBaseSplitter *)trimResultsWithComGoogleCommonBaseCharMatcher:(ComGoogleCommonBaseCharMatcher *)trimmer;

- (id<JavaLangIterable>)splitWithJavaLangCharSequence:(id<JavaLangCharSequence>)sequence;

- (ComGoogleCommonBaseSplitter_MapSplitter *)withKeyValueSeparatorWithNSString:(NSString *)separator;

- (ComGoogleCommonBaseSplitter_MapSplitter *)withKeyValueSeparatorWithChar:(jchar)separator;

- (ComGoogleCommonBaseSplitter_MapSplitter *)withKeyValueSeparatorWithComGoogleCommonBaseSplitter:(ComGoogleCommonBaseSplitter *)keyValueSplitter;

@end

__attribute__((always_inline)) inline void ComGoogleCommonBaseSplitter_init() {}
FOUNDATION_EXPORT ComGoogleCommonBaseSplitter *ComGoogleCommonBaseSplitter_onWithChar_(jchar separator);
FOUNDATION_EXPORT ComGoogleCommonBaseSplitter *ComGoogleCommonBaseSplitter_onWithComGoogleCommonBaseCharMatcher_(ComGoogleCommonBaseCharMatcher *separatorMatcher);
FOUNDATION_EXPORT ComGoogleCommonBaseSplitter *ComGoogleCommonBaseSplitter_onWithNSString_(NSString *separator);
FOUNDATION_EXPORT ComGoogleCommonBaseSplitter *ComGoogleCommonBaseSplitter_onWithJavaUtilRegexPattern_(JavaUtilRegexPattern *separatorPattern);
FOUNDATION_EXPORT ComGoogleCommonBaseSplitter *ComGoogleCommonBaseSplitter_onPatternWithNSString_(NSString *separatorPattern);
FOUNDATION_EXPORT ComGoogleCommonBaseSplitter *ComGoogleCommonBaseSplitter_fixedLengthWithInt_(jint length);
#endif
#if !defined (_ComGoogleCommonBaseSplitter_MapSplitter_) && (ComGoogleCommonBaseSplitter_INCLUDE_ALL || ComGoogleCommonBaseSplitter_MapSplitter_INCLUDE)
#define _ComGoogleCommonBaseSplitter_MapSplitter_

@class ComGoogleCommonBaseSplitter;
@protocol JavaLangCharSequence;
@protocol JavaUtilMap;


@interface ComGoogleCommonBaseSplitter_MapSplitter : NSObject {
}

- (id<JavaUtilMap>)splitWithJavaLangCharSequence:(id<JavaLangCharSequence>)sequence;

@end

__attribute__((always_inline)) inline void ComGoogleCommonBaseSplitter_MapSplitter_init() {}

FOUNDATION_EXPORT NSString *ComGoogleCommonBaseSplitter_MapSplitter_INVALID_ENTRY_MESSAGE_;
J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonBaseSplitter_MapSplitter, INVALID_ENTRY_MESSAGE_, NSString *)
#endif
#if !defined (_ComGoogleCommonBaseSplitter_Strategy_) && (ComGoogleCommonBaseSplitter_INCLUDE_ALL || ComGoogleCommonBaseSplitter_Strategy_INCLUDE)
#define _ComGoogleCommonBaseSplitter_Strategy_

@class ComGoogleCommonBaseSplitter;
@protocol JavaLangCharSequence;
@protocol JavaUtilIterator;


@protocol ComGoogleCommonBaseSplitter_Strategy < NSObject, JavaObject >

- (id<JavaUtilIterator>)iteratorWithComGoogleCommonBaseSplitter:(ComGoogleCommonBaseSplitter *)splitter
                                       withJavaLangCharSequence:(id<JavaLangCharSequence>)toSplit;

@end

__attribute__((always_inline)) inline void ComGoogleCommonBaseSplitter_Strategy_init() {}
#endif
#if !defined (_ComGoogleCommonBaseSplitter_$1_) && (ComGoogleCommonBaseSplitter_INCLUDE_ALL || ComGoogleCommonBaseSplitter_$1_INCLUDE)
#define _ComGoogleCommonBaseSplitter_$1_

@class ComGoogleCommonBaseCharMatcher;
@class ComGoogleCommonBaseSplitter;
@class ComGoogleCommonBaseSplitter_SplittingIterator;
@protocol JavaLangCharSequence;


@interface ComGoogleCommonBaseSplitter_$1 : NSObject < ComGoogleCommonBaseSplitter_Strategy > {
}

- (ComGoogleCommonBaseSplitter_SplittingIterator *)iteratorWithComGoogleCommonBaseSplitter:(ComGoogleCommonBaseSplitter *)splitter
                                                                  withJavaLangCharSequence:(id<JavaLangCharSequence>)toSplit;

- (instancetype)initWithComGoogleCommonBaseCharMatcher:(ComGoogleCommonBaseCharMatcher *)capture$0;

@end

__attribute__((always_inline)) inline void ComGoogleCommonBaseSplitter_$1_init() {}
#endif
#if !defined (_ComGoogleCommonBaseSplitter_SplittingIterator_) && (ComGoogleCommonBaseSplitter_INCLUDE_ALL || ComGoogleCommonBaseSplitter_SplittingIterator_INCLUDE)
#define _ComGoogleCommonBaseSplitter_SplittingIterator_

@class ComGoogleCommonBaseCharMatcher;
@class ComGoogleCommonBaseSplitter;
@protocol JavaLangCharSequence;

#define ComGoogleCommonBaseAbstractIterator_RESTRICT 1
#define ComGoogleCommonBaseAbstractIterator_INCLUDE 1
#include "com/google/common/base/AbstractIterator.h"


@interface ComGoogleCommonBaseSplitter_SplittingIterator : ComGoogleCommonBaseAbstractIterator {
 @public
  id<JavaLangCharSequence> toSplit_;
  ComGoogleCommonBaseCharMatcher *trimmer_;
  jboolean omitEmptyStrings_;
  jint offset_;
  jint limit_;
}

- (jint)separatorStartWithInt:(jint)start;

- (jint)separatorEndWithInt:(jint)separatorPosition;

- (instancetype)initWithComGoogleCommonBaseSplitter:(ComGoogleCommonBaseSplitter *)splitter
                           withJavaLangCharSequence:(id<JavaLangCharSequence>)toSplit;

- (NSString *)computeNext;

@end

__attribute__((always_inline)) inline void ComGoogleCommonBaseSplitter_SplittingIterator_init() {}

J2OBJC_FIELD_SETTER(ComGoogleCommonBaseSplitter_SplittingIterator, toSplit_, id<JavaLangCharSequence>)
J2OBJC_FIELD_SETTER(ComGoogleCommonBaseSplitter_SplittingIterator, trimmer_, ComGoogleCommonBaseCharMatcher *)
#endif
#if !defined (_ComGoogleCommonBaseSplitter_$1_$1_) && (ComGoogleCommonBaseSplitter_INCLUDE_ALL || ComGoogleCommonBaseSplitter_$1_$1_INCLUDE)
#define _ComGoogleCommonBaseSplitter_$1_$1_

@class ComGoogleCommonBaseSplitter;
@class ComGoogleCommonBaseSplitter_$1;
@protocol JavaLangCharSequence;


@interface ComGoogleCommonBaseSplitter_$1_$1 : ComGoogleCommonBaseSplitter_SplittingIterator {
}

- (jint)separatorStartWithInt:(jint)start;

- (jint)separatorEndWithInt:(jint)separatorPosition;

- (instancetype)initWithComGoogleCommonBaseSplitter_$1:(ComGoogleCommonBaseSplitter_$1 *)outer$
                       withComGoogleCommonBaseSplitter:(ComGoogleCommonBaseSplitter *)arg$0
                              withJavaLangCharSequence:(id<JavaLangCharSequence>)arg$1;

@end

__attribute__((always_inline)) inline void ComGoogleCommonBaseSplitter_$1_$1_init() {}
#endif
#if !defined (_ComGoogleCommonBaseSplitter_$2_) && (ComGoogleCommonBaseSplitter_INCLUDE_ALL || ComGoogleCommonBaseSplitter_$2_INCLUDE)
#define _ComGoogleCommonBaseSplitter_$2_

@class ComGoogleCommonBaseSplitter;
@class ComGoogleCommonBaseSplitter_SplittingIterator;
@protocol JavaLangCharSequence;


@interface ComGoogleCommonBaseSplitter_$2 : NSObject < ComGoogleCommonBaseSplitter_Strategy > {
}

- (ComGoogleCommonBaseSplitter_SplittingIterator *)iteratorWithComGoogleCommonBaseSplitter:(ComGoogleCommonBaseSplitter *)splitter
                                                                  withJavaLangCharSequence:(id<JavaLangCharSequence>)toSplit;

- (instancetype)initWithNSString:(NSString *)capture$0;

@end

__attribute__((always_inline)) inline void ComGoogleCommonBaseSplitter_$2_init() {}
#endif
#if !defined (_ComGoogleCommonBaseSplitter_$2_$1_) && (ComGoogleCommonBaseSplitter_INCLUDE_ALL || ComGoogleCommonBaseSplitter_$2_$1_INCLUDE)
#define _ComGoogleCommonBaseSplitter_$2_$1_

@class ComGoogleCommonBaseSplitter;
@class ComGoogleCommonBaseSplitter_$2;
@protocol JavaLangCharSequence;


@interface ComGoogleCommonBaseSplitter_$2_$1 : ComGoogleCommonBaseSplitter_SplittingIterator {
}

- (jint)separatorStartWithInt:(jint)start;

- (jint)separatorEndWithInt:(jint)separatorPosition;

- (instancetype)initWithComGoogleCommonBaseSplitter_$2:(ComGoogleCommonBaseSplitter_$2 *)outer$
                       withComGoogleCommonBaseSplitter:(ComGoogleCommonBaseSplitter *)arg$0
                              withJavaLangCharSequence:(id<JavaLangCharSequence>)arg$1;

@end

__attribute__((always_inline)) inline void ComGoogleCommonBaseSplitter_$2_$1_init() {}
#endif
#if !defined (_ComGoogleCommonBaseSplitter_$3_) && (ComGoogleCommonBaseSplitter_INCLUDE_ALL || ComGoogleCommonBaseSplitter_$3_INCLUDE)
#define _ComGoogleCommonBaseSplitter_$3_

@class ComGoogleCommonBaseSplitter;
@class ComGoogleCommonBaseSplitter_SplittingIterator;
@class JavaUtilRegexPattern;
@protocol JavaLangCharSequence;


@interface ComGoogleCommonBaseSplitter_$3 : NSObject < ComGoogleCommonBaseSplitter_Strategy > {
}

- (ComGoogleCommonBaseSplitter_SplittingIterator *)iteratorWithComGoogleCommonBaseSplitter:(ComGoogleCommonBaseSplitter *)splitter
                                                                  withJavaLangCharSequence:(id<JavaLangCharSequence>)toSplit;

- (instancetype)initWithJavaUtilRegexPattern:(JavaUtilRegexPattern *)capture$0;

@end

__attribute__((always_inline)) inline void ComGoogleCommonBaseSplitter_$3_init() {}
#endif
#if !defined (_ComGoogleCommonBaseSplitter_$3_$1_) && (ComGoogleCommonBaseSplitter_INCLUDE_ALL || ComGoogleCommonBaseSplitter_$3_$1_INCLUDE)
#define _ComGoogleCommonBaseSplitter_$3_$1_

@class ComGoogleCommonBaseSplitter;
@class JavaUtilRegexMatcher;
@protocol JavaLangCharSequence;


@interface ComGoogleCommonBaseSplitter_$3_$1 : ComGoogleCommonBaseSplitter_SplittingIterator {
}

- (jint)separatorStartWithInt:(jint)start;

- (jint)separatorEndWithInt:(jint)separatorPosition;

- (instancetype)initWithComGoogleCommonBaseSplitter:(ComGoogleCommonBaseSplitter *)arg$0
                           withJavaLangCharSequence:(id<JavaLangCharSequence>)arg$1
                           withJavaUtilRegexMatcher:(JavaUtilRegexMatcher *)capture$0;

@end

__attribute__((always_inline)) inline void ComGoogleCommonBaseSplitter_$3_$1_init() {}
#endif
#if !defined (_ComGoogleCommonBaseSplitter_$4_) && (ComGoogleCommonBaseSplitter_INCLUDE_ALL || ComGoogleCommonBaseSplitter_$4_INCLUDE)
#define _ComGoogleCommonBaseSplitter_$4_

@class ComGoogleCommonBaseSplitter;
@class ComGoogleCommonBaseSplitter_SplittingIterator;
@protocol JavaLangCharSequence;


@interface ComGoogleCommonBaseSplitter_$4 : NSObject < ComGoogleCommonBaseSplitter_Strategy > {
}

- (ComGoogleCommonBaseSplitter_SplittingIterator *)iteratorWithComGoogleCommonBaseSplitter:(ComGoogleCommonBaseSplitter *)splitter
                                                                  withJavaLangCharSequence:(id<JavaLangCharSequence>)toSplit;

- (instancetype)initWithInt:(jint)capture$0;

@end

__attribute__((always_inline)) inline void ComGoogleCommonBaseSplitter_$4_init() {}
#endif
#if !defined (_ComGoogleCommonBaseSplitter_$4_$1_) && (ComGoogleCommonBaseSplitter_INCLUDE_ALL || ComGoogleCommonBaseSplitter_$4_$1_INCLUDE)
#define _ComGoogleCommonBaseSplitter_$4_$1_

@class ComGoogleCommonBaseSplitter;
@class ComGoogleCommonBaseSplitter_$4;
@protocol JavaLangCharSequence;


@interface ComGoogleCommonBaseSplitter_$4_$1 : ComGoogleCommonBaseSplitter_SplittingIterator {
}

- (jint)separatorStartWithInt:(jint)start;

- (jint)separatorEndWithInt:(jint)separatorPosition;

- (instancetype)initWithComGoogleCommonBaseSplitter_$4:(ComGoogleCommonBaseSplitter_$4 *)outer$
                       withComGoogleCommonBaseSplitter:(ComGoogleCommonBaseSplitter *)arg$0
                              withJavaLangCharSequence:(id<JavaLangCharSequence>)arg$1;

@end

__attribute__((always_inline)) inline void ComGoogleCommonBaseSplitter_$4_$1_init() {}
#endif
#if !defined (_ComGoogleCommonBaseSplitter_$5_) && (ComGoogleCommonBaseSplitter_INCLUDE_ALL || ComGoogleCommonBaseSplitter_$5_INCLUDE)
#define _ComGoogleCommonBaseSplitter_$5_

@class ComGoogleCommonBaseSplitter;
@protocol JavaLangCharSequence;
@protocol JavaUtilIterator;

#define JavaLangIterable_RESTRICT 1
#define JavaLangIterable_INCLUDE 1
#include "java/lang/Iterable.h"


@interface ComGoogleCommonBaseSplitter_$5 : NSObject < JavaLangIterable > {
}

- (id<JavaUtilIterator>)iterator;

- (NSString *)description;

- (instancetype)initWithComGoogleCommonBaseSplitter:(ComGoogleCommonBaseSplitter *)outer$
                           withJavaLangCharSequence:(id<JavaLangCharSequence>)capture$0;


@end

__attribute__((always_inline)) inline void ComGoogleCommonBaseSplitter_$5_init() {}
#endif
