//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kstanger/j2objc-0.9.5/j2objc/guava/sources/com/google/common/util/concurrent/MoreExecutors.java
//

#import "JreEmulation.h"

#if !ComGoogleCommonUtilConcurrentMoreExecutors_RESTRICT
#define ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonUtilConcurrentMoreExecutors_RESTRICT
#if ComGoogleCommonUtilConcurrentMoreExecutors_ScheduledListeningDecorator_INCLUDE
#define ComGoogleCommonUtilConcurrentMoreExecutors_ListeningDecorator_INCLUDE 1
#endif
#if !defined (_ComGoogleCommonUtilConcurrentMoreExecutors_) && (ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL || ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE)
#define _ComGoogleCommonUtilConcurrentMoreExecutors_

@class JavaLangThread;
@class JavaUtilConcurrentScheduledThreadPoolExecutor;
@class JavaUtilConcurrentThreadPoolExecutor;
@class JavaUtilConcurrentTimeUnitEnum;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;
@protocol ComGoogleCommonUtilConcurrentListeningExecutorService;
@protocol ComGoogleCommonUtilConcurrentListeningScheduledExecutorService;
@protocol JavaLangRunnable;
@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentBlockingQueue;
@protocol JavaUtilConcurrentCallable;
@protocol JavaUtilConcurrentExecutorService;
@protocol JavaUtilConcurrentScheduledExecutorService;
@protocol JavaUtilConcurrentThreadFactory;


@interface ComGoogleCommonUtilConcurrentMoreExecutors : NSObject {
}

+ (id<JavaUtilConcurrentExecutorService>)getExitingExecutorServiceWithJavaUtilConcurrentThreadPoolExecutor:(JavaUtilConcurrentThreadPoolExecutor *)executor
                                                                                                  withLong:(jlong)terminationTimeout
                                                                        withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)timeUnit;

+ (id<JavaUtilConcurrentScheduledExecutorService>)getExitingScheduledExecutorServiceWithJavaUtilConcurrentScheduledThreadPoolExecutor:(JavaUtilConcurrentScheduledThreadPoolExecutor *)executor
                                                                                                                             withLong:(jlong)terminationTimeout
                                                                                                   withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)timeUnit;

+ (void)addDelayedShutdownHookWithJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)service
                                                           withLong:(jlong)terminationTimeout
                                 withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)timeUnit;

+ (id<JavaUtilConcurrentExecutorService>)getExitingExecutorServiceWithJavaUtilConcurrentThreadPoolExecutor:(JavaUtilConcurrentThreadPoolExecutor *)executor;

+ (id<JavaUtilConcurrentScheduledExecutorService>)getExitingScheduledExecutorServiceWithJavaUtilConcurrentScheduledThreadPoolExecutor:(JavaUtilConcurrentScheduledThreadPoolExecutor *)executor;

+ (id<ComGoogleCommonUtilConcurrentListeningExecutorService>)sameThreadExecutor;

+ (id<ComGoogleCommonUtilConcurrentListeningExecutorService>)listeningDecoratorWithJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)delegate;

+ (id<ComGoogleCommonUtilConcurrentListeningScheduledExecutorService>)listeningDecoratorWithJavaUtilConcurrentScheduledExecutorService:(id<JavaUtilConcurrentScheduledExecutorService>)delegate;

+ (id)invokeAnyImplWithComGoogleCommonUtilConcurrentListeningExecutorService:(id<ComGoogleCommonUtilConcurrentListeningExecutorService>)executorService
                                                      withJavaUtilCollection:(id<JavaUtilCollection>)tasks
                                                                 withBoolean:(jboolean)timed
                                                                    withLong:(jlong)nanos;

+ (id<JavaUtilConcurrentThreadFactory>)platformThreadFactory;

+ (JavaLangThread *)newThreadWithNSString:(NSString *)name
                     withJavaLangRunnable:(id<JavaLangRunnable>)runnable OBJC_METHOD_FAMILY_NONE;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentMoreExecutors_init() {}
FOUNDATION_EXPORT id<JavaUtilConcurrentExecutorService> ComGoogleCommonUtilConcurrentMoreExecutors_getExitingExecutorServiceWithJavaUtilConcurrentThreadPoolExecutor_withLong_withJavaUtilConcurrentTimeUnitEnum_(JavaUtilConcurrentThreadPoolExecutor *executor, jlong terminationTimeout, JavaUtilConcurrentTimeUnitEnum *timeUnit);
FOUNDATION_EXPORT id<JavaUtilConcurrentScheduledExecutorService> ComGoogleCommonUtilConcurrentMoreExecutors_getExitingScheduledExecutorServiceWithJavaUtilConcurrentScheduledThreadPoolExecutor_withLong_withJavaUtilConcurrentTimeUnitEnum_(JavaUtilConcurrentScheduledThreadPoolExecutor *executor, jlong terminationTimeout, JavaUtilConcurrentTimeUnitEnum *timeUnit);
FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentMoreExecutors_addDelayedShutdownHookWithJavaUtilConcurrentExecutorService_withLong_withJavaUtilConcurrentTimeUnitEnum_(id<JavaUtilConcurrentExecutorService> service, jlong terminationTimeout, JavaUtilConcurrentTimeUnitEnum *timeUnit);
FOUNDATION_EXPORT id<JavaUtilConcurrentExecutorService> ComGoogleCommonUtilConcurrentMoreExecutors_getExitingExecutorServiceWithJavaUtilConcurrentThreadPoolExecutor_(JavaUtilConcurrentThreadPoolExecutor *executor);
FOUNDATION_EXPORT id<JavaUtilConcurrentScheduledExecutorService> ComGoogleCommonUtilConcurrentMoreExecutors_getExitingScheduledExecutorServiceWithJavaUtilConcurrentScheduledThreadPoolExecutor_(JavaUtilConcurrentScheduledThreadPoolExecutor *executor);
FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListeningExecutorService> ComGoogleCommonUtilConcurrentMoreExecutors_sameThreadExecutor();
FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListeningExecutorService> ComGoogleCommonUtilConcurrentMoreExecutors_listeningDecoratorWithJavaUtilConcurrentExecutorService_(id<JavaUtilConcurrentExecutorService> delegate);
FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListeningScheduledExecutorService> ComGoogleCommonUtilConcurrentMoreExecutors_listeningDecoratorWithJavaUtilConcurrentScheduledExecutorService_(id<JavaUtilConcurrentScheduledExecutorService> delegate);
FOUNDATION_EXPORT id ComGoogleCommonUtilConcurrentMoreExecutors_invokeAnyImplWithComGoogleCommonUtilConcurrentListeningExecutorService_withJavaUtilCollection_withBoolean_withLong_(id<ComGoogleCommonUtilConcurrentListeningExecutorService> executorService, id<JavaUtilCollection> tasks, jboolean timed, jlong nanos);
FOUNDATION_EXPORT id<JavaUtilConcurrentThreadFactory> ComGoogleCommonUtilConcurrentMoreExecutors_platformThreadFactory();
FOUNDATION_EXPORT JavaLangThread *ComGoogleCommonUtilConcurrentMoreExecutors_newThreadWithNSString_withJavaLangRunnable_(NSString *name, id<JavaLangRunnable> runnable);
#endif
#if !defined (_ComGoogleCommonUtilConcurrentMoreExecutors_Application_) && (ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL || ComGoogleCommonUtilConcurrentMoreExecutors_Application_INCLUDE)
#define _ComGoogleCommonUtilConcurrentMoreExecutors_Application_

@class JavaLangThread;
@class JavaUtilConcurrentScheduledThreadPoolExecutor;
@class JavaUtilConcurrentThreadPoolExecutor;
@class JavaUtilConcurrentTimeUnitEnum;
@protocol JavaUtilConcurrentExecutorService;
@protocol JavaUtilConcurrentScheduledExecutorService;


@interface ComGoogleCommonUtilConcurrentMoreExecutors_Application : NSObject {
}

- (id<JavaUtilConcurrentExecutorService>)getExitingExecutorServiceWithJavaUtilConcurrentThreadPoolExecutor:(JavaUtilConcurrentThreadPoolExecutor *)executor
                                                                                                  withLong:(jlong)terminationTimeout
                                                                        withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)timeUnit;

- (id<JavaUtilConcurrentScheduledExecutorService>)getExitingScheduledExecutorServiceWithJavaUtilConcurrentScheduledThreadPoolExecutor:(JavaUtilConcurrentScheduledThreadPoolExecutor *)executor
                                                                                                                             withLong:(jlong)terminationTimeout
                                                                                                   withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)timeUnit;

- (void)addDelayedShutdownHookWithJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)service
                                                           withLong:(jlong)terminationTimeout
                                 withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)timeUnit;

- (id<JavaUtilConcurrentExecutorService>)getExitingExecutorServiceWithJavaUtilConcurrentThreadPoolExecutor:(JavaUtilConcurrentThreadPoolExecutor *)executor;

- (id<JavaUtilConcurrentScheduledExecutorService>)getExitingScheduledExecutorServiceWithJavaUtilConcurrentScheduledThreadPoolExecutor:(JavaUtilConcurrentScheduledThreadPoolExecutor *)executor;

- (void)addShutdownHookWithJavaLangThread:(JavaLangThread *)hook;

- (instancetype)init;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentMoreExecutors_Application_init() {}
#endif
#if !defined (_ComGoogleCommonUtilConcurrentMoreExecutors_Application_$1_) && (ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL || ComGoogleCommonUtilConcurrentMoreExecutors_Application_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentMoreExecutors_Application_$1_

@class JavaUtilConcurrentTimeUnitEnum;
@protocol JavaUtilConcurrentExecutorService;

#define JavaLangRunnable_RESTRICT 1
#define JavaLangRunnable_INCLUDE 1
#include "java/lang/Runnable.h"


@interface ComGoogleCommonUtilConcurrentMoreExecutors_Application_$1 : NSObject < JavaLangRunnable > {
}

- (void)run;

- (instancetype)initWithJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)capture$0
                                                 withLong:(jlong)capture$1
                       withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)capture$2;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentMoreExecutors_Application_$1_init() {}
#endif
#if !defined (_ComGoogleCommonUtilConcurrentMoreExecutors_SameThreadExecutorService_) && (ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL || ComGoogleCommonUtilConcurrentMoreExecutors_SameThreadExecutorService_INCLUDE)
#define _ComGoogleCommonUtilConcurrentMoreExecutors_SameThreadExecutorService_

@class JavaUtilConcurrentTimeUnitEnum;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentLocksCondition;
@protocol JavaUtilConcurrentLocksLock;
@protocol JavaUtilList;

#define ComGoogleCommonUtilConcurrentAbstractListeningExecutorService_RESTRICT 1
#define ComGoogleCommonUtilConcurrentAbstractListeningExecutorService_INCLUDE 1
#include "com/google/common/util/concurrent/AbstractListeningExecutorService.h"


@interface ComGoogleCommonUtilConcurrentMoreExecutors_SameThreadExecutorService : ComGoogleCommonUtilConcurrentAbstractListeningExecutorService {
}

- (void)executeWithJavaLangRunnable:(id<JavaLangRunnable>)command;

- (jboolean)isShutdown;

- (void)shutdown;

- (id<JavaUtilList>)shutdownNow;

- (jboolean)isTerminated;

- (jboolean)awaitTerminationWithLong:(jlong)timeout
  withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentMoreExecutors_SameThreadExecutorService_init() {}
#endif
#if !defined (_ComGoogleCommonUtilConcurrentMoreExecutors_ListeningDecorator_) && (ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL || ComGoogleCommonUtilConcurrentMoreExecutors_ListeningDecorator_INCLUDE)
#define _ComGoogleCommonUtilConcurrentMoreExecutors_ListeningDecorator_

@class JavaUtilConcurrentTimeUnitEnum;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentExecutorService;
@protocol JavaUtilList;

#define ComGoogleCommonUtilConcurrentAbstractListeningExecutorService_RESTRICT 1
#define ComGoogleCommonUtilConcurrentAbstractListeningExecutorService_INCLUDE 1
#include "com/google/common/util/concurrent/AbstractListeningExecutorService.h"


@interface ComGoogleCommonUtilConcurrentMoreExecutors_ListeningDecorator : ComGoogleCommonUtilConcurrentAbstractListeningExecutorService {
 @public
  id<JavaUtilConcurrentExecutorService> delegate_;
}

- (instancetype)initWithJavaUtilConcurrentExecutorService:(id<JavaUtilConcurrentExecutorService>)delegate;

- (jboolean)awaitTerminationWithLong:(jlong)timeout
  withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (jboolean)isShutdown;

- (jboolean)isTerminated;

- (void)shutdown;

- (id<JavaUtilList>)shutdownNow;

- (void)executeWithJavaLangRunnable:(id<JavaLangRunnable>)command;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentMoreExecutors_ListeningDecorator_init() {}

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentMoreExecutors_ListeningDecorator, delegate_, id<JavaUtilConcurrentExecutorService>)
#endif
#if !defined (_ComGoogleCommonUtilConcurrentMoreExecutors_ScheduledListeningDecorator_) && (ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL || ComGoogleCommonUtilConcurrentMoreExecutors_ScheduledListeningDecorator_INCLUDE)
#define _ComGoogleCommonUtilConcurrentMoreExecutors_ScheduledListeningDecorator_

@class JavaUtilConcurrentTimeUnitEnum;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentCallable;
@protocol JavaUtilConcurrentScheduledExecutorService;
@protocol JavaUtilConcurrentScheduledFuture;

#define ComGoogleCommonUtilConcurrentListeningScheduledExecutorService_RESTRICT 1
#define ComGoogleCommonUtilConcurrentListeningScheduledExecutorService_INCLUDE 1
#include "com/google/common/util/concurrent/ListeningScheduledExecutorService.h"


@interface ComGoogleCommonUtilConcurrentMoreExecutors_ScheduledListeningDecorator : ComGoogleCommonUtilConcurrentMoreExecutors_ListeningDecorator < ComGoogleCommonUtilConcurrentListeningScheduledExecutorService > {
 @public
  id<JavaUtilConcurrentScheduledExecutorService> delegate_ScheduledListeningDecorator_;
}

- (instancetype)initWithJavaUtilConcurrentScheduledExecutorService:(id<JavaUtilConcurrentScheduledExecutorService>)delegate;

- (id<JavaUtilConcurrentScheduledFuture>)scheduleWithJavaLangRunnable:(id<JavaLangRunnable>)command
                                                             withLong:(jlong)delay
                                   withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (id<JavaUtilConcurrentScheduledFuture>)scheduleWithJavaUtilConcurrentCallable:(id<JavaUtilConcurrentCallable>)callable
                                                                       withLong:(jlong)delay
                                             withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (id<JavaUtilConcurrentScheduledFuture>)scheduleAtFixedRateWithJavaLangRunnable:(id<JavaLangRunnable>)command
                                                                        withLong:(jlong)initialDelay
                                                                        withLong:(jlong)period
                                              withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (id<JavaUtilConcurrentScheduledFuture>)scheduleWithFixedDelayWithJavaLangRunnable:(id<JavaLangRunnable>)command
                                                                           withLong:(jlong)initialDelay
                                                                           withLong:(jlong)delay
                                                 withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentMoreExecutors_ScheduledListeningDecorator_init() {}

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentMoreExecutors_ScheduledListeningDecorator, delegate_ScheduledListeningDecorator_, id<JavaUtilConcurrentScheduledExecutorService>)
#endif
#if !defined (_ComGoogleCommonUtilConcurrentMoreExecutors_$1_) && (ComGoogleCommonUtilConcurrentMoreExecutors_INCLUDE_ALL || ComGoogleCommonUtilConcurrentMoreExecutors_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentMoreExecutors_$1_

@protocol ComGoogleCommonUtilConcurrentListenableFuture;
@protocol JavaUtilConcurrentBlockingQueue;

#define JavaLangRunnable_RESTRICT 1
#define JavaLangRunnable_INCLUDE 1
#include "java/lang/Runnable.h"


@interface ComGoogleCommonUtilConcurrentMoreExecutors_$1 : NSObject < JavaLangRunnable > {
}

- (void)run;

- (instancetype)initWithJavaUtilConcurrentBlockingQueue:(id<JavaUtilConcurrentBlockingQueue>)capture$0
      withComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)capture$1;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentMoreExecutors_$1_init() {}
#endif
