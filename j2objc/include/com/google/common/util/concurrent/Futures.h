//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kstanger/j2objc-0.9.5/j2objc/guava/sources/com/google/common/util/concurrent/Futures.java
//

#import "JreEmulation.h"

#if !ComGoogleCommonUtilConcurrentFutures_RESTRICT
#define ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonUtilConcurrentFutures_RESTRICT
#if ComGoogleCommonUtilConcurrentFutures_$6_INCLUDE
#define ComGoogleCommonUtilConcurrentFutures_FutureCombiner_INCLUDE 1
#endif
#if ComGoogleCommonUtilConcurrentFutures_ImmediateFailedCheckedFuture_INCLUDE
#define ComGoogleCommonUtilConcurrentFutures_ImmediateFuture_INCLUDE 1
#endif
#if ComGoogleCommonUtilConcurrentFutures_ImmediateCancelledFuture_INCLUDE
#define ComGoogleCommonUtilConcurrentFutures_ImmediateFuture_INCLUDE 1
#endif
#if ComGoogleCommonUtilConcurrentFutures_ImmediateFailedFuture_INCLUDE
#define ComGoogleCommonUtilConcurrentFutures_ImmediateFuture_INCLUDE 1
#endif
#if ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulCheckedFuture_INCLUDE
#define ComGoogleCommonUtilConcurrentFutures_ImmediateFuture_INCLUDE 1
#endif
#if ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulFuture_INCLUDE
#define ComGoogleCommonUtilConcurrentFutures_ImmediateFuture_INCLUDE 1
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_

@class ComGoogleCommonCollectImmutableList;
@class ComGoogleCommonCollectOrdering;
@class IOSClass;
@class IOSObjectArray;
@class JavaLangException;
@class JavaLangReflectConstructor;
@class JavaLangThrowable;
@class JavaUtilConcurrentTimeUnitEnum;
@protocol ComGoogleCommonBaseFunction;
@protocol ComGoogleCommonUtilConcurrentAsyncFunction;
@protocol ComGoogleCommonUtilConcurrentCheckedFuture;
@protocol ComGoogleCommonUtilConcurrentFutureCallback;
@protocol ComGoogleCommonUtilConcurrentFutureFallback;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;
@protocol JavaLangIterable;
@protocol JavaUtilConcurrentExecutor;
@protocol JavaUtilConcurrentFuture;
@protocol JavaUtilList;


@interface ComGoogleCommonUtilConcurrentFutures : NSObject {
}

+ (id<ComGoogleCommonUtilConcurrentCheckedFuture>)makeCheckedWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)future
                                                                               withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)mapper;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)immediateFutureWithId:(id)value;

+ (id<ComGoogleCommonUtilConcurrentCheckedFuture>)immediateCheckedFutureWithId:(id)value;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)immediateFailedFutureWithJavaLangThrowable:(JavaLangThrowable *)throwable;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)immediateCancelledFuture;

+ (id<ComGoogleCommonUtilConcurrentCheckedFuture>)immediateFailedCheckedFutureWithJavaLangException:(JavaLangException *)exception;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)withFallbackWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                   withComGoogleCommonUtilConcurrentFutureFallback:(id<ComGoogleCommonUtilConcurrentFutureFallback>)fallback;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)withFallbackWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                   withComGoogleCommonUtilConcurrentFutureFallback:(id<ComGoogleCommonUtilConcurrentFutureFallback>)fallback
                                                                                    withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)transformWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                 withComGoogleCommonUtilConcurrentAsyncFunction:(id<ComGoogleCommonUtilConcurrentAsyncFunction>)function;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)transformWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                 withComGoogleCommonUtilConcurrentAsyncFunction:(id<ComGoogleCommonUtilConcurrentAsyncFunction>)function
                                                                                 withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)transformWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                                withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)function;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)transformWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                                                                                withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)function
                                                                                 withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

+ (id<JavaUtilConcurrentFuture>)lazyTransformWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)input
                                          withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)function;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)dereferenceWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)nested;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)allAsListWithComGoogleCommonUtilConcurrentListenableFutureArray:(IOSObjectArray *)futures;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)allAsListWithJavaLangIterable:(id<JavaLangIterable>)futures;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)successfulAsListWithComGoogleCommonUtilConcurrentListenableFutureArray:(IOSObjectArray *)futures;

+ (id<ComGoogleCommonUtilConcurrentListenableFuture>)successfulAsListWithJavaLangIterable:(id<JavaLangIterable>)futures;

+ (void)addCallbackWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)future
                     withComGoogleCommonUtilConcurrentFutureCallback:(id<ComGoogleCommonUtilConcurrentFutureCallback>)callback;

+ (void)addCallbackWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)future
                     withComGoogleCommonUtilConcurrentFutureCallback:(id<ComGoogleCommonUtilConcurrentFutureCallback>)callback
                                      withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

+ (id)getWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                         withIOSClass:(IOSClass *)exceptionClass;

+ (id)getWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future
                             withLong:(jlong)timeout
   withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit
                         withIOSClass:(IOSClass *)exceptionClass;

+ (id)getUncheckedWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)future;

@end

FOUNDATION_EXPORT BOOL ComGoogleCommonUtilConcurrentFutures_initialized;
J2OBJC_STATIC_INIT(ComGoogleCommonUtilConcurrentFutures)
FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentCheckedFuture> ComGoogleCommonUtilConcurrentFutures_makeCheckedWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_(id<ComGoogleCommonUtilConcurrentListenableFuture> future, id<ComGoogleCommonBaseFunction> mapper);
FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_immediateFutureWithId_(id value);
FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentCheckedFuture> ComGoogleCommonUtilConcurrentFutures_immediateCheckedFutureWithId_(id value);
FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_immediateFailedFutureWithJavaLangThrowable_(JavaLangThrowable *throwable);
FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_immediateCancelledFuture();
FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentCheckedFuture> ComGoogleCommonUtilConcurrentFutures_immediateFailedCheckedFutureWithJavaLangException_(JavaLangException *exception);
FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_withFallbackWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonUtilConcurrentFutureFallback_(id<ComGoogleCommonUtilConcurrentListenableFuture> input, id<ComGoogleCommonUtilConcurrentFutureFallback> fallback);
FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_withFallbackWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonUtilConcurrentFutureFallback_withJavaUtilConcurrentExecutor_(id<ComGoogleCommonUtilConcurrentListenableFuture> input, id<ComGoogleCommonUtilConcurrentFutureFallback> fallback, id<JavaUtilConcurrentExecutor> executor);
FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_transformWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonUtilConcurrentAsyncFunction_(id<ComGoogleCommonUtilConcurrentListenableFuture> input, id<ComGoogleCommonUtilConcurrentAsyncFunction> function);
FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_transformWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonUtilConcurrentAsyncFunction_withJavaUtilConcurrentExecutor_(id<ComGoogleCommonUtilConcurrentListenableFuture> input, id<ComGoogleCommonUtilConcurrentAsyncFunction> function, id<JavaUtilConcurrentExecutor> executor);
FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_transformWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_(id<ComGoogleCommonUtilConcurrentListenableFuture> input, id<ComGoogleCommonBaseFunction> function);
FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_transformWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonBaseFunction_withJavaUtilConcurrentExecutor_(id<ComGoogleCommonUtilConcurrentListenableFuture> input, id<ComGoogleCommonBaseFunction> function, id<JavaUtilConcurrentExecutor> executor);
FOUNDATION_EXPORT id<JavaUtilConcurrentFuture> ComGoogleCommonUtilConcurrentFutures_lazyTransformWithJavaUtilConcurrentFuture_withComGoogleCommonBaseFunction_(id<JavaUtilConcurrentFuture> input, id<ComGoogleCommonBaseFunction> function);
FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_dereferenceWithComGoogleCommonUtilConcurrentListenableFuture_(id<ComGoogleCommonUtilConcurrentListenableFuture> nested);
FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_allAsListWithComGoogleCommonUtilConcurrentListenableFutureArray_(IOSObjectArray *futures);
FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_allAsListWithJavaLangIterable_(id<JavaLangIterable> futures);
FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_successfulAsListWithComGoogleCommonUtilConcurrentListenableFutureArray_(IOSObjectArray *futures);
FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentListenableFuture> ComGoogleCommonUtilConcurrentFutures_successfulAsListWithJavaLangIterable_(id<JavaLangIterable> futures);
FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentFutures_addCallbackWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonUtilConcurrentFutureCallback_(id<ComGoogleCommonUtilConcurrentListenableFuture> future, id<ComGoogleCommonUtilConcurrentFutureCallback> callback);
FOUNDATION_EXPORT void ComGoogleCommonUtilConcurrentFutures_addCallbackWithComGoogleCommonUtilConcurrentListenableFuture_withComGoogleCommonUtilConcurrentFutureCallback_withJavaUtilConcurrentExecutor_(id<ComGoogleCommonUtilConcurrentListenableFuture> future, id<ComGoogleCommonUtilConcurrentFutureCallback> callback, id<JavaUtilConcurrentExecutor> executor);
FOUNDATION_EXPORT id ComGoogleCommonUtilConcurrentFutures_getWithJavaUtilConcurrentFuture_withIOSClass_(id<JavaUtilConcurrentFuture> future, IOSClass *exceptionClass);
FOUNDATION_EXPORT id ComGoogleCommonUtilConcurrentFutures_getWithJavaUtilConcurrentFuture_withLong_withJavaUtilConcurrentTimeUnitEnum_withIOSClass_(id<JavaUtilConcurrentFuture> future, jlong timeout, JavaUtilConcurrentTimeUnitEnum *unit, IOSClass *exceptionClass);
FOUNDATION_EXPORT id ComGoogleCommonUtilConcurrentFutures_getUncheckedWithJavaUtilConcurrentFuture_(id<JavaUtilConcurrentFuture> future);

FOUNDATION_EXPORT id<ComGoogleCommonUtilConcurrentAsyncFunction> ComGoogleCommonUtilConcurrentFutures_DEREFERENCER_;
J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonUtilConcurrentFutures, DEREFERENCER_, id<ComGoogleCommonUtilConcurrentAsyncFunction>)

FOUNDATION_EXPORT ComGoogleCommonCollectOrdering *ComGoogleCommonUtilConcurrentFutures_WITH_STRING_PARAM_FIRST_;
J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonUtilConcurrentFutures, WITH_STRING_PARAM_FIRST_, ComGoogleCommonCollectOrdering *)
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_ImmediateFuture_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_ImmediateFuture_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_ImmediateFuture_

@class JavaUtilConcurrentTimeUnitEnum;
@class JavaUtilLoggingLogger;
@protocol JavaLangRunnable;
@protocol JavaUtilConcurrentExecutor;

#define ComGoogleCommonUtilConcurrentListenableFuture_RESTRICT 1
#define ComGoogleCommonUtilConcurrentListenableFuture_INCLUDE 1
#include "com/google/common/util/concurrent/ListenableFuture.h"


@interface ComGoogleCommonUtilConcurrentFutures_ImmediateFuture : NSObject < ComGoogleCommonUtilConcurrentListenableFuture > {
}

- (void)addListenerWithJavaLangRunnable:(id<JavaLangRunnable>)listener
         withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

- (jboolean)cancelWithBoolean:(jboolean)mayInterruptIfRunning;

- (id)get;

- (id)getWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (jboolean)isCancelled;

- (jboolean)isDone;

@end

FOUNDATION_EXPORT BOOL ComGoogleCommonUtilConcurrentFutures_ImmediateFuture_initialized;
J2OBJC_STATIC_INIT(ComGoogleCommonUtilConcurrentFutures_ImmediateFuture)

FOUNDATION_EXPORT JavaUtilLoggingLogger *ComGoogleCommonUtilConcurrentFutures_ImmediateFuture_log_;
J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonUtilConcurrentFutures_ImmediateFuture, log_, JavaUtilLoggingLogger *)
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulFuture_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulFuture_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulFuture_


@interface ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulFuture : ComGoogleCommonUtilConcurrentFutures_ImmediateFuture {
}

- (instancetype)initWithId:(id)value;

- (id)get;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulFuture_init() {}
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulCheckedFuture_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulCheckedFuture_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulCheckedFuture_

@class JavaUtilConcurrentTimeUnitEnum;

#define ComGoogleCommonUtilConcurrentCheckedFuture_RESTRICT 1
#define ComGoogleCommonUtilConcurrentCheckedFuture_INCLUDE 1
#include "com/google/common/util/concurrent/CheckedFuture.h"


@interface ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulCheckedFuture : ComGoogleCommonUtilConcurrentFutures_ImmediateFuture < ComGoogleCommonUtilConcurrentCheckedFuture > {
}

- (instancetype)initWithId:(id)value;

- (id)get;

- (id)checkedGet;

- (id)checkedGetWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentFutures_ImmediateSuccessfulCheckedFuture_init() {}
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_ImmediateFailedFuture_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_ImmediateFailedFuture_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_ImmediateFailedFuture_

@class JavaLangThrowable;


@interface ComGoogleCommonUtilConcurrentFutures_ImmediateFailedFuture : ComGoogleCommonUtilConcurrentFutures_ImmediateFuture {
}

- (instancetype)initWithJavaLangThrowable:(JavaLangThrowable *)thrown;

- (id)get;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentFutures_ImmediateFailedFuture_init() {}
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_ImmediateCancelledFuture_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_ImmediateCancelledFuture_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_ImmediateCancelledFuture_

@class JavaUtilConcurrentCancellationException;


@interface ComGoogleCommonUtilConcurrentFutures_ImmediateCancelledFuture : ComGoogleCommonUtilConcurrentFutures_ImmediateFuture {
}

- (instancetype)init;

- (jboolean)isCancelled;

- (id)get;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentFutures_ImmediateCancelledFuture_init() {}
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_ImmediateFailedCheckedFuture_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_ImmediateFailedCheckedFuture_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_ImmediateFailedCheckedFuture_

@class JavaLangException;
@class JavaUtilConcurrentTimeUnitEnum;

#define ComGoogleCommonUtilConcurrentCheckedFuture_RESTRICT 1
#define ComGoogleCommonUtilConcurrentCheckedFuture_INCLUDE 1
#include "com/google/common/util/concurrent/CheckedFuture.h"


@interface ComGoogleCommonUtilConcurrentFutures_ImmediateFailedCheckedFuture : ComGoogleCommonUtilConcurrentFutures_ImmediateFuture < ComGoogleCommonUtilConcurrentCheckedFuture > {
}

- (instancetype)initWithJavaLangException:(JavaLangException *)thrown;

- (id)get;

- (id)checkedGet;

- (id)checkedGetWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentFutures_ImmediateFailedCheckedFuture_init() {}
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_FallbackFuture_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_FallbackFuture_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_FallbackFuture_

@protocol ComGoogleCommonUtilConcurrentFutureFallback;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;
@protocol JavaUtilConcurrentExecutor;

#define ComGoogleCommonUtilConcurrentAbstractFuture_RESTRICT 1
#define ComGoogleCommonUtilConcurrentAbstractFuture_INCLUDE 1
#include "com/google/common/util/concurrent/AbstractFuture.h"


@interface ComGoogleCommonUtilConcurrentFutures_FallbackFuture : ComGoogleCommonUtilConcurrentAbstractFuture {
}

- (instancetype)initWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input
                      withComGoogleCommonUtilConcurrentFutureFallback:(id<ComGoogleCommonUtilConcurrentFutureFallback>)fallback
                                       withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)executor;

- (jboolean)cancelWithBoolean:(jboolean)mayInterruptIfRunning;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentFutures_FallbackFuture_init() {}
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1_

@class ComGoogleCommonUtilConcurrentFutures_FallbackFuture;
@class JavaLangThrowable;
@protocol ComGoogleCommonUtilConcurrentFutureFallback;

#define ComGoogleCommonUtilConcurrentFutureCallback_RESTRICT 1
#define ComGoogleCommonUtilConcurrentFutureCallback_INCLUDE 1
#include "com/google/common/util/concurrent/FutureCallback.h"


@interface ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1 : NSObject < ComGoogleCommonUtilConcurrentFutureCallback > {
}

- (void)onSuccessWithId:(id)value;

- (void)onFailureWithJavaLangThrowable:(JavaLangThrowable *)t;

- (instancetype)initWithComGoogleCommonUtilConcurrentFutures_FallbackFuture:(ComGoogleCommonUtilConcurrentFutures_FallbackFuture *)outer$
                            withComGoogleCommonUtilConcurrentFutureFallback:(id<ComGoogleCommonUtilConcurrentFutureFallback>)capture$0;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1_init() {}
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1_$1_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1_$1_

@class ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1;
@class JavaLangThrowable;

#define ComGoogleCommonUtilConcurrentFutureCallback_RESTRICT 1
#define ComGoogleCommonUtilConcurrentFutureCallback_INCLUDE 1
#include "com/google/common/util/concurrent/FutureCallback.h"


@interface ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1_$1 : NSObject < ComGoogleCommonUtilConcurrentFutureCallback > {
}

- (void)onSuccessWithId:(id)value;

- (void)onFailureWithJavaLangThrowable:(JavaLangThrowable *)t;

- (instancetype)initWithComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1:(ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1 *)outer$;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentFutures_FallbackFuture_$1_$1_init() {}
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture_

@class JavaUtilConcurrentCountDownLatch;
@protocol ComGoogleCommonUtilConcurrentAsyncFunction;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;
@protocol JavaUtilConcurrentFuture;

#define ComGoogleCommonUtilConcurrentAbstractFuture_RESTRICT 1
#define ComGoogleCommonUtilConcurrentAbstractFuture_INCLUDE 1
#include "com/google/common/util/concurrent/AbstractFuture.h"

#define JavaLangRunnable_RESTRICT 1
#define JavaLangRunnable_INCLUDE 1
#include "java/lang/Runnable.h"


@interface ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture : ComGoogleCommonUtilConcurrentAbstractFuture < JavaLangRunnable > {
}

- (jboolean)cancelWithBoolean:(jboolean)mayInterruptIfRunning;

- (void)run;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture_init() {}
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture_$1_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture_$1_

@class ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;

#define JavaLangRunnable_RESTRICT 1
#define JavaLangRunnable_INCLUDE 1
#include "java/lang/Runnable.h"


@interface ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture_$1 : NSObject < JavaLangRunnable > {
}

- (void)run;

- (instancetype)initWithComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture:(ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture *)outer$
                                    withComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)capture$0;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentFutures_ChainingListenableFuture_$1_init() {}
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_CombinedFuture_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_CombinedFuture_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_CombinedFuture_

@class ComGoogleCommonCollectImmutableCollection;
@class JavaUtilConcurrentAtomicAtomicInteger;
@protocol ComGoogleCommonUtilConcurrentFutures_FutureCombiner;
@protocol JavaUtilConcurrentExecutor;
@protocol JavaUtilConcurrentFuture;
@protocol JavaUtilList;

#define ComGoogleCommonUtilConcurrentAbstractFuture_RESTRICT 1
#define ComGoogleCommonUtilConcurrentAbstractFuture_INCLUDE 1
#include "com/google/common/util/concurrent/AbstractFuture.h"


@interface ComGoogleCommonUtilConcurrentFutures_CombinedFuture : ComGoogleCommonUtilConcurrentAbstractFuture {
 @public
  ComGoogleCommonCollectImmutableCollection *futures_;
  jboolean allMustSucceed_;
  JavaUtilConcurrentAtomicAtomicInteger *remaining_;
  id<ComGoogleCommonUtilConcurrentFutures_FutureCombiner> combiner_;
  id<JavaUtilList> values_;
}

- (instancetype)initWithComGoogleCommonCollectImmutableCollection:(ComGoogleCommonCollectImmutableCollection *)futures
                                                      withBoolean:(jboolean)allMustSucceed
                                   withJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)listenerExecutor
          withComGoogleCommonUtilConcurrentFutures_FutureCombiner:(id<ComGoogleCommonUtilConcurrentFutures_FutureCombiner>)combiner;

- (void)init__WithJavaUtilConcurrentExecutor:(id<JavaUtilConcurrentExecutor>)listenerExecutor OBJC_METHOD_FAMILY_NONE;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentFutures_CombinedFuture_init() {}

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_CombinedFuture, futures_, ComGoogleCommonCollectImmutableCollection *)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_CombinedFuture, remaining_, JavaUtilConcurrentAtomicAtomicInteger *)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_CombinedFuture, combiner_, id<ComGoogleCommonUtilConcurrentFutures_FutureCombiner>)
J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_CombinedFuture, values_, id<JavaUtilList>)
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_CombinedFuture_$1_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_CombinedFuture_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_CombinedFuture_$1_

@class ComGoogleCommonUtilConcurrentFutures_CombinedFuture;

#define JavaLangRunnable_RESTRICT 1
#define JavaLangRunnable_INCLUDE 1
#include "java/lang/Runnable.h"


@interface ComGoogleCommonUtilConcurrentFutures_CombinedFuture_$1 : NSObject < JavaLangRunnable > {
}

- (void)run;

- (instancetype)initWithComGoogleCommonUtilConcurrentFutures_CombinedFuture:(ComGoogleCommonUtilConcurrentFutures_CombinedFuture *)outer$;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentFutures_CombinedFuture_$1_init() {}
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_CombinedFuture_$2_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_CombinedFuture_$2_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_CombinedFuture_$2_

@class ComGoogleCommonUtilConcurrentFutures_CombinedFuture;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;

#define JavaLangRunnable_RESTRICT 1
#define JavaLangRunnable_INCLUDE 1
#include "java/lang/Runnable.h"


@interface ComGoogleCommonUtilConcurrentFutures_CombinedFuture_$2 : NSObject < JavaLangRunnable > {
}

- (void)run;

- (instancetype)initWithComGoogleCommonUtilConcurrentFutures_CombinedFuture:(ComGoogleCommonUtilConcurrentFutures_CombinedFuture *)outer$
                                                                    withInt:(jint)capture$0
                          withComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)capture$1;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentFutures_CombinedFuture_$2_init() {}
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture_

@class JavaLangException;
@protocol ComGoogleCommonBaseFunction;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;

#define ComGoogleCommonUtilConcurrentAbstractCheckedFuture_RESTRICT 1
#define ComGoogleCommonUtilConcurrentAbstractCheckedFuture_INCLUDE 1
#include "com/google/common/util/concurrent/AbstractCheckedFuture.h"


@interface ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture : ComGoogleCommonUtilConcurrentAbstractCheckedFuture {
 @public
  id<ComGoogleCommonBaseFunction> mapper_;
}

- (instancetype)initWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)delegate
                                      withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)mapper;

- (id)mapExceptionWithJavaLangException:(JavaLangException *)e;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture_init() {}

J2OBJC_FIELD_SETTER(ComGoogleCommonUtilConcurrentFutures_MappingCheckedFuture, mapper_, id<ComGoogleCommonBaseFunction>)
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_$1_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_$1_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_$1_

@protocol ComGoogleCommonBaseFunction;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;

#define ComGoogleCommonUtilConcurrentAsyncFunction_RESTRICT 1
#define ComGoogleCommonUtilConcurrentAsyncFunction_INCLUDE 1
#include "com/google/common/util/concurrent/AsyncFunction.h"


@interface ComGoogleCommonUtilConcurrentFutures_$1 : NSObject < ComGoogleCommonUtilConcurrentAsyncFunction > {
}

- (id<ComGoogleCommonUtilConcurrentListenableFuture>)applyWithId:(id)input;

- (instancetype)initWithComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)capture$0;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentFutures_$1_init() {}
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_$2_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_$2_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_$2_

@class JavaUtilConcurrentTimeUnitEnum;
@protocol ComGoogleCommonBaseFunction;

#define JavaUtilConcurrentFuture_RESTRICT 1
#define JavaUtilConcurrentFuture_INCLUDE 1
#include "java/util/concurrent/Future.h"


@interface ComGoogleCommonUtilConcurrentFutures_$2 : NSObject < JavaUtilConcurrentFuture > {
}

- (jboolean)cancelWithBoolean:(jboolean)mayInterruptIfRunning;

- (jboolean)isCancelled;

- (jboolean)isDone;

- (id)get;

- (id)getWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (instancetype)initWithJavaUtilConcurrentFuture:(id<JavaUtilConcurrentFuture>)capture$0
                 withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)capture$1;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentFutures_$2_init() {}
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_$3_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_$3_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_$3_

@protocol ComGoogleCommonUtilConcurrentListenableFuture;

#define ComGoogleCommonUtilConcurrentAsyncFunction_RESTRICT 1
#define ComGoogleCommonUtilConcurrentAsyncFunction_INCLUDE 1
#include "com/google/common/util/concurrent/AsyncFunction.h"


@interface ComGoogleCommonUtilConcurrentFutures_$3 : NSObject < ComGoogleCommonUtilConcurrentAsyncFunction > {
}

- (id<ComGoogleCommonUtilConcurrentListenableFuture>)applyWithId:(id<ComGoogleCommonUtilConcurrentListenableFuture>)input;

- (instancetype)init;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentFutures_$3_init() {}
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_$4_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_$4_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_$4_

@protocol ComGoogleCommonUtilConcurrentFutureCallback;
@protocol ComGoogleCommonUtilConcurrentListenableFuture;

#define JavaLangRunnable_RESTRICT 1
#define JavaLangRunnable_INCLUDE 1
#include "java/lang/Runnable.h"


@interface ComGoogleCommonUtilConcurrentFutures_$4 : NSObject < JavaLangRunnable > {
}

- (void)run;

- (instancetype)initWithComGoogleCommonUtilConcurrentListenableFuture:(id<ComGoogleCommonUtilConcurrentListenableFuture>)capture$0
                      withComGoogleCommonUtilConcurrentFutureCallback:(id<ComGoogleCommonUtilConcurrentFutureCallback>)capture$1;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentFutures_$4_init() {}
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_$5_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_$5_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_$5_

@class JavaLangBoolean;
@class JavaLangReflectConstructor;

#define ComGoogleCommonBaseFunction_RESTRICT 1
#define ComGoogleCommonBaseFunction_INCLUDE 1
#include "com/google/common/base/Function.h"


@interface ComGoogleCommonUtilConcurrentFutures_$5 : NSObject < ComGoogleCommonBaseFunction > {
}

- (JavaLangBoolean *)applyWithId:(JavaLangReflectConstructor *)input;

- (instancetype)init;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentFutures_$5_init() {}
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_FutureCombiner_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_FutureCombiner_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_FutureCombiner_

@protocol JavaUtilList;


@protocol ComGoogleCommonUtilConcurrentFutures_FutureCombiner < NSObject, JavaObject >

- (id)combineWithJavaUtilList:(id<JavaUtilList>)values;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentFutures_FutureCombiner_init() {}
#endif
#if !defined (_ComGoogleCommonUtilConcurrentFutures_$6_) && (ComGoogleCommonUtilConcurrentFutures_INCLUDE_ALL || ComGoogleCommonUtilConcurrentFutures_$6_INCLUDE)
#define _ComGoogleCommonUtilConcurrentFutures_$6_

@protocol JavaUtilList;


@interface ComGoogleCommonUtilConcurrentFutures_$6 : NSObject < ComGoogleCommonUtilConcurrentFutures_FutureCombiner > {
}

- (id<JavaUtilList>)combineWithJavaUtilList:(id<JavaUtilList>)values;

- (instancetype)init;

@end

__attribute__((always_inline)) inline void ComGoogleCommonUtilConcurrentFutures_$6_init() {}
#endif
