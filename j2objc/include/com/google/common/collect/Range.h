//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kstanger/j2objc-0.9.5/j2objc/guava/sources/com/google/common/collect/Range.java
//

#import "JreEmulation.h"

#if !ComGoogleCommonCollectRange_RESTRICT
#define ComGoogleCommonCollectRange_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonCollectRange_RESTRICT
#if !defined (_ComGoogleCommonCollectRange_) && (ComGoogleCommonCollectRange_INCLUDE_ALL || ComGoogleCommonCollectRange_INCLUDE)
#define _ComGoogleCommonCollectRange_

@class ComGoogleCommonCollectBoundTypeEnum;
@class ComGoogleCommonCollectContiguousSet;
@class ComGoogleCommonCollectCut;
@class ComGoogleCommonCollectDiscreteDomain;
@class ComGoogleCommonCollectOrdering;
@protocol ComGoogleCommonBaseFunction;
@protocol JavaLangComparable;
@protocol JavaLangIterable;
@protocol JavaUtilSortedSet;

#define ComGoogleCommonBasePredicate_RESTRICT 1
#define ComGoogleCommonBasePredicate_INCLUDE 1
#include "com/google/common/base/Predicate.h"

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "java/io/Serializable.h"


#define ComGoogleCommonCollectRange_serialVersionUID 0LL

@interface ComGoogleCommonCollectRange : NSObject < ComGoogleCommonBasePredicate, JavaIoSerializable > {
 @public
  ComGoogleCommonCollectCut *lowerBound_;
  ComGoogleCommonCollectCut *upperBound_;
}

+ (id<ComGoogleCommonBaseFunction>)lowerBoundFn;

+ (id<ComGoogleCommonBaseFunction>)upperBoundFn;

+ (ComGoogleCommonCollectRange *)createWithComGoogleCommonCollectCut:(ComGoogleCommonCollectCut *)lowerBound
                                       withComGoogleCommonCollectCut:(ComGoogleCommonCollectCut *)upperBound;

+ (ComGoogleCommonCollectRange *)openWithJavaLangComparable:(id<JavaLangComparable>)lower
                                     withJavaLangComparable:(id<JavaLangComparable>)upper;

+ (ComGoogleCommonCollectRange *)closedWithJavaLangComparable:(id<JavaLangComparable>)lower
                                       withJavaLangComparable:(id<JavaLangComparable>)upper;

+ (ComGoogleCommonCollectRange *)closedOpenWithJavaLangComparable:(id<JavaLangComparable>)lower
                                           withJavaLangComparable:(id<JavaLangComparable>)upper;

+ (ComGoogleCommonCollectRange *)openClosedWithJavaLangComparable:(id<JavaLangComparable>)lower
                                           withJavaLangComparable:(id<JavaLangComparable>)upper;

+ (ComGoogleCommonCollectRange *)rangeWithJavaLangComparable:(id<JavaLangComparable>)lower
                     withComGoogleCommonCollectBoundTypeEnum:(ComGoogleCommonCollectBoundTypeEnum *)lowerType
                                      withJavaLangComparable:(id<JavaLangComparable>)upper
                     withComGoogleCommonCollectBoundTypeEnum:(ComGoogleCommonCollectBoundTypeEnum *)upperType;

+ (ComGoogleCommonCollectRange *)lessThanWithJavaLangComparable:(id<JavaLangComparable>)endpoint;

+ (ComGoogleCommonCollectRange *)atMostWithJavaLangComparable:(id<JavaLangComparable>)endpoint;

+ (ComGoogleCommonCollectRange *)upToWithJavaLangComparable:(id<JavaLangComparable>)endpoint
                    withComGoogleCommonCollectBoundTypeEnum:(ComGoogleCommonCollectBoundTypeEnum *)boundType;

+ (ComGoogleCommonCollectRange *)greaterThanWithJavaLangComparable:(id<JavaLangComparable>)endpoint;

+ (ComGoogleCommonCollectRange *)atLeastWithJavaLangComparable:(id<JavaLangComparable>)endpoint;

+ (ComGoogleCommonCollectRange *)downToWithJavaLangComparable:(id<JavaLangComparable>)endpoint
                      withComGoogleCommonCollectBoundTypeEnum:(ComGoogleCommonCollectBoundTypeEnum *)boundType;

+ (ComGoogleCommonCollectRange *)all;

+ (ComGoogleCommonCollectRange *)singletonWithJavaLangComparable:(id<JavaLangComparable>)value;

+ (ComGoogleCommonCollectRange *)encloseAllWithJavaLangIterable:(id<JavaLangIterable>)values;

- (jboolean)hasLowerBound;

- (id)lowerEndpoint;

- (ComGoogleCommonCollectBoundTypeEnum *)lowerBoundType;

- (jboolean)hasUpperBound;

- (id)upperEndpoint;

- (ComGoogleCommonCollectBoundTypeEnum *)upperBoundType;

- (jboolean)isEmpty;

- (jboolean)containsWithJavaLangComparable:(id<JavaLangComparable>)value;

- (jboolean)applyWithId:(id<JavaLangComparable>)input;

- (jboolean)containsAllWithJavaLangIterable:(id<JavaLangIterable>)values;

- (jboolean)enclosesWithComGoogleCommonCollectRange:(ComGoogleCommonCollectRange *)other;

- (jboolean)isConnectedWithComGoogleCommonCollectRange:(ComGoogleCommonCollectRange *)other;

- (ComGoogleCommonCollectRange *)intersectionWithComGoogleCommonCollectRange:(ComGoogleCommonCollectRange *)connectedRange;

- (ComGoogleCommonCollectRange *)spanWithComGoogleCommonCollectRange:(ComGoogleCommonCollectRange *)other;

- (ComGoogleCommonCollectContiguousSet *)asSetWithComGoogleCommonCollectDiscreteDomain:(ComGoogleCommonCollectDiscreteDomain *)domain;

- (ComGoogleCommonCollectRange *)canonicalWithComGoogleCommonCollectDiscreteDomain:(ComGoogleCommonCollectDiscreteDomain *)domain;

- (jboolean)isEqual:(id)object;

- (NSUInteger)hash;

- (NSString *)description;

- (id)readResolve;

+ (jint)compareOrThrowWithJavaLangComparable:(id<JavaLangComparable>)left
                      withJavaLangComparable:(id<JavaLangComparable>)right;

@end

FOUNDATION_EXPORT BOOL ComGoogleCommonCollectRange_initialized;
J2OBJC_STATIC_INIT(ComGoogleCommonCollectRange)

J2OBJC_FIELD_SETTER(ComGoogleCommonCollectRange, lowerBound_, ComGoogleCommonCollectCut *)
J2OBJC_FIELD_SETTER(ComGoogleCommonCollectRange, upperBound_, ComGoogleCommonCollectCut *)
FOUNDATION_EXPORT id<ComGoogleCommonBaseFunction> ComGoogleCommonCollectRange_lowerBoundFn();
FOUNDATION_EXPORT id<ComGoogleCommonBaseFunction> ComGoogleCommonCollectRange_upperBoundFn();
FOUNDATION_EXPORT ComGoogleCommonCollectRange *ComGoogleCommonCollectRange_createWithComGoogleCommonCollectCut_withComGoogleCommonCollectCut_(ComGoogleCommonCollectCut *lowerBound, ComGoogleCommonCollectCut *upperBound);
FOUNDATION_EXPORT ComGoogleCommonCollectRange *ComGoogleCommonCollectRange_openWithJavaLangComparable_withJavaLangComparable_(id<JavaLangComparable> lower, id<JavaLangComparable> upper);
FOUNDATION_EXPORT ComGoogleCommonCollectRange *ComGoogleCommonCollectRange_closedWithJavaLangComparable_withJavaLangComparable_(id<JavaLangComparable> lower, id<JavaLangComparable> upper);
FOUNDATION_EXPORT ComGoogleCommonCollectRange *ComGoogleCommonCollectRange_closedOpenWithJavaLangComparable_withJavaLangComparable_(id<JavaLangComparable> lower, id<JavaLangComparable> upper);
FOUNDATION_EXPORT ComGoogleCommonCollectRange *ComGoogleCommonCollectRange_openClosedWithJavaLangComparable_withJavaLangComparable_(id<JavaLangComparable> lower, id<JavaLangComparable> upper);
FOUNDATION_EXPORT ComGoogleCommonCollectRange *ComGoogleCommonCollectRange_rangeWithJavaLangComparable_withComGoogleCommonCollectBoundTypeEnum_withJavaLangComparable_withComGoogleCommonCollectBoundTypeEnum_(id<JavaLangComparable> lower, ComGoogleCommonCollectBoundTypeEnum *lowerType, id<JavaLangComparable> upper, ComGoogleCommonCollectBoundTypeEnum *upperType);
FOUNDATION_EXPORT ComGoogleCommonCollectRange *ComGoogleCommonCollectRange_lessThanWithJavaLangComparable_(id<JavaLangComparable> endpoint);
FOUNDATION_EXPORT ComGoogleCommonCollectRange *ComGoogleCommonCollectRange_atMostWithJavaLangComparable_(id<JavaLangComparable> endpoint);
FOUNDATION_EXPORT ComGoogleCommonCollectRange *ComGoogleCommonCollectRange_upToWithJavaLangComparable_withComGoogleCommonCollectBoundTypeEnum_(id<JavaLangComparable> endpoint, ComGoogleCommonCollectBoundTypeEnum *boundType);
FOUNDATION_EXPORT ComGoogleCommonCollectRange *ComGoogleCommonCollectRange_greaterThanWithJavaLangComparable_(id<JavaLangComparable> endpoint);
FOUNDATION_EXPORT ComGoogleCommonCollectRange *ComGoogleCommonCollectRange_atLeastWithJavaLangComparable_(id<JavaLangComparable> endpoint);
FOUNDATION_EXPORT ComGoogleCommonCollectRange *ComGoogleCommonCollectRange_downToWithJavaLangComparable_withComGoogleCommonCollectBoundTypeEnum_(id<JavaLangComparable> endpoint, ComGoogleCommonCollectBoundTypeEnum *boundType);
FOUNDATION_EXPORT ComGoogleCommonCollectRange *ComGoogleCommonCollectRange_all();
FOUNDATION_EXPORT ComGoogleCommonCollectRange *ComGoogleCommonCollectRange_singletonWithJavaLangComparable_(id<JavaLangComparable> value);
FOUNDATION_EXPORT ComGoogleCommonCollectRange *ComGoogleCommonCollectRange_encloseAllWithJavaLangIterable_(id<JavaLangIterable> values);
FOUNDATION_EXPORT jint ComGoogleCommonCollectRange_compareOrThrowWithJavaLangComparable_withJavaLangComparable_(id<JavaLangComparable> left, id<JavaLangComparable> right);

FOUNDATION_EXPORT id<ComGoogleCommonBaseFunction> ComGoogleCommonCollectRange_LOWER_BOUND_FN_;
J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonCollectRange, LOWER_BOUND_FN_, id<ComGoogleCommonBaseFunction>)

FOUNDATION_EXPORT id<ComGoogleCommonBaseFunction> ComGoogleCommonCollectRange_UPPER_BOUND_FN_;
J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonCollectRange, UPPER_BOUND_FN_, id<ComGoogleCommonBaseFunction>)

FOUNDATION_EXPORT ComGoogleCommonCollectOrdering *ComGoogleCommonCollectRange_RANGE_LEX_ORDERING_;
J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonCollectRange, RANGE_LEX_ORDERING_, ComGoogleCommonCollectOrdering *)

FOUNDATION_EXPORT ComGoogleCommonCollectRange *ComGoogleCommonCollectRange_ALL_;
J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonCollectRange, ALL_, ComGoogleCommonCollectRange *)

J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonCollectRange, serialVersionUID, jlong)
#endif
#if !defined (_ComGoogleCommonCollectRange_$1_) && (ComGoogleCommonCollectRange_INCLUDE_ALL || ComGoogleCommonCollectRange_$1_INCLUDE)
#define _ComGoogleCommonCollectRange_$1_

@class ComGoogleCommonCollectCut;
@class ComGoogleCommonCollectRange;

#define ComGoogleCommonBaseFunction_RESTRICT 1
#define ComGoogleCommonBaseFunction_INCLUDE 1
#include "com/google/common/base/Function.h"


@interface ComGoogleCommonCollectRange_$1 : NSObject < ComGoogleCommonBaseFunction > {
}

- (ComGoogleCommonCollectCut *)applyWithId:(ComGoogleCommonCollectRange *)range;

- (instancetype)init;

@end

__attribute__((always_inline)) inline void ComGoogleCommonCollectRange_$1_init() {}
#endif
#if !defined (_ComGoogleCommonCollectRange_$2_) && (ComGoogleCommonCollectRange_INCLUDE_ALL || ComGoogleCommonCollectRange_$2_INCLUDE)
#define _ComGoogleCommonCollectRange_$2_

@class ComGoogleCommonCollectCut;
@class ComGoogleCommonCollectRange;

#define ComGoogleCommonBaseFunction_RESTRICT 1
#define ComGoogleCommonBaseFunction_INCLUDE 1
#include "com/google/common/base/Function.h"


@interface ComGoogleCommonCollectRange_$2 : NSObject < ComGoogleCommonBaseFunction > {
}

- (ComGoogleCommonCollectCut *)applyWithId:(ComGoogleCommonCollectRange *)range;

- (instancetype)init;

@end

__attribute__((always_inline)) inline void ComGoogleCommonCollectRange_$2_init() {}
#endif
#if !defined (_ComGoogleCommonCollectRange_$3_) && (ComGoogleCommonCollectRange_INCLUDE_ALL || ComGoogleCommonCollectRange_$3_INCLUDE)
#define _ComGoogleCommonCollectRange_$3_

@class ComGoogleCommonCollectRange;

#define ComGoogleCommonCollectOrdering_RESTRICT 1
#define ComGoogleCommonCollectOrdering_INCLUDE 1
#include "com/google/common/collect/Ordering.h"


@interface ComGoogleCommonCollectRange_$3 : ComGoogleCommonCollectOrdering {
}

- (jint)compareWithId:(ComGoogleCommonCollectRange *)left
               withId:(ComGoogleCommonCollectRange *)right;

- (instancetype)init;

@end

__attribute__((always_inline)) inline void ComGoogleCommonCollectRange_$3_init() {}
#endif
