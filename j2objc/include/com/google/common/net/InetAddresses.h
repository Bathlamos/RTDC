//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kstanger/j2objc-0.9.5/j2objc/guava/sources/com/google/common/net/InetAddresses.java
//

#import "JreEmulation.h"

#if !ComGoogleCommonNetInetAddresses_RESTRICT
#define ComGoogleCommonNetInetAddresses_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonNetInetAddresses_RESTRICT
#if !defined (_ComGoogleCommonNetInetAddresses_) && (ComGoogleCommonNetInetAddresses_INCLUDE_ALL || ComGoogleCommonNetInetAddresses_INCLUDE)
#define _ComGoogleCommonNetInetAddresses_

@class ComGoogleCommonNetInetAddresses_TeredoInfo;
@class IOSByteArray;
@class IOSIntArray;
@class JavaNetInet4Address;
@class JavaNetInet6Address;
@class JavaNetInetAddress;


#define ComGoogleCommonNetInetAddresses_IPV4_PART_COUNT 4
#define ComGoogleCommonNetInetAddresses_IPV6_PART_COUNT 8

@interface ComGoogleCommonNetInetAddresses : NSObject {
}

+ (JavaNetInetAddress *)forStringWithNSString:(NSString *)ipString;

+ (jboolean)isInetAddressWithNSString:(NSString *)ipString;

+ (NSString *)toAddrStringWithJavaNetInetAddress:(JavaNetInetAddress *)ip;

+ (NSString *)toUriStringWithJavaNetInetAddress:(JavaNetInetAddress *)ip;

+ (JavaNetInetAddress *)forUriStringWithNSString:(NSString *)hostAddr;

+ (jboolean)isUriInetAddressWithNSString:(NSString *)ipString;

+ (jboolean)isCompatIPv4AddressWithJavaNetInet6Address:(JavaNetInet6Address *)ip;

+ (JavaNetInet4Address *)getCompatIPv4AddressWithJavaNetInet6Address:(JavaNetInet6Address *)ip;

+ (jboolean)is6to4AddressWithJavaNetInet6Address:(JavaNetInet6Address *)ip;

+ (JavaNetInet4Address *)get6to4IPv4AddressWithJavaNetInet6Address:(JavaNetInet6Address *)ip;

+ (jboolean)isTeredoAddressWithJavaNetInet6Address:(JavaNetInet6Address *)ip;

+ (ComGoogleCommonNetInetAddresses_TeredoInfo *)getTeredoInfoWithJavaNetInet6Address:(JavaNetInet6Address *)ip;

+ (jboolean)isIsatapAddressWithJavaNetInet6Address:(JavaNetInet6Address *)ip;

+ (JavaNetInet4Address *)getIsatapIPv4AddressWithJavaNetInet6Address:(JavaNetInet6Address *)ip;

+ (jboolean)hasEmbeddedIPv4ClientAddressWithJavaNetInet6Address:(JavaNetInet6Address *)ip;

+ (JavaNetInet4Address *)getEmbeddedIPv4ClientAddressWithJavaNetInet6Address:(JavaNetInet6Address *)ip;

+ (jboolean)isMappedIPv4AddressWithNSString:(NSString *)ipString;

+ (JavaNetInet4Address *)getCoercedIPv4AddressWithJavaNetInetAddress:(JavaNetInetAddress *)ip;

+ (jint)coerceToIntegerWithJavaNetInetAddress:(JavaNetInetAddress *)ip;

+ (JavaNetInet4Address *)fromIntegerWithInt:(jint)address;

+ (JavaNetInetAddress *)fromLittleEndianByteArrayWithByteArray:(IOSByteArray *)addr;

+ (JavaNetInetAddress *)incrementWithJavaNetInetAddress:(JavaNetInetAddress *)address;

+ (jboolean)isMaximumWithJavaNetInetAddress:(JavaNetInetAddress *)address;

@end

FOUNDATION_EXPORT BOOL ComGoogleCommonNetInetAddresses_initialized;
J2OBJC_STATIC_INIT(ComGoogleCommonNetInetAddresses)
FOUNDATION_EXPORT JavaNetInetAddress *ComGoogleCommonNetInetAddresses_forStringWithNSString_(NSString *ipString);
FOUNDATION_EXPORT jboolean ComGoogleCommonNetInetAddresses_isInetAddressWithNSString_(NSString *ipString);
FOUNDATION_EXPORT NSString *ComGoogleCommonNetInetAddresses_toAddrStringWithJavaNetInetAddress_(JavaNetInetAddress *ip);
FOUNDATION_EXPORT NSString *ComGoogleCommonNetInetAddresses_toUriStringWithJavaNetInetAddress_(JavaNetInetAddress *ip);
FOUNDATION_EXPORT JavaNetInetAddress *ComGoogleCommonNetInetAddresses_forUriStringWithNSString_(NSString *hostAddr);
FOUNDATION_EXPORT jboolean ComGoogleCommonNetInetAddresses_isUriInetAddressWithNSString_(NSString *ipString);
FOUNDATION_EXPORT jboolean ComGoogleCommonNetInetAddresses_isCompatIPv4AddressWithJavaNetInet6Address_(JavaNetInet6Address *ip);
FOUNDATION_EXPORT JavaNetInet4Address *ComGoogleCommonNetInetAddresses_getCompatIPv4AddressWithJavaNetInet6Address_(JavaNetInet6Address *ip);
FOUNDATION_EXPORT jboolean ComGoogleCommonNetInetAddresses_is6to4AddressWithJavaNetInet6Address_(JavaNetInet6Address *ip);
FOUNDATION_EXPORT JavaNetInet4Address *ComGoogleCommonNetInetAddresses_get6to4IPv4AddressWithJavaNetInet6Address_(JavaNetInet6Address *ip);
FOUNDATION_EXPORT jboolean ComGoogleCommonNetInetAddresses_isTeredoAddressWithJavaNetInet6Address_(JavaNetInet6Address *ip);
FOUNDATION_EXPORT ComGoogleCommonNetInetAddresses_TeredoInfo *ComGoogleCommonNetInetAddresses_getTeredoInfoWithJavaNetInet6Address_(JavaNetInet6Address *ip);
FOUNDATION_EXPORT jboolean ComGoogleCommonNetInetAddresses_isIsatapAddressWithJavaNetInet6Address_(JavaNetInet6Address *ip);
FOUNDATION_EXPORT JavaNetInet4Address *ComGoogleCommonNetInetAddresses_getIsatapIPv4AddressWithJavaNetInet6Address_(JavaNetInet6Address *ip);
FOUNDATION_EXPORT jboolean ComGoogleCommonNetInetAddresses_hasEmbeddedIPv4ClientAddressWithJavaNetInet6Address_(JavaNetInet6Address *ip);
FOUNDATION_EXPORT JavaNetInet4Address *ComGoogleCommonNetInetAddresses_getEmbeddedIPv4ClientAddressWithJavaNetInet6Address_(JavaNetInet6Address *ip);
FOUNDATION_EXPORT jboolean ComGoogleCommonNetInetAddresses_isMappedIPv4AddressWithNSString_(NSString *ipString);
FOUNDATION_EXPORT JavaNetInet4Address *ComGoogleCommonNetInetAddresses_getCoercedIPv4AddressWithJavaNetInetAddress_(JavaNetInetAddress *ip);
FOUNDATION_EXPORT jint ComGoogleCommonNetInetAddresses_coerceToIntegerWithJavaNetInetAddress_(JavaNetInetAddress *ip);
FOUNDATION_EXPORT JavaNetInet4Address *ComGoogleCommonNetInetAddresses_fromIntegerWithInt_(jint address);
FOUNDATION_EXPORT JavaNetInetAddress *ComGoogleCommonNetInetAddresses_fromLittleEndianByteArrayWithByteArray_(IOSByteArray *addr);
FOUNDATION_EXPORT JavaNetInetAddress *ComGoogleCommonNetInetAddresses_incrementWithJavaNetInetAddress_(JavaNetInetAddress *address);
FOUNDATION_EXPORT jboolean ComGoogleCommonNetInetAddresses_isMaximumWithJavaNetInetAddress_(JavaNetInetAddress *address);

J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonNetInetAddresses, IPV4_PART_COUNT, jint)

J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonNetInetAddresses, IPV6_PART_COUNT, jint)

FOUNDATION_EXPORT JavaNetInet4Address *ComGoogleCommonNetInetAddresses_LOOPBACK4_;
J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonNetInetAddresses, LOOPBACK4_, JavaNetInet4Address *)

FOUNDATION_EXPORT JavaNetInet4Address *ComGoogleCommonNetInetAddresses_ANY4_;
J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonNetInetAddresses, ANY4_, JavaNetInet4Address *)
#endif
#if !defined (_ComGoogleCommonNetInetAddresses_TeredoInfo_) && (ComGoogleCommonNetInetAddresses_INCLUDE_ALL || ComGoogleCommonNetInetAddresses_TeredoInfo_INCLUDE)
#define _ComGoogleCommonNetInetAddresses_TeredoInfo_

@class JavaNetInet4Address;


@interface ComGoogleCommonNetInetAddresses_TeredoInfo : NSObject {
}

- (instancetype)initWithJavaNetInet4Address:(JavaNetInet4Address *)server
                    withJavaNetInet4Address:(JavaNetInet4Address *)client
                                    withInt:(jint)port
                                    withInt:(jint)flags;

- (JavaNetInet4Address *)getServer;

- (JavaNetInet4Address *)getClient;

- (jint)getPort;

- (jint)getFlags;

@end

__attribute__((always_inline)) inline void ComGoogleCommonNetInetAddresses_TeredoInfo_init() {}
#endif
