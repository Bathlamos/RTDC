//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kstanger/j2objc-0.9.5/j2objc/guava/sources/com/google/common/primitives/Floats.java
//

#import "JreEmulation.h"

#if !ComGoogleCommonPrimitivesFloats_RESTRICT
#define ComGoogleCommonPrimitivesFloats_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonPrimitivesFloats_RESTRICT
#if !defined (_ComGoogleCommonPrimitivesFloats_) && (ComGoogleCommonPrimitivesFloats_INCLUDE_ALL || ComGoogleCommonPrimitivesFloats_INCLUDE)
#define _ComGoogleCommonPrimitivesFloats_

@class IOSFloatArray;
@class IOSObjectArray;
@class JavaLangFloat;
@protocol JavaUtilCollection;
@protocol JavaUtilComparator;
@protocol JavaUtilList;


#define ComGoogleCommonPrimitivesFloats_BYTES 4

@interface ComGoogleCommonPrimitivesFloats : NSObject {
}

+ (jint)hashCodeWithFloat:(jfloat)value;

+ (jint)compareWithFloat:(jfloat)a
               withFloat:(jfloat)b;

+ (jboolean)isFiniteWithFloat:(jfloat)value;

+ (jboolean)containsWithFloatArray:(IOSFloatArray *)array
                         withFloat:(jfloat)target;

+ (jint)indexOfWithFloatArray:(IOSFloatArray *)array
                    withFloat:(jfloat)target;

+ (jint)indexOfWithFloatArray:(IOSFloatArray *)array
               withFloatArray:(IOSFloatArray *)target;

+ (jint)lastIndexOfWithFloatArray:(IOSFloatArray *)array
                        withFloat:(jfloat)target;

+ (jfloat)minWithFloatArray:(IOSFloatArray *)array;

+ (jfloat)maxWithFloatArray:(IOSFloatArray *)array;

+ (IOSFloatArray *)concatWithFloatArray2:(IOSObjectArray *)arrays;

+ (IOSFloatArray *)ensureCapacityWithFloatArray:(IOSFloatArray *)array
                                        withInt:(jint)minLength
                                        withInt:(jint)padding;

+ (NSString *)joinWithNSString:(NSString *)separator
                withFloatArray:(IOSFloatArray *)array;

+ (id<JavaUtilComparator>)lexicographicalComparator;

+ (IOSFloatArray *)toArrayWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

+ (id<JavaUtilList>)asListWithFloatArray:(IOSFloatArray *)backingArray;

+ (JavaLangFloat *)tryParseWithNSString:(NSString *)string;

@end

__attribute__((always_inline)) inline void ComGoogleCommonPrimitivesFloats_init() {}
FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesFloats_hashCodeWithFloat_(jfloat value);
FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesFloats_compareWithFloat_withFloat_(jfloat a, jfloat b);
FOUNDATION_EXPORT jboolean ComGoogleCommonPrimitivesFloats_isFiniteWithFloat_(jfloat value);
FOUNDATION_EXPORT jboolean ComGoogleCommonPrimitivesFloats_containsWithFloatArray_withFloat_(IOSFloatArray *array, jfloat target);
FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesFloats_indexOfWithFloatArray_withFloat_(IOSFloatArray *array, jfloat target);
FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesFloats_indexOfWithFloatArray_withFloatArray_(IOSFloatArray *array, IOSFloatArray *target);
FOUNDATION_EXPORT jint ComGoogleCommonPrimitivesFloats_lastIndexOfWithFloatArray_withFloat_(IOSFloatArray *array, jfloat target);
FOUNDATION_EXPORT jfloat ComGoogleCommonPrimitivesFloats_minWithFloatArray_(IOSFloatArray *array);
FOUNDATION_EXPORT jfloat ComGoogleCommonPrimitivesFloats_maxWithFloatArray_(IOSFloatArray *array);
FOUNDATION_EXPORT IOSFloatArray *ComGoogleCommonPrimitivesFloats_concatWithFloatArray2_(IOSObjectArray *arrays);
FOUNDATION_EXPORT IOSFloatArray *ComGoogleCommonPrimitivesFloats_ensureCapacityWithFloatArray_withInt_withInt_(IOSFloatArray *array, jint minLength, jint padding);
FOUNDATION_EXPORT NSString *ComGoogleCommonPrimitivesFloats_joinWithNSString_withFloatArray_(NSString *separator, IOSFloatArray *array);
FOUNDATION_EXPORT id<JavaUtilComparator> ComGoogleCommonPrimitivesFloats_lexicographicalComparator();
FOUNDATION_EXPORT IOSFloatArray *ComGoogleCommonPrimitivesFloats_toArrayWithJavaUtilCollection_(id<JavaUtilCollection> collection);
FOUNDATION_EXPORT id<JavaUtilList> ComGoogleCommonPrimitivesFloats_asListWithFloatArray_(IOSFloatArray *backingArray);
FOUNDATION_EXPORT JavaLangFloat *ComGoogleCommonPrimitivesFloats_tryParseWithNSString_(NSString *string);

J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonPrimitivesFloats, BYTES, jint)
#endif
#if !defined (_ComGoogleCommonPrimitivesFloats_LexicographicalComparatorEnum_) && (ComGoogleCommonPrimitivesFloats_INCLUDE_ALL || ComGoogleCommonPrimitivesFloats_LexicographicalComparatorEnum_INCLUDE)
#define _ComGoogleCommonPrimitivesFloats_LexicographicalComparatorEnum_

@class IOSFloatArray;

#define JavaLangEnum_RESTRICT 1
#define JavaLangEnum_INCLUDE 1
#include "java/lang/Enum.h"

#define JavaUtilComparator_RESTRICT 1
#define JavaUtilComparator_INCLUDE 1
#include "java/util/Comparator.h"


typedef NS_ENUM(NSUInteger, ComGoogleCommonPrimitivesFloats_LexicographicalComparator) {
  ComGoogleCommonPrimitivesFloats_LexicographicalComparator_INSTANCE = 0,
};

@interface ComGoogleCommonPrimitivesFloats_LexicographicalComparatorEnum : JavaLangEnum < NSCopying, JavaUtilComparator > {
}

- (jint)compareWithId:(IOSFloatArray *)left
               withId:(IOSFloatArray *)right;

+ (IOSObjectArray *)values;
FOUNDATION_EXPORT IOSObjectArray *ComGoogleCommonPrimitivesFloats_LexicographicalComparatorEnum_values();

+ (ComGoogleCommonPrimitivesFloats_LexicographicalComparatorEnum *)valueOfWithNSString:(NSString *)name;

FOUNDATION_EXPORT ComGoogleCommonPrimitivesFloats_LexicographicalComparatorEnum *ComGoogleCommonPrimitivesFloats_LexicographicalComparatorEnum_valueOfWithNSString_(NSString *name);- (id)copyWithZone:(NSZone *)zone;

@end

FOUNDATION_EXPORT BOOL ComGoogleCommonPrimitivesFloats_LexicographicalComparatorEnum_initialized;
J2OBJC_STATIC_INIT(ComGoogleCommonPrimitivesFloats_LexicographicalComparatorEnum)

FOUNDATION_EXPORT ComGoogleCommonPrimitivesFloats_LexicographicalComparatorEnum *ComGoogleCommonPrimitivesFloats_LexicographicalComparatorEnum_values_[];

#define ComGoogleCommonPrimitivesFloats_LexicographicalComparatorEnum_INSTANCE ComGoogleCommonPrimitivesFloats_LexicographicalComparatorEnum_values_[ComGoogleCommonPrimitivesFloats_LexicographicalComparator_INSTANCE]
J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonPrimitivesFloats_LexicographicalComparatorEnum, INSTANCE, ComGoogleCommonPrimitivesFloats_LexicographicalComparatorEnum *)
#endif
#if !defined (_ComGoogleCommonPrimitivesFloats_FloatArrayAsList_) && (ComGoogleCommonPrimitivesFloats_INCLUDE_ALL || ComGoogleCommonPrimitivesFloats_FloatArrayAsList_INCLUDE)
#define _ComGoogleCommonPrimitivesFloats_FloatArrayAsList_

@class IOSFloatArray;
@class JavaLangFloat;
@protocol JavaUtilList;

#define JavaUtilAbstractList_RESTRICT 1
#define JavaUtilAbstractList_INCLUDE 1
#include "java/util/AbstractList.h"

#define JavaUtilRandomAccess_RESTRICT 1
#define JavaUtilRandomAccess_INCLUDE 1
#include "java/util/RandomAccess.h"

#define JavaIoSerializable_RESTRICT 1
#define JavaIoSerializable_INCLUDE 1
#include "java/io/Serializable.h"


#define ComGoogleCommonPrimitivesFloats_FloatArrayAsList_serialVersionUID 0LL

@interface ComGoogleCommonPrimitivesFloats_FloatArrayAsList : JavaUtilAbstractList < JavaUtilRandomAccess, JavaIoSerializable > {
 @public
  IOSFloatArray *array_;
  jint start_;
  jint end_;
}

- (instancetype)initWithFloatArray:(IOSFloatArray *)array;

- (instancetype)initWithFloatArray:(IOSFloatArray *)array
                           withInt:(jint)start
                           withInt:(jint)end;

- (jint)size;

- (jboolean)isEmpty;

- (JavaLangFloat *)getWithInt:(jint)index;

- (jboolean)containsWithId:(id)target;

- (jint)indexOfWithId:(id)target;

- (jint)lastIndexOfWithId:(id)target;

- (JavaLangFloat *)setWithInt:(jint)index
                       withId:(JavaLangFloat *)element;

- (id<JavaUtilList>)subListWithInt:(jint)fromIndex
                           withInt:(jint)toIndex;

- (jboolean)isEqual:(id)object;

- (NSUInteger)hash;

- (NSString *)description;

- (IOSFloatArray *)toFloatArray;


@end

__attribute__((always_inline)) inline void ComGoogleCommonPrimitivesFloats_FloatArrayAsList_init() {}

J2OBJC_FIELD_SETTER(ComGoogleCommonPrimitivesFloats_FloatArrayAsList, array_, IOSFloatArray *)

J2OBJC_STATIC_FIELD_GETTER(ComGoogleCommonPrimitivesFloats_FloatArrayAsList, serialVersionUID, jlong)
#endif
