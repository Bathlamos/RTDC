//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kstanger/j2objc-0.9.5/j2objc/guava/sources/com/google/common/hash/AbstractStreamingHashFunction.java
//

#import "JreEmulation.h"

#if !ComGoogleCommonHashAbstractStreamingHashFunction_RESTRICT
#define ComGoogleCommonHashAbstractStreamingHashFunction_INCLUDE_ALL 1
#endif
#undef ComGoogleCommonHashAbstractStreamingHashFunction_RESTRICT
#if !defined (_ComGoogleCommonHashAbstractStreamingHashFunction_) && (ComGoogleCommonHashAbstractStreamingHashFunction_INCLUDE_ALL || ComGoogleCommonHashAbstractStreamingHashFunction_INCLUDE)
#define _ComGoogleCommonHashAbstractStreamingHashFunction_

@class ComGoogleCommonHashHashCode;
@class IOSByteArray;
@class JavaNioCharsetCharset;
@protocol ComGoogleCommonHashFunnel;
@protocol ComGoogleCommonHashHasher;
@protocol JavaLangCharSequence;

#define ComGoogleCommonHashHashFunction_RESTRICT 1
#define ComGoogleCommonHashHashFunction_INCLUDE 1
#include "com/google/common/hash/HashFunction.h"


@interface ComGoogleCommonHashAbstractStreamingHashFunction : NSObject < ComGoogleCommonHashHashFunction > {
}

- (ComGoogleCommonHashHashCode *)hashObjectWithId:(id)instance
                    withComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel;

- (ComGoogleCommonHashHashCode *)hashStringWithJavaLangCharSequence:(id<JavaLangCharSequence>)input;

- (ComGoogleCommonHashHashCode *)hashStringWithJavaLangCharSequence:(id<JavaLangCharSequence>)input
                                          withJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

- (ComGoogleCommonHashHashCode *)hashIntWithInt:(jint)input;

- (ComGoogleCommonHashHashCode *)hashLongWithLong:(jlong)input;

- (ComGoogleCommonHashHashCode *)hashBytesWithByteArray:(IOSByteArray *)input;

- (ComGoogleCommonHashHashCode *)hashBytesWithByteArray:(IOSByteArray *)input
                                                withInt:(jint)off
                                                withInt:(jint)len;

- (id<ComGoogleCommonHashHasher>)newHasherWithInt:(jint)expectedInputSize OBJC_METHOD_FAMILY_NONE;

- (instancetype)init;

@end

__attribute__((always_inline)) inline void ComGoogleCommonHashAbstractStreamingHashFunction_init() {}
#endif
#if !defined (_ComGoogleCommonHashAbstractStreamingHashFunction_AbstractStreamingHasher_) && (ComGoogleCommonHashAbstractStreamingHashFunction_INCLUDE_ALL || ComGoogleCommonHashAbstractStreamingHashFunction_AbstractStreamingHasher_INCLUDE)
#define _ComGoogleCommonHashAbstractStreamingHashFunction_AbstractStreamingHasher_

@class ComGoogleCommonHashHashCode;
@class IOSByteArray;
@class JavaNioByteBuffer;
@protocol ComGoogleCommonHashFunnel;
@protocol ComGoogleCommonHashHasher;
@protocol JavaLangCharSequence;

#define ComGoogleCommonHashAbstractHasher_RESTRICT 1
#define ComGoogleCommonHashAbstractHasher_INCLUDE 1
#include "com/google/common/hash/AbstractHasher.h"


@interface ComGoogleCommonHashAbstractStreamingHashFunction_AbstractStreamingHasher : ComGoogleCommonHashAbstractHasher {
}

- (instancetype)initWithInt:(jint)chunkSize;

- (instancetype)initWithInt:(jint)chunkSize
                    withInt:(jint)bufferSize;

- (void)processWithJavaNioByteBuffer:(JavaNioByteBuffer *)bb;

- (void)processRemainingWithJavaNioByteBuffer:(JavaNioByteBuffer *)bb;

- (id<ComGoogleCommonHashHasher>)putBytesWithByteArray:(IOSByteArray *)bytes;

- (id<ComGoogleCommonHashHasher>)putBytesWithByteArray:(IOSByteArray *)bytes
                                               withInt:(jint)off
                                               withInt:(jint)len;

- (id<ComGoogleCommonHashHasher>)putStringWithJavaLangCharSequence:(id<JavaLangCharSequence>)charSequence;

- (id<ComGoogleCommonHashHasher>)putByteWithByte:(jbyte)b;

- (id<ComGoogleCommonHashHasher>)putShortWithShort:(jshort)s;

- (id<ComGoogleCommonHashHasher>)putCharWithChar:(jchar)c;

- (id<ComGoogleCommonHashHasher>)putIntWithInt:(jint)i;

- (id<ComGoogleCommonHashHasher>)putLongWithLong:(jlong)l;

- (id<ComGoogleCommonHashHasher>)putObjectWithId:(id)instance
                   withComGoogleCommonHashFunnel:(id<ComGoogleCommonHashFunnel>)funnel;

- (ComGoogleCommonHashHashCode *)hash__;

- (ComGoogleCommonHashHashCode *)makeHash;

@end

__attribute__((always_inline)) inline void ComGoogleCommonHashAbstractStreamingHashFunction_AbstractStreamingHasher_init() {}
#endif
