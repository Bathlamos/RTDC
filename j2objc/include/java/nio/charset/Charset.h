//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/nio/charset/Charset.java
//

#ifndef _JavaNioCharsetCharset_H_
#define _JavaNioCharsetCharset_H_

@class IOSObjectArray;
@class JavaNioByteBuffer;
@class JavaNioCharBuffer;
@class JavaNioCharsetCharsetDecoder;
@class JavaNioCharsetCharsetEncoder;
@class JavaUtilHashMap;
@class JavaUtilHashSet;
@class JavaUtilLocale;
@protocol JavaUtilSet;
@protocol JavaUtilSortedMap;

#import "JreEmulation.h"
#include "java/lang/Comparable.h"

@interface JavaNioCharsetCharset : NSObject < JavaLangComparable > {
}

- (instancetype)initWithNSString:(NSString *)canonicalName
               withNSStringArray:(IOSObjectArray *)aliases;

+ (id<JavaUtilSortedMap>)availableCharsets;

+ (JavaNioCharsetCharset *)forNameWithNSString:(NSString *)charsetName;

+ (JavaNioCharsetCharset *)forNameUEEWithNSString:(NSString *)charsetName;

+ (jboolean)isSupportedWithNSString:(NSString *)charsetName;

- (jboolean)containsWithJavaNioCharsetCharset:(JavaNioCharsetCharset *)charset;

- (JavaNioCharsetCharsetEncoder *)newEncoder OBJC_METHOD_FAMILY_NONE;

- (JavaNioCharsetCharsetDecoder *)newDecoder OBJC_METHOD_FAMILY_NONE;

- (NSString *)name;

- (id<JavaUtilSet>)aliases;

- (NSString *)displayName;

- (NSString *)displayNameWithJavaUtilLocale:(JavaUtilLocale *)l;

- (jboolean)isRegistered;

- (jboolean)canEncode;

- (JavaNioByteBuffer *)encodeWithJavaNioCharBuffer:(JavaNioCharBuffer *)buffer;

- (JavaNioByteBuffer *)encodeWithNSString:(NSString *)s;

- (JavaNioCharBuffer *)decodeWithJavaNioByteBuffer:(JavaNioByteBuffer *)buffer;

- (jint)compareToWithId:(JavaNioCharsetCharset *)charset;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

- (NSString *)description;

+ (JavaNioCharsetCharset *)defaultCharset;

@end

FOUNDATION_EXPORT BOOL JavaNioCharsetCharset_initialized;
J2OBJC_STATIC_INIT(JavaNioCharsetCharset)
FOUNDATION_EXPORT id<JavaUtilSortedMap> JavaNioCharsetCharset_availableCharsets();
FOUNDATION_EXPORT JavaNioCharsetCharset *JavaNioCharsetCharset_forNameWithNSString_(NSString *charsetName);
FOUNDATION_EXPORT JavaNioCharsetCharset *JavaNioCharsetCharset_forNameUEEWithNSString_(NSString *charsetName);
FOUNDATION_EXPORT jboolean JavaNioCharsetCharset_isSupportedWithNSString_(NSString *charsetName);
FOUNDATION_EXPORT JavaNioCharsetCharset *JavaNioCharsetCharset_defaultCharset();

FOUNDATION_EXPORT JavaUtilHashMap *JavaNioCharsetCharset_CACHED_CHARSETS_;
J2OBJC_STATIC_FIELD_GETTER(JavaNioCharsetCharset, CACHED_CHARSETS_, JavaUtilHashMap *)

#endif // _JavaNioCharsetCharset_H_
