//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/nio/FileChannelImpl.java
//

#ifndef _JavaNioFileChannelImpl_H_
#define _JavaNioFileChannelImpl_H_

@class IOSObjectArray;
@class JavaIoFileDescriptor;
@class JavaNioByteBuffer;
@class JavaNioChannelsFileChannel_MapMode;
@class JavaNioIoVec;
@class JavaNioMappedByteBuffer;
@protocol JavaNioChannelsReadableByteChannel;
@protocol JavaNioChannelsWritableByteChannel;
@protocol JavaUtilSortedSet;

#import "JreEmulation.h"
#include "java/nio/channels/FileChannel.h"
#include "java/nio/channels/FileLock.h"
#include "java/util/Comparator.h"

@interface JavaNioFileChannelImpl : JavaNioChannelsFileChannel {
}

- (instancetype)initWithId:(id)stream
  withJavaIoFileDescriptor:(JavaIoFileDescriptor *)fd
                   withInt:(jint)mode;

- (void)implCloseChannel;

- (JavaNioChannelsFileLock *)lockWithLong:(jlong)position
                                 withLong:(jlong)size
                              withBoolean:(jboolean)shared;

- (JavaNioChannelsFileLock *)tryLockWithLong:(jlong)position
                                    withLong:(jlong)size
                                 withBoolean:(jboolean)shared;

- (void)release__WithJavaNioChannelsFileLock:(JavaNioChannelsFileLock *)lock;

- (void)forceWithBoolean:(jboolean)metadata;

- (JavaNioMappedByteBuffer *)mapWithJavaNioChannelsFileChannel_MapMode:(JavaNioChannelsFileChannel_MapMode *)mapMode
                                                              withLong:(jlong)position
                                                              withLong:(jlong)size;

- (jlong)position;

- (JavaNioChannelsFileChannel *)positionWithLong:(jlong)newPosition;

- (jint)readWithJavaNioByteBuffer:(JavaNioByteBuffer *)buffer
                         withLong:(jlong)position;

- (jint)readWithJavaNioByteBuffer:(JavaNioByteBuffer *)buffer;

- (jlong)readWithJavaNioByteBufferArray:(IOSObjectArray *)buffers
                                withInt:(jint)offset
                                withInt:(jint)length;

- (jlong)size;

- (jlong)transferFromWithJavaNioChannelsReadableByteChannel:(id<JavaNioChannelsReadableByteChannel>)src
                                                   withLong:(jlong)position
                                                   withLong:(jlong)count;

- (jlong)transferToWithLong:(jlong)position
                   withLong:(jlong)count
withJavaNioChannelsWritableByteChannel:(id<JavaNioChannelsWritableByteChannel>)target;

- (JavaNioChannelsFileChannel *)truncateWithLong:(jlong)size;

- (jint)writeWithJavaNioByteBuffer:(JavaNioByteBuffer *)buffer
                          withLong:(jlong)position;

- (jint)writeWithJavaNioByteBuffer:(JavaNioByteBuffer *)buffer;

- (jlong)writeWithJavaNioByteBufferArray:(IOSObjectArray *)buffers
                                 withInt:(jint)offset
                                 withInt:(jint)length;

+ (jint)calculateTotalRemainingWithJavaNioByteBufferArray:(IOSObjectArray *)buffers
                                                  withInt:(jint)offset
                                                  withInt:(jint)length
                                              withBoolean:(jboolean)copyingIn;

- (JavaIoFileDescriptor *)getFD;

@end

FOUNDATION_EXPORT BOOL JavaNioFileChannelImpl_initialized;
J2OBJC_STATIC_INIT(JavaNioFileChannelImpl)
FOUNDATION_EXPORT jint JavaNioFileChannelImpl_calculateTotalRemainingWithJavaNioByteBufferArray_withInt_withInt_withBoolean_(IOSObjectArray *buffers, jint offset, jint length, jboolean copyingIn);

FOUNDATION_EXPORT id<JavaUtilComparator> JavaNioFileChannelImpl_LOCK_COMPARATOR_;
J2OBJC_STATIC_FIELD_GETTER(JavaNioFileChannelImpl, LOCK_COMPARATOR_, id<JavaUtilComparator>)

@interface JavaNioFileChannelImpl_FileLockImpl : JavaNioChannelsFileLock {
}

- (instancetype)initWithJavaNioChannelsFileChannel:(JavaNioChannelsFileChannel *)channel
                                          withLong:(jlong)position
                                          withLong:(jlong)size
                                       withBoolean:(jboolean)shared;

- (jboolean)isValid;

- (void)release__;

@end

__attribute__((always_inline)) inline void JavaNioFileChannelImpl_FileLockImpl_init() {}

@interface JavaNioFileChannelImpl_$1 : NSObject < JavaUtilComparator > {
}

- (jint)compareWithId:(JavaNioChannelsFileLock *)lock1
               withId:(JavaNioChannelsFileLock *)lock2;

- (instancetype)init;

@end

__attribute__((always_inline)) inline void JavaNioFileChannelImpl_$1_init() {}

#endif // _JavaNioFileChannelImpl_H_
