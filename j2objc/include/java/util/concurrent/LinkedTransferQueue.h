//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/concurrent/LinkedTransferQueue.java
//

#ifndef _JavaUtilConcurrentLinkedTransferQueue_H_
#define _JavaUtilConcurrentLinkedTransferQueue_H_

@class JavaIoObjectInputStream;
@class JavaIoObjectOutputStream;
@class JavaLangThread;
@class JavaUtilConcurrentLinkedTransferQueue_Node;
@class JavaUtilConcurrentTimeUnitEnum;
@class SunMiscUnsafe;
@protocol JavaUtilCollection;

#import "JreEmulation.h"
#include "java/io/Serializable.h"
#include "java/util/AbstractQueue.h"
#include "java/util/Iterator.h"
#include "java/util/concurrent/TransferQueue.h"

#define JavaUtilConcurrentLinkedTransferQueue_ASYNC 1
#define JavaUtilConcurrentLinkedTransferQueue_CHAINED_SPINS 64
#define JavaUtilConcurrentLinkedTransferQueue_FRONT_SPINS 128
#define JavaUtilConcurrentLinkedTransferQueue_NOW 0
#define JavaUtilConcurrentLinkedTransferQueue_SWEEP_THRESHOLD 32
#define JavaUtilConcurrentLinkedTransferQueue_SYNC 2
#define JavaUtilConcurrentLinkedTransferQueue_TIMED 3
#define JavaUtilConcurrentLinkedTransferQueue_serialVersionUID -3223113410248163686LL

@interface JavaUtilConcurrentLinkedTransferQueue : JavaUtilAbstractQueue < JavaUtilConcurrentTransferQueue, JavaIoSerializable > {
 @public
  JavaUtilConcurrentLinkedTransferQueue_Node *head_;
}

+ (id)castWithId:(id)item;

- (JavaUtilConcurrentLinkedTransferQueue_Node *)succWithJavaUtilConcurrentLinkedTransferQueue_Node:(JavaUtilConcurrentLinkedTransferQueue_Node *)p;

- (void)unspliceWithJavaUtilConcurrentLinkedTransferQueue_Node:(JavaUtilConcurrentLinkedTransferQueue_Node *)pred
                withJavaUtilConcurrentLinkedTransferQueue_Node:(JavaUtilConcurrentLinkedTransferQueue_Node *)s;

- (instancetype)init;

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (void)putWithId:(id)e;

- (jboolean)offerWithId:(id)e
               withLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (jboolean)offerWithId:(id)e;

- (jboolean)addWithId:(id)e;

- (jboolean)tryTransferWithId:(id)e;

- (void)transferWithId:(id)e;

- (jboolean)tryTransferWithId:(id)e
                     withLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (id)take;

- (id)pollWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (id)poll;

- (jint)drainToWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (jint)drainToWithJavaUtilCollection:(id<JavaUtilCollection>)c
                              withInt:(jint)maxElements;

- (id<JavaUtilIterator>)iterator;

- (id)peek;

- (jboolean)isEmpty;

- (jboolean)hasWaitingConsumer;

- (jint)size;

- (jint)getWaitingConsumerCount;

- (jboolean)removeWithId:(id)o;

- (jboolean)containsWithId:(id)o;

- (jint)remainingCapacity;


@end

FOUNDATION_EXPORT BOOL JavaUtilConcurrentLinkedTransferQueue_initialized;
J2OBJC_STATIC_INIT(JavaUtilConcurrentLinkedTransferQueue)

J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedTransferQueue, head_, JavaUtilConcurrentLinkedTransferQueue_Node *)
FOUNDATION_EXPORT id JavaUtilConcurrentLinkedTransferQueue_castWithId_(id item);

J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentLinkedTransferQueue, serialVersionUID, jlong)

FOUNDATION_EXPORT jboolean JavaUtilConcurrentLinkedTransferQueue_MP_;
J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentLinkedTransferQueue, MP_, jboolean)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentLinkedTransferQueue, FRONT_SPINS, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentLinkedTransferQueue, CHAINED_SPINS, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentLinkedTransferQueue, SWEEP_THRESHOLD, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentLinkedTransferQueue, NOW, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentLinkedTransferQueue, ASYNC, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentLinkedTransferQueue, SYNC, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentLinkedTransferQueue, TIMED, jint)

FOUNDATION_EXPORT SunMiscUnsafe *JavaUtilConcurrentLinkedTransferQueue_UNSAFE_;
J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentLinkedTransferQueue, UNSAFE_, SunMiscUnsafe *)

FOUNDATION_EXPORT jlong JavaUtilConcurrentLinkedTransferQueue_headOffset_;
J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentLinkedTransferQueue, headOffset_, jlong)

FOUNDATION_EXPORT jlong JavaUtilConcurrentLinkedTransferQueue_tailOffset_;
J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentLinkedTransferQueue, tailOffset_, jlong)

FOUNDATION_EXPORT jlong JavaUtilConcurrentLinkedTransferQueue_sweepVotesOffset_;
J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentLinkedTransferQueue, sweepVotesOffset_, jlong)

#define JavaUtilConcurrentLinkedTransferQueue_Node_serialVersionUID -3375979862319811754LL

@interface JavaUtilConcurrentLinkedTransferQueue_Node : NSObject {
 @public
  jboolean isData_;
  id item_;
  JavaUtilConcurrentLinkedTransferQueue_Node *next_;
  JavaLangThread *waiter_;
}

- (jboolean)casNextWithJavaUtilConcurrentLinkedTransferQueue_Node:(JavaUtilConcurrentLinkedTransferQueue_Node *)cmp
                   withJavaUtilConcurrentLinkedTransferQueue_Node:(JavaUtilConcurrentLinkedTransferQueue_Node *)val;

- (jboolean)casItemWithId:(id)cmp
                   withId:(id)val;

- (instancetype)initWithId:(id)item
               withBoolean:(jboolean)isData;

- (void)forgetNext;

- (void)forgetContents;

- (jboolean)isMatched;

- (jboolean)isUnmatchedRequest;

- (jboolean)cannotPrecedeWithBoolean:(jboolean)haveData;

- (jboolean)tryMatchData;

@end

FOUNDATION_EXPORT BOOL JavaUtilConcurrentLinkedTransferQueue_Node_initialized;
J2OBJC_STATIC_INIT(JavaUtilConcurrentLinkedTransferQueue_Node)

J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedTransferQueue_Node, item_, id)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedTransferQueue_Node, next_, JavaUtilConcurrentLinkedTransferQueue_Node *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedTransferQueue_Node, waiter_, JavaLangThread *)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentLinkedTransferQueue_Node, serialVersionUID, jlong)

FOUNDATION_EXPORT SunMiscUnsafe *JavaUtilConcurrentLinkedTransferQueue_Node_UNSAFE_;
J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentLinkedTransferQueue_Node, UNSAFE_, SunMiscUnsafe *)

FOUNDATION_EXPORT jlong JavaUtilConcurrentLinkedTransferQueue_Node_itemOffset_;
J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentLinkedTransferQueue_Node, itemOffset_, jlong)

FOUNDATION_EXPORT jlong JavaUtilConcurrentLinkedTransferQueue_Node_nextOffset_;
J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentLinkedTransferQueue_Node, nextOffset_, jlong)

FOUNDATION_EXPORT jlong JavaUtilConcurrentLinkedTransferQueue_Node_waiterOffset_;
J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentLinkedTransferQueue_Node, waiterOffset_, jlong)

@interface JavaUtilConcurrentLinkedTransferQueue_Itr : NSObject < JavaUtilIterator > {
}

- (instancetype)initWithJavaUtilConcurrentLinkedTransferQueue:(JavaUtilConcurrentLinkedTransferQueue *)outer$;

- (jboolean)hasNext;

- (id)next;

- (void)remove;

@end

__attribute__((always_inline)) inline void JavaUtilConcurrentLinkedTransferQueue_Itr_init() {}

#endif // _JavaUtilConcurrentLinkedTransferQueue_H_
