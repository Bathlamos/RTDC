//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/concurrent/LinkedBlockingDeque.java
//

#ifndef _JavaUtilConcurrentLinkedBlockingDeque_H_
#define _JavaUtilConcurrentLinkedBlockingDeque_H_

@class IOSObjectArray;
@class JavaIoObjectInputStream;
@class JavaIoObjectOutputStream;
@class JavaUtilConcurrentLinkedBlockingDeque_Node;
@class JavaUtilConcurrentLocksReentrantLock;
@class JavaUtilConcurrentTimeUnitEnum;
@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentLocksCondition;

#import "JreEmulation.h"
#include "java/io/Serializable.h"
#include "java/util/AbstractQueue.h"
#include "java/util/Iterator.h"
#include "java/util/concurrent/BlockingDeque.h"

#define JavaUtilConcurrentLinkedBlockingDeque_serialVersionUID -387911632671998426LL

@interface JavaUtilConcurrentLinkedBlockingDeque : JavaUtilAbstractQueue < JavaUtilConcurrentBlockingDeque, JavaIoSerializable > {
 @public
  JavaUtilConcurrentLinkedBlockingDeque_Node *first_;
  JavaUtilConcurrentLinkedBlockingDeque_Node *last_;
  JavaUtilConcurrentLocksReentrantLock *lock_;
}

- (instancetype)init;

- (instancetype)initWithInt:(jint)capacity;

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (void)unlinkWithJavaUtilConcurrentLinkedBlockingDeque_Node:(JavaUtilConcurrentLinkedBlockingDeque_Node *)x;

- (void)addFirstWithId:(id)e;

- (void)addLastWithId:(id)e;

- (jboolean)offerFirstWithId:(id)e;

- (jboolean)offerLastWithId:(id)e;

- (void)putFirstWithId:(id)e;

- (void)putLastWithId:(id)e;

- (jboolean)offerFirstWithId:(id)e
                    withLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (jboolean)offerLastWithId:(id)e
                   withLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (id)removeFirst;

- (id)removeLast;

- (id)pollFirst;

- (id)pollLast;

- (id)takeFirst;

- (id)takeLast;

- (id)pollFirstWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (id)pollLastWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (id)getFirst;

- (id)getLast;

- (id)peekFirst;

- (id)peekLast;

- (jboolean)removeFirstOccurrenceWithId:(id)o;

- (jboolean)removeLastOccurrenceWithId:(id)o;

- (jboolean)addWithId:(id)e;

- (jboolean)offerWithId:(id)e;

- (void)putWithId:(id)e;

- (jboolean)offerWithId:(id)e
               withLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (id)remove;

- (id)poll;

- (id)take;

- (id)pollWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (id)element;

- (id)peek;

- (jint)remainingCapacity;

- (jint)drainToWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (jint)drainToWithJavaUtilCollection:(id<JavaUtilCollection>)c
                              withInt:(jint)maxElements;

- (void)pushWithId:(id)e;

- (id)pop;

- (jboolean)removeWithId:(id)o;

- (jint)size;

- (jboolean)containsWithId:(id)o;

- (IOSObjectArray *)toArray;

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)a;

- (NSString *)description;

- (void)clear;

- (id<JavaUtilIterator>)iterator;

- (id<JavaUtilIterator>)descendingIterator;


@end

__attribute__((always_inline)) inline void JavaUtilConcurrentLinkedBlockingDeque_init() {}

J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingDeque, first_, JavaUtilConcurrentLinkedBlockingDeque_Node *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingDeque, last_, JavaUtilConcurrentLinkedBlockingDeque_Node *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingDeque, lock_, JavaUtilConcurrentLocksReentrantLock *)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentLinkedBlockingDeque, serialVersionUID, jlong)

@interface JavaUtilConcurrentLinkedBlockingDeque_Node : NSObject {
 @public
  id item_;
  JavaUtilConcurrentLinkedBlockingDeque_Node *prev_;
  JavaUtilConcurrentLinkedBlockingDeque_Node *next_;
}

- (instancetype)initWithId:(id)x;

@end

__attribute__((always_inline)) inline void JavaUtilConcurrentLinkedBlockingDeque_Node_init() {}

J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingDeque_Node, item_, id)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingDeque_Node, prev_, JavaUtilConcurrentLinkedBlockingDeque_Node *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingDeque_Node, next_, JavaUtilConcurrentLinkedBlockingDeque_Node *)

@interface JavaUtilConcurrentLinkedBlockingDeque_AbstractItr : NSObject < JavaUtilIterator > {
 @public
  JavaUtilConcurrentLinkedBlockingDeque_Node *next__;
  id nextItem_;
}

- (JavaUtilConcurrentLinkedBlockingDeque_Node *)firstNode;

- (JavaUtilConcurrentLinkedBlockingDeque_Node *)nextNodeWithJavaUtilConcurrentLinkedBlockingDeque_Node:(JavaUtilConcurrentLinkedBlockingDeque_Node *)n;

- (instancetype)initWithJavaUtilConcurrentLinkedBlockingDeque:(JavaUtilConcurrentLinkedBlockingDeque *)outer$;

- (void)advance;

- (jboolean)hasNext;

- (id)next;

- (void)remove;

@end

__attribute__((always_inline)) inline void JavaUtilConcurrentLinkedBlockingDeque_AbstractItr_init() {}

J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingDeque_AbstractItr, next__, JavaUtilConcurrentLinkedBlockingDeque_Node *)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingDeque_AbstractItr, nextItem_, id)

@interface JavaUtilConcurrentLinkedBlockingDeque_Itr : JavaUtilConcurrentLinkedBlockingDeque_AbstractItr {
}

- (JavaUtilConcurrentLinkedBlockingDeque_Node *)firstNode;

- (JavaUtilConcurrentLinkedBlockingDeque_Node *)nextNodeWithJavaUtilConcurrentLinkedBlockingDeque_Node:(JavaUtilConcurrentLinkedBlockingDeque_Node *)n;

- (instancetype)initWithJavaUtilConcurrentLinkedBlockingDeque:(JavaUtilConcurrentLinkedBlockingDeque *)outer$;

@end

__attribute__((always_inline)) inline void JavaUtilConcurrentLinkedBlockingDeque_Itr_init() {}

@interface JavaUtilConcurrentLinkedBlockingDeque_DescendingItr : JavaUtilConcurrentLinkedBlockingDeque_AbstractItr {
}

- (JavaUtilConcurrentLinkedBlockingDeque_Node *)firstNode;

- (JavaUtilConcurrentLinkedBlockingDeque_Node *)nextNodeWithJavaUtilConcurrentLinkedBlockingDeque_Node:(JavaUtilConcurrentLinkedBlockingDeque_Node *)n;

- (instancetype)initWithJavaUtilConcurrentLinkedBlockingDeque:(JavaUtilConcurrentLinkedBlockingDeque *)outer$;

@end

__attribute__((always_inline)) inline void JavaUtilConcurrentLinkedBlockingDeque_DescendingItr_init() {}

#endif // _JavaUtilConcurrentLinkedBlockingDeque_H_
