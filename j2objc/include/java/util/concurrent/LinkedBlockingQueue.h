//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/concurrent/LinkedBlockingQueue.java
//

#ifndef _JavaUtilConcurrentLinkedBlockingQueue_H_
#define _JavaUtilConcurrentLinkedBlockingQueue_H_

@class IOSObjectArray;
@class JavaIoObjectInputStream;
@class JavaIoObjectOutputStream;
@class JavaUtilConcurrentAtomicAtomicInteger;
@class JavaUtilConcurrentLinkedBlockingQueue_Node;
@class JavaUtilConcurrentLocksReentrantLock;
@class JavaUtilConcurrentTimeUnitEnum;
@protocol JavaUtilCollection;
@protocol JavaUtilConcurrentLocksCondition;

#import "JreEmulation.h"
#include "java/io/Serializable.h"
#include "java/util/AbstractQueue.h"
#include "java/util/Iterator.h"
#include "java/util/concurrent/BlockingQueue.h"

#define JavaUtilConcurrentLinkedBlockingQueue_serialVersionUID -6903933977591709194LL

@interface JavaUtilConcurrentLinkedBlockingQueue : JavaUtilAbstractQueue < JavaUtilConcurrentBlockingQueue, JavaIoSerializable > {
 @public
  JavaUtilConcurrentLinkedBlockingQueue_Node *head_;
}

- (void)fullyLock;

- (void)fullyUnlock;

- (instancetype)init;

- (instancetype)initWithInt:(jint)capacity;

- (instancetype)initWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (jint)size;

- (jint)remainingCapacity;

- (void)putWithId:(id)e;

- (jboolean)offerWithId:(id)e
               withLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (jboolean)offerWithId:(id)e;

- (id)take;

- (id)pollWithLong:(jlong)timeout
withJavaUtilConcurrentTimeUnitEnum:(JavaUtilConcurrentTimeUnitEnum *)unit;

- (id)poll;

- (id)peek;

- (void)unlinkWithJavaUtilConcurrentLinkedBlockingQueue_Node:(JavaUtilConcurrentLinkedBlockingQueue_Node *)p
              withJavaUtilConcurrentLinkedBlockingQueue_Node:(JavaUtilConcurrentLinkedBlockingQueue_Node *)trail;

- (jboolean)removeWithId:(id)o;

- (jboolean)containsWithId:(id)o;

- (IOSObjectArray *)toArray;

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)a;

- (NSString *)description;

- (void)clear;

- (jint)drainToWithJavaUtilCollection:(id<JavaUtilCollection>)c;

- (jint)drainToWithJavaUtilCollection:(id<JavaUtilCollection>)c
                              withInt:(jint)maxElements;

- (id<JavaUtilIterator>)iterator;


@end

__attribute__((always_inline)) inline void JavaUtilConcurrentLinkedBlockingQueue_init() {}

J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingQueue, head_, JavaUtilConcurrentLinkedBlockingQueue_Node *)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentLinkedBlockingQueue, serialVersionUID, jlong)

@interface JavaUtilConcurrentLinkedBlockingQueue_Node : NSObject {
 @public
  id item_;
  JavaUtilConcurrentLinkedBlockingQueue_Node *next_;
}

- (instancetype)initWithId:(id)x;

@end

__attribute__((always_inline)) inline void JavaUtilConcurrentLinkedBlockingQueue_Node_init() {}

J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingQueue_Node, item_, id)
J2OBJC_FIELD_SETTER(JavaUtilConcurrentLinkedBlockingQueue_Node, next_, JavaUtilConcurrentLinkedBlockingQueue_Node *)

@interface JavaUtilConcurrentLinkedBlockingQueue_Itr : NSObject < JavaUtilIterator > {
}

- (instancetype)initWithJavaUtilConcurrentLinkedBlockingQueue:(JavaUtilConcurrentLinkedBlockingQueue *)outer$;

- (jboolean)hasNext;

- (id)next;

- (void)remove;

@end

__attribute__((always_inline)) inline void JavaUtilConcurrentLinkedBlockingQueue_Itr_init() {}

#endif // _JavaUtilConcurrentLinkedBlockingQueue_H_
