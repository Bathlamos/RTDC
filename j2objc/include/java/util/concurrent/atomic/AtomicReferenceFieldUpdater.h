//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/concurrent/atomic/AtomicReferenceFieldUpdater.java
//

#ifndef _JavaUtilConcurrentAtomicAtomicReferenceFieldUpdater_H_
#define _JavaUtilConcurrentAtomicAtomicReferenceFieldUpdater_H_

@class IOSClass;
@class SunMiscUnsafe;

#import "JreEmulation.h"

@interface JavaUtilConcurrentAtomicAtomicReferenceFieldUpdater : NSObject {
}

+ (JavaUtilConcurrentAtomicAtomicReferenceFieldUpdater *)newUpdaterWithIOSClass:(IOSClass *)tclass
                                                                   withIOSClass:(IOSClass *)vclass
                                                                   withNSString:(NSString *)fieldName OBJC_METHOD_FAMILY_NONE;

- (instancetype)init;

- (jboolean)compareAndSetWithId:(id)obj
                         withId:(id)expect
                         withId:(id)update;

- (jboolean)weakCompareAndSetWithId:(id)obj
                             withId:(id)expect
                             withId:(id)update;

- (void)setWithId:(id)obj
           withId:(id)newValue;

- (void)lazySetWithId:(id)obj
               withId:(id)newValue;

- (id)getWithId:(id)obj;

- (id)getAndSetWithId:(id)obj
               withId:(id)newValue;

@end

__attribute__((always_inline)) inline void JavaUtilConcurrentAtomicAtomicReferenceFieldUpdater_init() {}
FOUNDATION_EXPORT JavaUtilConcurrentAtomicAtomicReferenceFieldUpdater *JavaUtilConcurrentAtomicAtomicReferenceFieldUpdater_newUpdaterWithIOSClass_withIOSClass_withNSString_(IOSClass *tclass, IOSClass *vclass, NSString *fieldName);

@interface JavaUtilConcurrentAtomicAtomicReferenceFieldUpdater_AtomicReferenceFieldUpdaterImpl : JavaUtilConcurrentAtomicAtomicReferenceFieldUpdater {
}

- (instancetype)initWithIOSClass:(IOSClass *)tclass
                    withIOSClass:(IOSClass *)vclass
                    withNSString:(NSString *)fieldName;

- (void)targetCheckWithId:(id)obj;

- (void)updateCheckWithId:(id)obj
                   withId:(id)update;

- (jboolean)compareAndSetWithId:(id)obj
                         withId:(id)expect
                         withId:(id)update;

- (jboolean)weakCompareAndSetWithId:(id)obj
                             withId:(id)expect
                             withId:(id)update;

- (void)setWithId:(id)obj
           withId:(id)newValue;

- (void)lazySetWithId:(id)obj
               withId:(id)newValue;

- (id)getWithId:(id)obj;

@end

FOUNDATION_EXPORT BOOL JavaUtilConcurrentAtomicAtomicReferenceFieldUpdater_AtomicReferenceFieldUpdaterImpl_initialized;
J2OBJC_STATIC_INIT(JavaUtilConcurrentAtomicAtomicReferenceFieldUpdater_AtomicReferenceFieldUpdaterImpl)

FOUNDATION_EXPORT SunMiscUnsafe *JavaUtilConcurrentAtomicAtomicReferenceFieldUpdater_AtomicReferenceFieldUpdaterImpl_unsafe_;
J2OBJC_STATIC_FIELD_GETTER(JavaUtilConcurrentAtomicAtomicReferenceFieldUpdater_AtomicReferenceFieldUpdaterImpl, unsafe_, SunMiscUnsafe *)

#endif // _JavaUtilConcurrentAtomicAtomicReferenceFieldUpdater_H_
