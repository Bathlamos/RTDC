//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/Timer.java
//

#ifndef _JavaUtilTimer_H_
#define _JavaUtilTimer_H_

@class IOSObjectArray;
@class JavaUtilDate;
@class JavaUtilTimerTask;
@class JavaUtilTimer_FinalizerHelper;
@class JavaUtilTimer_TimerImpl;
@class JavaUtilTimer_TimerImpl_TimerHeap;

#import "JreEmulation.h"
#include "java/lang/Thread.h"

@interface JavaUtilTimer : NSObject {
}

- (instancetype)initWithNSString:(NSString *)name
                     withBoolean:(jboolean)isDaemon;

- (instancetype)initWithNSString:(NSString *)name;

- (instancetype)initWithBoolean:(jboolean)isDaemon;

- (instancetype)init;

- (void)cancel;

- (jint)purge;

- (void)scheduleWithJavaUtilTimerTask:(JavaUtilTimerTask *)task
                     withJavaUtilDate:(JavaUtilDate *)when;

- (void)scheduleWithJavaUtilTimerTask:(JavaUtilTimerTask *)task
                             withLong:(jlong)delay;

- (void)scheduleWithJavaUtilTimerTask:(JavaUtilTimerTask *)task
                             withLong:(jlong)delay
                             withLong:(jlong)period;

- (void)scheduleWithJavaUtilTimerTask:(JavaUtilTimerTask *)task
                     withJavaUtilDate:(JavaUtilDate *)when
                             withLong:(jlong)period;

- (void)scheduleAtFixedRateWithJavaUtilTimerTask:(JavaUtilTimerTask *)task
                                        withLong:(jlong)delay
                                        withLong:(jlong)period;

- (void)scheduleAtFixedRateWithJavaUtilTimerTask:(JavaUtilTimerTask *)task
                                withJavaUtilDate:(JavaUtilDate *)when
                                        withLong:(jlong)period;

@end

__attribute__((always_inline)) inline void JavaUtilTimer_init() {}

FOUNDATION_EXPORT jlong JavaUtilTimer_timerId_;
J2OBJC_STATIC_FIELD_GETTER(JavaUtilTimer, timerId_, jlong)
J2OBJC_STATIC_FIELD_REF_GETTER(JavaUtilTimer, timerId_, jlong)

@interface JavaUtilTimer_TimerImpl : JavaLangThread {
}

- (instancetype)initWithNSString:(NSString *)name
                     withBoolean:(jboolean)isDaemon;

- (void)run;

- (void)cancel;

- (jint)purge;

@end

__attribute__((always_inline)) inline void JavaUtilTimer_TimerImpl_init() {}

@interface JavaUtilTimer_TimerImpl_TimerHeap : NSObject {
}

- (JavaUtilTimerTask *)minimum;

- (jboolean)isEmpty;

- (void)insertWithJavaUtilTimerTask:(JavaUtilTimerTask *)task;

- (void)delete__WithInt:(jint)pos;

- (void)reset;

- (void)adjustMinimum;

- (void)deleteIfCancelled;

@end

__attribute__((always_inline)) inline void JavaUtilTimer_TimerImpl_TimerHeap_init() {}

@interface JavaUtilTimer_FinalizerHelper : NSObject {
}

- (instancetype)initWithJavaUtilTimer_TimerImpl:(JavaUtilTimer_TimerImpl *)impl;

- (void)dealloc;

@end

__attribute__((always_inline)) inline void JavaUtilTimer_FinalizerHelper_init() {}

#endif // _JavaUtilTimer_H_
