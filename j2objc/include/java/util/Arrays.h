//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/Arrays.java
//

#ifndef _JavaUtilArrays_H_
#define _JavaUtilArrays_H_

@class IOSBooleanArray;
@class IOSByteArray;
@class IOSCharArray;
@class IOSClass;
@class IOSDoubleArray;
@class IOSFloatArray;
@class IOSIntArray;
@class IOSLongArray;
@class IOSObjectArray;
@class IOSShortArray;
@class JavaLangStringBuilder;
@protocol JavaUtilComparator;

#import "JreEmulation.h"
#include "java/io/Serializable.h"
#include "java/util/AbstractList.h"
#include "java/util/List.h"
#include "java/util/RandomAccess.h"

@interface JavaUtilArrays : NSObject {
}

+ (id<JavaUtilList>)asListWithNSObjectArray:(IOSObjectArray *)array;

+ (jint)binarySearchWithByteArray:(IOSByteArray *)array
                         withByte:(jbyte)value;

+ (jint)binarySearchWithByteArray:(IOSByteArray *)array
                          withInt:(jint)startIndex
                          withInt:(jint)endIndex
                         withByte:(jbyte)value;

+ (jint)binarySearchWithCharArray:(IOSCharArray *)array
                         withChar:(jchar)value;

+ (jint)binarySearchWithCharArray:(IOSCharArray *)array
                          withInt:(jint)startIndex
                          withInt:(jint)endIndex
                         withChar:(jchar)value;

+ (jint)binarySearchWithDoubleArray:(IOSDoubleArray *)array
                         withDouble:(jdouble)value;

+ (jint)binarySearchWithDoubleArray:(IOSDoubleArray *)array
                            withInt:(jint)startIndex
                            withInt:(jint)endIndex
                         withDouble:(jdouble)value;

+ (jint)binarySearchWithFloatArray:(IOSFloatArray *)array
                         withFloat:(jfloat)value;

+ (jint)binarySearchWithFloatArray:(IOSFloatArray *)array
                           withInt:(jint)startIndex
                           withInt:(jint)endIndex
                         withFloat:(jfloat)value;

+ (jint)binarySearchWithIntArray:(IOSIntArray *)array
                         withInt:(jint)value;

+ (jint)binarySearchWithIntArray:(IOSIntArray *)array
                         withInt:(jint)startIndex
                         withInt:(jint)endIndex
                         withInt:(jint)value;

+ (jint)binarySearchWithLongArray:(IOSLongArray *)array
                         withLong:(jlong)value;

+ (jint)binarySearchWithLongArray:(IOSLongArray *)array
                          withInt:(jint)startIndex
                          withInt:(jint)endIndex
                         withLong:(jlong)value;

+ (jint)binarySearchWithNSObjectArray:(IOSObjectArray *)array
                               withId:(id)value;

+ (jint)binarySearchWithNSObjectArray:(IOSObjectArray *)array
                              withInt:(jint)startIndex
                              withInt:(jint)endIndex
                               withId:(id)value;

+ (jint)binarySearchWithNSObjectArray:(IOSObjectArray *)array
                               withId:(id)value
               withJavaUtilComparator:(id<JavaUtilComparator>)comparator;

+ (jint)binarySearchWithNSObjectArray:(IOSObjectArray *)array
                              withInt:(jint)startIndex
                              withInt:(jint)endIndex
                               withId:(id)value
               withJavaUtilComparator:(id<JavaUtilComparator>)comparator;

+ (jint)binarySearchWithShortArray:(IOSShortArray *)array
                         withShort:(jshort)value;

+ (jint)binarySearchWithShortArray:(IOSShortArray *)array
                           withInt:(jint)startIndex
                           withInt:(jint)endIndex
                         withShort:(jshort)value;

+ (void)fillWithByteArray:(IOSByteArray *)array
                 withByte:(jbyte)value;

+ (void)fillWithByteArray:(IOSByteArray *)array
                  withInt:(jint)start
                  withInt:(jint)end
                 withByte:(jbyte)value;

+ (void)fillWithShortArray:(IOSShortArray *)array
                 withShort:(jshort)value;

+ (void)fillWithShortArray:(IOSShortArray *)array
                   withInt:(jint)start
                   withInt:(jint)end
                 withShort:(jshort)value;

+ (void)fillWithCharArray:(IOSCharArray *)array
                 withChar:(jchar)value;

+ (void)fillWithCharArray:(IOSCharArray *)array
                  withInt:(jint)start
                  withInt:(jint)end
                 withChar:(jchar)value;

+ (void)fillWithIntArray:(IOSIntArray *)array
                 withInt:(jint)value;

+ (void)fillWithIntArray:(IOSIntArray *)array
                 withInt:(jint)start
                 withInt:(jint)end
                 withInt:(jint)value;

+ (void)fillWithLongArray:(IOSLongArray *)array
                 withLong:(jlong)value;

+ (void)fillWithLongArray:(IOSLongArray *)array
                  withInt:(jint)start
                  withInt:(jint)end
                 withLong:(jlong)value;

+ (void)fillWithFloatArray:(IOSFloatArray *)array
                 withFloat:(jfloat)value;

+ (void)fillWithFloatArray:(IOSFloatArray *)array
                   withInt:(jint)start
                   withInt:(jint)end
                 withFloat:(jfloat)value;

+ (void)fillWithDoubleArray:(IOSDoubleArray *)array
                 withDouble:(jdouble)value;

+ (void)fillWithDoubleArray:(IOSDoubleArray *)array
                    withInt:(jint)start
                    withInt:(jint)end
                 withDouble:(jdouble)value;

+ (void)fillWithBooleanArray:(IOSBooleanArray *)array
                 withBoolean:(jboolean)value;

+ (void)fillWithBooleanArray:(IOSBooleanArray *)array
                     withInt:(jint)start
                     withInt:(jint)end
                 withBoolean:(jboolean)value;

+ (void)fillWithNSObjectArray:(IOSObjectArray *)array
                       withId:(id)value;

+ (void)fillWithNSObjectArray:(IOSObjectArray *)array
                      withInt:(jint)start
                      withInt:(jint)end
                       withId:(id)value;

+ (jint)hashCodeWithBooleanArray:(IOSBooleanArray *)array;

+ (jint)hashCodeWithIntArray:(IOSIntArray *)array;

+ (jint)hashCodeWithShortArray:(IOSShortArray *)array;

+ (jint)hashCodeWithCharArray:(IOSCharArray *)array;

+ (jint)hashCodeWithByteArray:(IOSByteArray *)array;

+ (jint)hashCodeWithLongArray:(IOSLongArray *)array;

+ (jint)hashCodeWithFloatArray:(IOSFloatArray *)array;

+ (jint)hashCodeWithDoubleArray:(IOSDoubleArray *)array;

+ (jint)hashCodeWithNSObjectArray:(IOSObjectArray *)array;

+ (jint)deepHashCodeWithNSObjectArray:(IOSObjectArray *)array;

+ (jboolean)equalsWithByteArray:(IOSByteArray *)array1
                  withByteArray:(IOSByteArray *)array2;

+ (jboolean)equalsWithShortArray:(IOSShortArray *)array1
                  withShortArray:(IOSShortArray *)array2;

+ (jboolean)equalsWithCharArray:(IOSCharArray *)array1
                  withCharArray:(IOSCharArray *)array2;

+ (jboolean)equalsWithIntArray:(IOSIntArray *)array1
                  withIntArray:(IOSIntArray *)array2;

+ (jboolean)equalsWithLongArray:(IOSLongArray *)array1
                  withLongArray:(IOSLongArray *)array2;

+ (jboolean)equalsWithFloatArray:(IOSFloatArray *)array1
                  withFloatArray:(IOSFloatArray *)array2;

+ (jboolean)equalsWithDoubleArray:(IOSDoubleArray *)array1
                  withDoubleArray:(IOSDoubleArray *)array2;

+ (jboolean)equalsWithBooleanArray:(IOSBooleanArray *)array1
                  withBooleanArray:(IOSBooleanArray *)array2;

+ (jboolean)equalsWithNSObjectArray:(IOSObjectArray *)array1
                  withNSObjectArray:(IOSObjectArray *)array2;

+ (jboolean)deepEqualsWithNSObjectArray:(IOSObjectArray *)array1
                      withNSObjectArray:(IOSObjectArray *)array2;

+ (void)sortWithByteArray:(IOSByteArray *)array;

+ (void)sortWithByteArray:(IOSByteArray *)array
                  withInt:(jint)start
                  withInt:(jint)end;

+ (void)checkOffsetAndCountWithInt:(jint)arrayLength
                           withInt:(jint)offset
                           withInt:(jint)count;

+ (void)checkStartAndEndWithInt:(jint)len
                        withInt:(jint)start
                        withInt:(jint)end;

+ (void)sortWithCharArray:(IOSCharArray *)array;

+ (void)sortWithCharArray:(IOSCharArray *)array
                  withInt:(jint)start
                  withInt:(jint)end;

+ (void)sortWithDoubleArray:(IOSDoubleArray *)array;

+ (void)sortWithDoubleArray:(IOSDoubleArray *)array
                    withInt:(jint)start
                    withInt:(jint)end;

+ (void)sortWithFloatArray:(IOSFloatArray *)array;

+ (void)sortWithFloatArray:(IOSFloatArray *)array
                   withInt:(jint)start
                   withInt:(jint)end;

+ (void)sortWithIntArray:(IOSIntArray *)array;

+ (void)sortWithIntArray:(IOSIntArray *)array
                 withInt:(jint)start
                 withInt:(jint)end;

+ (void)sortWithLongArray:(IOSLongArray *)array;

+ (void)sortWithLongArray:(IOSLongArray *)array
                  withInt:(jint)start
                  withInt:(jint)end;

+ (void)sortWithShortArray:(IOSShortArray *)array;

+ (void)sortWithShortArray:(IOSShortArray *)array
                   withInt:(jint)start
                   withInt:(jint)end;

+ (void)sortWithNSObjectArray:(IOSObjectArray *)array;

+ (void)sortWithNSObjectArray:(IOSObjectArray *)array
                      withInt:(jint)start
                      withInt:(jint)end;

+ (void)sortWithNSObjectArray:(IOSObjectArray *)array
                      withInt:(jint)start
                      withInt:(jint)end
       withJavaUtilComparator:(id<JavaUtilComparator>)comparator;

+ (void)sortWithNSObjectArray:(IOSObjectArray *)array
       withJavaUtilComparator:(id<JavaUtilComparator>)comparator;

+ (NSString *)toStringWithBooleanArray:(IOSBooleanArray *)array;

+ (NSString *)toStringWithByteArray:(IOSByteArray *)array;

+ (NSString *)toStringWithCharArray:(IOSCharArray *)array;

+ (NSString *)toStringWithDoubleArray:(IOSDoubleArray *)array;

+ (NSString *)toStringWithFloatArray:(IOSFloatArray *)array;

+ (NSString *)toStringWithIntArray:(IOSIntArray *)array;

+ (NSString *)toStringWithLongArray:(IOSLongArray *)array;

+ (NSString *)toStringWithShortArray:(IOSShortArray *)array;

+ (NSString *)toStringWithNSObjectArray:(IOSObjectArray *)array;

+ (NSString *)deepToStringWithNSObjectArray:(IOSObjectArray *)array;

+ (IOSBooleanArray *)copyOfWithBooleanArray:(IOSBooleanArray *)original
                                    withInt:(jint)newLength OBJC_METHOD_FAMILY_NONE;

+ (IOSByteArray *)copyOfWithByteArray:(IOSByteArray *)original
                              withInt:(jint)newLength OBJC_METHOD_FAMILY_NONE;

+ (IOSCharArray *)copyOfWithCharArray:(IOSCharArray *)original
                              withInt:(jint)newLength OBJC_METHOD_FAMILY_NONE;

+ (IOSDoubleArray *)copyOfWithDoubleArray:(IOSDoubleArray *)original
                                  withInt:(jint)newLength OBJC_METHOD_FAMILY_NONE;

+ (IOSFloatArray *)copyOfWithFloatArray:(IOSFloatArray *)original
                                withInt:(jint)newLength OBJC_METHOD_FAMILY_NONE;

+ (IOSIntArray *)copyOfWithIntArray:(IOSIntArray *)original
                            withInt:(jint)newLength OBJC_METHOD_FAMILY_NONE;

+ (IOSLongArray *)copyOfWithLongArray:(IOSLongArray *)original
                              withInt:(jint)newLength OBJC_METHOD_FAMILY_NONE;

+ (IOSShortArray *)copyOfWithShortArray:(IOSShortArray *)original
                                withInt:(jint)newLength OBJC_METHOD_FAMILY_NONE;

+ (IOSObjectArray *)copyOfWithNSObjectArray:(IOSObjectArray *)original
                                    withInt:(jint)newLength OBJC_METHOD_FAMILY_NONE;

+ (IOSObjectArray *)copyOfWithNSObjectArray:(IOSObjectArray *)original
                                    withInt:(jint)newLength
                               withIOSClass:(IOSClass *)newType OBJC_METHOD_FAMILY_NONE;

+ (IOSBooleanArray *)copyOfRangeWithBooleanArray:(IOSBooleanArray *)original
                                         withInt:(jint)start
                                         withInt:(jint)end OBJC_METHOD_FAMILY_NONE;

+ (IOSByteArray *)copyOfRangeWithByteArray:(IOSByteArray *)original
                                   withInt:(jint)start
                                   withInt:(jint)end OBJC_METHOD_FAMILY_NONE;

+ (IOSCharArray *)copyOfRangeWithCharArray:(IOSCharArray *)original
                                   withInt:(jint)start
                                   withInt:(jint)end OBJC_METHOD_FAMILY_NONE;

+ (IOSDoubleArray *)copyOfRangeWithDoubleArray:(IOSDoubleArray *)original
                                       withInt:(jint)start
                                       withInt:(jint)end OBJC_METHOD_FAMILY_NONE;

+ (IOSFloatArray *)copyOfRangeWithFloatArray:(IOSFloatArray *)original
                                     withInt:(jint)start
                                     withInt:(jint)end OBJC_METHOD_FAMILY_NONE;

+ (IOSIntArray *)copyOfRangeWithIntArray:(IOSIntArray *)original
                                 withInt:(jint)start
                                 withInt:(jint)end OBJC_METHOD_FAMILY_NONE;

+ (IOSLongArray *)copyOfRangeWithLongArray:(IOSLongArray *)original
                                   withInt:(jint)start
                                   withInt:(jint)end OBJC_METHOD_FAMILY_NONE;

+ (IOSShortArray *)copyOfRangeWithShortArray:(IOSShortArray *)original
                                     withInt:(jint)start
                                     withInt:(jint)end OBJC_METHOD_FAMILY_NONE;

+ (IOSObjectArray *)copyOfRangeWithNSObjectArray:(IOSObjectArray *)original
                                         withInt:(jint)start
                                         withInt:(jint)end OBJC_METHOD_FAMILY_NONE;

+ (IOSObjectArray *)copyOfRangeWithNSObjectArray:(IOSObjectArray *)original
                                         withInt:(jint)start
                                         withInt:(jint)end
                                    withIOSClass:(IOSClass *)newType OBJC_METHOD_FAMILY_NONE;

@end

__attribute__((always_inline)) inline void JavaUtilArrays_init() {}
FOUNDATION_EXPORT id<JavaUtilList> JavaUtilArrays_asListWithNSObjectArray_(IOSObjectArray *array);
FOUNDATION_EXPORT jint JavaUtilArrays_binarySearchWithByteArray_withByte_(IOSByteArray *array, jbyte value);
FOUNDATION_EXPORT jint JavaUtilArrays_binarySearchWithByteArray_withInt_withInt_withByte_(IOSByteArray *array, jint startIndex, jint endIndex, jbyte value);
FOUNDATION_EXPORT jint JavaUtilArrays_binarySearchWithCharArray_withChar_(IOSCharArray *array, jchar value);
FOUNDATION_EXPORT jint JavaUtilArrays_binarySearchWithCharArray_withInt_withInt_withChar_(IOSCharArray *array, jint startIndex, jint endIndex, jchar value);
FOUNDATION_EXPORT jint JavaUtilArrays_binarySearchWithDoubleArray_withDouble_(IOSDoubleArray *array, jdouble value);
FOUNDATION_EXPORT jint JavaUtilArrays_binarySearchWithDoubleArray_withInt_withInt_withDouble_(IOSDoubleArray *array, jint startIndex, jint endIndex, jdouble value);
FOUNDATION_EXPORT jint JavaUtilArrays_binarySearchWithFloatArray_withFloat_(IOSFloatArray *array, jfloat value);
FOUNDATION_EXPORT jint JavaUtilArrays_binarySearchWithFloatArray_withInt_withInt_withFloat_(IOSFloatArray *array, jint startIndex, jint endIndex, jfloat value);
FOUNDATION_EXPORT jint JavaUtilArrays_binarySearchWithIntArray_withInt_(IOSIntArray *array, jint value);
FOUNDATION_EXPORT jint JavaUtilArrays_binarySearchWithIntArray_withInt_withInt_withInt_(IOSIntArray *array, jint startIndex, jint endIndex, jint value);
FOUNDATION_EXPORT jint JavaUtilArrays_binarySearchWithLongArray_withLong_(IOSLongArray *array, jlong value);
FOUNDATION_EXPORT jint JavaUtilArrays_binarySearchWithLongArray_withInt_withInt_withLong_(IOSLongArray *array, jint startIndex, jint endIndex, jlong value);
FOUNDATION_EXPORT jint JavaUtilArrays_binarySearchWithNSObjectArray_withId_(IOSObjectArray *array, id value);
FOUNDATION_EXPORT jint JavaUtilArrays_binarySearchWithNSObjectArray_withInt_withInt_withId_(IOSObjectArray *array, jint startIndex, jint endIndex, id value);
FOUNDATION_EXPORT jint JavaUtilArrays_binarySearchWithNSObjectArray_withId_withJavaUtilComparator_(IOSObjectArray *array, id value, id<JavaUtilComparator> comparator);
FOUNDATION_EXPORT jint JavaUtilArrays_binarySearchWithNSObjectArray_withInt_withInt_withId_withJavaUtilComparator_(IOSObjectArray *array, jint startIndex, jint endIndex, id value, id<JavaUtilComparator> comparator);
FOUNDATION_EXPORT jint JavaUtilArrays_binarySearchWithShortArray_withShort_(IOSShortArray *array, jshort value);
FOUNDATION_EXPORT jint JavaUtilArrays_binarySearchWithShortArray_withInt_withInt_withShort_(IOSShortArray *array, jint startIndex, jint endIndex, jshort value);
FOUNDATION_EXPORT void JavaUtilArrays_fillWithByteArray_withByte_(IOSByteArray *array, jbyte value);
FOUNDATION_EXPORT void JavaUtilArrays_fillWithByteArray_withInt_withInt_withByte_(IOSByteArray *array, jint start, jint end, jbyte value);
FOUNDATION_EXPORT void JavaUtilArrays_fillWithShortArray_withShort_(IOSShortArray *array, jshort value);
FOUNDATION_EXPORT void JavaUtilArrays_fillWithShortArray_withInt_withInt_withShort_(IOSShortArray *array, jint start, jint end, jshort value);
FOUNDATION_EXPORT void JavaUtilArrays_fillWithCharArray_withChar_(IOSCharArray *array, jchar value);
FOUNDATION_EXPORT void JavaUtilArrays_fillWithCharArray_withInt_withInt_withChar_(IOSCharArray *array, jint start, jint end, jchar value);
FOUNDATION_EXPORT void JavaUtilArrays_fillWithIntArray_withInt_(IOSIntArray *array, jint value);
FOUNDATION_EXPORT void JavaUtilArrays_fillWithIntArray_withInt_withInt_withInt_(IOSIntArray *array, jint start, jint end, jint value);
FOUNDATION_EXPORT void JavaUtilArrays_fillWithLongArray_withLong_(IOSLongArray *array, jlong value);
FOUNDATION_EXPORT void JavaUtilArrays_fillWithLongArray_withInt_withInt_withLong_(IOSLongArray *array, jint start, jint end, jlong value);
FOUNDATION_EXPORT void JavaUtilArrays_fillWithFloatArray_withFloat_(IOSFloatArray *array, jfloat value);
FOUNDATION_EXPORT void JavaUtilArrays_fillWithFloatArray_withInt_withInt_withFloat_(IOSFloatArray *array, jint start, jint end, jfloat value);
FOUNDATION_EXPORT void JavaUtilArrays_fillWithDoubleArray_withDouble_(IOSDoubleArray *array, jdouble value);
FOUNDATION_EXPORT void JavaUtilArrays_fillWithDoubleArray_withInt_withInt_withDouble_(IOSDoubleArray *array, jint start, jint end, jdouble value);
FOUNDATION_EXPORT void JavaUtilArrays_fillWithBooleanArray_withBoolean_(IOSBooleanArray *array, jboolean value);
FOUNDATION_EXPORT void JavaUtilArrays_fillWithBooleanArray_withInt_withInt_withBoolean_(IOSBooleanArray *array, jint start, jint end, jboolean value);
FOUNDATION_EXPORT void JavaUtilArrays_fillWithNSObjectArray_withId_(IOSObjectArray *array, id value);
FOUNDATION_EXPORT void JavaUtilArrays_fillWithNSObjectArray_withInt_withInt_withId_(IOSObjectArray *array, jint start, jint end, id value);
FOUNDATION_EXPORT jint JavaUtilArrays_hashCodeWithBooleanArray_(IOSBooleanArray *array);
FOUNDATION_EXPORT jint JavaUtilArrays_hashCodeWithIntArray_(IOSIntArray *array);
FOUNDATION_EXPORT jint JavaUtilArrays_hashCodeWithShortArray_(IOSShortArray *array);
FOUNDATION_EXPORT jint JavaUtilArrays_hashCodeWithCharArray_(IOSCharArray *array);
FOUNDATION_EXPORT jint JavaUtilArrays_hashCodeWithByteArray_(IOSByteArray *array);
FOUNDATION_EXPORT jint JavaUtilArrays_hashCodeWithLongArray_(IOSLongArray *array);
FOUNDATION_EXPORT jint JavaUtilArrays_hashCodeWithFloatArray_(IOSFloatArray *array);
FOUNDATION_EXPORT jint JavaUtilArrays_hashCodeWithDoubleArray_(IOSDoubleArray *array);
FOUNDATION_EXPORT jint JavaUtilArrays_hashCodeWithNSObjectArray_(IOSObjectArray *array);
FOUNDATION_EXPORT jint JavaUtilArrays_deepHashCodeWithNSObjectArray_(IOSObjectArray *array);
FOUNDATION_EXPORT jboolean JavaUtilArrays_equalsWithByteArray_withByteArray_(IOSByteArray *array1, IOSByteArray *array2);
FOUNDATION_EXPORT jboolean JavaUtilArrays_equalsWithShortArray_withShortArray_(IOSShortArray *array1, IOSShortArray *array2);
FOUNDATION_EXPORT jboolean JavaUtilArrays_equalsWithCharArray_withCharArray_(IOSCharArray *array1, IOSCharArray *array2);
FOUNDATION_EXPORT jboolean JavaUtilArrays_equalsWithIntArray_withIntArray_(IOSIntArray *array1, IOSIntArray *array2);
FOUNDATION_EXPORT jboolean JavaUtilArrays_equalsWithLongArray_withLongArray_(IOSLongArray *array1, IOSLongArray *array2);
FOUNDATION_EXPORT jboolean JavaUtilArrays_equalsWithFloatArray_withFloatArray_(IOSFloatArray *array1, IOSFloatArray *array2);
FOUNDATION_EXPORT jboolean JavaUtilArrays_equalsWithDoubleArray_withDoubleArray_(IOSDoubleArray *array1, IOSDoubleArray *array2);
FOUNDATION_EXPORT jboolean JavaUtilArrays_equalsWithBooleanArray_withBooleanArray_(IOSBooleanArray *array1, IOSBooleanArray *array2);
FOUNDATION_EXPORT jboolean JavaUtilArrays_equalsWithNSObjectArray_withNSObjectArray_(IOSObjectArray *array1, IOSObjectArray *array2);
FOUNDATION_EXPORT jboolean JavaUtilArrays_deepEqualsWithNSObjectArray_withNSObjectArray_(IOSObjectArray *array1, IOSObjectArray *array2);
FOUNDATION_EXPORT void JavaUtilArrays_sortWithByteArray_(IOSByteArray *array);
FOUNDATION_EXPORT void JavaUtilArrays_sortWithByteArray_withInt_withInt_(IOSByteArray *array, jint start, jint end);
FOUNDATION_EXPORT void JavaUtilArrays_checkOffsetAndCountWithInt_withInt_withInt_(jint arrayLength, jint offset, jint count);
FOUNDATION_EXPORT void JavaUtilArrays_checkStartAndEndWithInt_withInt_withInt_(jint len, jint start, jint end);
FOUNDATION_EXPORT void JavaUtilArrays_sortWithCharArray_(IOSCharArray *array);
FOUNDATION_EXPORT void JavaUtilArrays_sortWithCharArray_withInt_withInt_(IOSCharArray *array, jint start, jint end);
FOUNDATION_EXPORT void JavaUtilArrays_sortWithDoubleArray_(IOSDoubleArray *array);
FOUNDATION_EXPORT void JavaUtilArrays_sortWithDoubleArray_withInt_withInt_(IOSDoubleArray *array, jint start, jint end);
FOUNDATION_EXPORT void JavaUtilArrays_sortWithFloatArray_(IOSFloatArray *array);
FOUNDATION_EXPORT void JavaUtilArrays_sortWithFloatArray_withInt_withInt_(IOSFloatArray *array, jint start, jint end);
FOUNDATION_EXPORT void JavaUtilArrays_sortWithIntArray_(IOSIntArray *array);
FOUNDATION_EXPORT void JavaUtilArrays_sortWithIntArray_withInt_withInt_(IOSIntArray *array, jint start, jint end);
FOUNDATION_EXPORT void JavaUtilArrays_sortWithLongArray_(IOSLongArray *array);
FOUNDATION_EXPORT void JavaUtilArrays_sortWithLongArray_withInt_withInt_(IOSLongArray *array, jint start, jint end);
FOUNDATION_EXPORT void JavaUtilArrays_sortWithShortArray_(IOSShortArray *array);
FOUNDATION_EXPORT void JavaUtilArrays_sortWithShortArray_withInt_withInt_(IOSShortArray *array, jint start, jint end);
FOUNDATION_EXPORT void JavaUtilArrays_sortWithNSObjectArray_(IOSObjectArray *array);
FOUNDATION_EXPORT void JavaUtilArrays_sortWithNSObjectArray_withInt_withInt_(IOSObjectArray *array, jint start, jint end);
FOUNDATION_EXPORT void JavaUtilArrays_sortWithNSObjectArray_withInt_withInt_withJavaUtilComparator_(IOSObjectArray *array, jint start, jint end, id<JavaUtilComparator> comparator);
FOUNDATION_EXPORT void JavaUtilArrays_sortWithNSObjectArray_withJavaUtilComparator_(IOSObjectArray *array, id<JavaUtilComparator> comparator);
FOUNDATION_EXPORT NSString *JavaUtilArrays_toStringWithBooleanArray_(IOSBooleanArray *array);
FOUNDATION_EXPORT NSString *JavaUtilArrays_toStringWithByteArray_(IOSByteArray *array);
FOUNDATION_EXPORT NSString *JavaUtilArrays_toStringWithCharArray_(IOSCharArray *array);
FOUNDATION_EXPORT NSString *JavaUtilArrays_toStringWithDoubleArray_(IOSDoubleArray *array);
FOUNDATION_EXPORT NSString *JavaUtilArrays_toStringWithFloatArray_(IOSFloatArray *array);
FOUNDATION_EXPORT NSString *JavaUtilArrays_toStringWithIntArray_(IOSIntArray *array);
FOUNDATION_EXPORT NSString *JavaUtilArrays_toStringWithLongArray_(IOSLongArray *array);
FOUNDATION_EXPORT NSString *JavaUtilArrays_toStringWithShortArray_(IOSShortArray *array);
FOUNDATION_EXPORT NSString *JavaUtilArrays_toStringWithNSObjectArray_(IOSObjectArray *array);
FOUNDATION_EXPORT NSString *JavaUtilArrays_deepToStringWithNSObjectArray_(IOSObjectArray *array);
FOUNDATION_EXPORT IOSBooleanArray *JavaUtilArrays_copyOfWithBooleanArray_withInt_(IOSBooleanArray *original, jint newLength);
FOUNDATION_EXPORT IOSByteArray *JavaUtilArrays_copyOfWithByteArray_withInt_(IOSByteArray *original, jint newLength);
FOUNDATION_EXPORT IOSCharArray *JavaUtilArrays_copyOfWithCharArray_withInt_(IOSCharArray *original, jint newLength);
FOUNDATION_EXPORT IOSDoubleArray *JavaUtilArrays_copyOfWithDoubleArray_withInt_(IOSDoubleArray *original, jint newLength);
FOUNDATION_EXPORT IOSFloatArray *JavaUtilArrays_copyOfWithFloatArray_withInt_(IOSFloatArray *original, jint newLength);
FOUNDATION_EXPORT IOSIntArray *JavaUtilArrays_copyOfWithIntArray_withInt_(IOSIntArray *original, jint newLength);
FOUNDATION_EXPORT IOSLongArray *JavaUtilArrays_copyOfWithLongArray_withInt_(IOSLongArray *original, jint newLength);
FOUNDATION_EXPORT IOSShortArray *JavaUtilArrays_copyOfWithShortArray_withInt_(IOSShortArray *original, jint newLength);
FOUNDATION_EXPORT IOSObjectArray *JavaUtilArrays_copyOfWithNSObjectArray_withInt_(IOSObjectArray *original, jint newLength);
FOUNDATION_EXPORT IOSObjectArray *JavaUtilArrays_copyOfWithNSObjectArray_withInt_withIOSClass_(IOSObjectArray *original, jint newLength, IOSClass *newType);
FOUNDATION_EXPORT IOSBooleanArray *JavaUtilArrays_copyOfRangeWithBooleanArray_withInt_withInt_(IOSBooleanArray *original, jint start, jint end);
FOUNDATION_EXPORT IOSByteArray *JavaUtilArrays_copyOfRangeWithByteArray_withInt_withInt_(IOSByteArray *original, jint start, jint end);
FOUNDATION_EXPORT IOSCharArray *JavaUtilArrays_copyOfRangeWithCharArray_withInt_withInt_(IOSCharArray *original, jint start, jint end);
FOUNDATION_EXPORT IOSDoubleArray *JavaUtilArrays_copyOfRangeWithDoubleArray_withInt_withInt_(IOSDoubleArray *original, jint start, jint end);
FOUNDATION_EXPORT IOSFloatArray *JavaUtilArrays_copyOfRangeWithFloatArray_withInt_withInt_(IOSFloatArray *original, jint start, jint end);
FOUNDATION_EXPORT IOSIntArray *JavaUtilArrays_copyOfRangeWithIntArray_withInt_withInt_(IOSIntArray *original, jint start, jint end);
FOUNDATION_EXPORT IOSLongArray *JavaUtilArrays_copyOfRangeWithLongArray_withInt_withInt_(IOSLongArray *original, jint start, jint end);
FOUNDATION_EXPORT IOSShortArray *JavaUtilArrays_copyOfRangeWithShortArray_withInt_withInt_(IOSShortArray *original, jint start, jint end);
FOUNDATION_EXPORT IOSObjectArray *JavaUtilArrays_copyOfRangeWithNSObjectArray_withInt_withInt_(IOSObjectArray *original, jint start, jint end);
FOUNDATION_EXPORT IOSObjectArray *JavaUtilArrays_copyOfRangeWithNSObjectArray_withInt_withInt_withIOSClass_(IOSObjectArray *original, jint start, jint end, IOSClass *newType);

#define JavaUtilArrays_ArrayList_serialVersionUID -2764017481108945198LL

@interface JavaUtilArrays_ArrayList : JavaUtilAbstractList < JavaUtilList, JavaIoSerializable, JavaUtilRandomAccess > {
}

- (instancetype)initWithNSObjectArray:(IOSObjectArray *)storage;

- (jboolean)containsWithId:(id)object;

- (id)getWithInt:(jint)location;

- (jint)indexOfWithId:(id)object;

- (jint)lastIndexOfWithId:(id)object;

- (id)setWithInt:(jint)location
          withId:(id)object;

- (jint)size;

- (IOSObjectArray *)toArray;

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)contents;


@end

__attribute__((always_inline)) inline void JavaUtilArrays_ArrayList_init() {}

J2OBJC_STATIC_FIELD_GETTER(JavaUtilArrays_ArrayList, serialVersionUID, jlong)

#endif // _JavaUtilArrays_H_
