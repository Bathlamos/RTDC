//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/util/Hashtable.java
//

#ifndef _JavaUtilHashtable_H_
#define _JavaUtilHashtable_H_

@class IOSObjectArray;
@class JavaIoObjectInputStream;
@class JavaIoObjectOutputStream;
@protocol JavaUtilCollection;
@protocol JavaUtilSet;

#import "JreEmulation.h"
#include "java/io/Serializable.h"
#include "java/util/AbstractCollection.h"
#include "java/util/AbstractSet.h"
#include "java/util/Dictionary.h"
#include "java/util/Enumeration.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"

#define JavaUtilHashtable_CHARS_PER_ENTRY 15
#define JavaUtilHashtable_DEFAULT_LOAD_FACTOR 0.75f
#define JavaUtilHashtable_MAXIMUM_CAPACITY 1073741824
#define JavaUtilHashtable_MINIMUM_CAPACITY 4
#define JavaUtilHashtable_serialVersionUID 1421746759512286392LL

@interface JavaUtilHashtable : JavaUtilDictionary < JavaUtilMap, NSCopying, JavaIoSerializable > {
}

- (instancetype)init;

- (instancetype)initWithInt:(jint)capacity;

- (instancetype)initWithInt:(jint)capacity
                  withFloat:(jfloat)loadFactor;

- (instancetype)initWithJavaUtilMap:(id<JavaUtilMap>)map;

- (id)clone;

- (jboolean)isEmpty;

- (jint)size;

- (id)getWithId:(id)key;

- (jboolean)containsKeyWithId:(id)key;

- (jboolean)containsValueWithId:(id)value;

- (jboolean)containsWithId:(id)value;

- (id)putWithId:(id)key
         withId:(id)value;

- (void)putAllWithJavaUtilMap:(id<JavaUtilMap>)map;

- (void)rehash;

- (id)removeWithId:(id)key;

- (void)clear;

- (id<JavaUtilSet>)keySet;

- (id<JavaUtilCollection>)values;

- (id<JavaUtilSet>)entrySet;

- (id<JavaUtilEnumeration>)keys;

- (id<JavaUtilEnumeration>)elements;

- (jboolean)isEqual:(id)object;

- (NSUInteger)hash;

- (NSString *)description;

@end

FOUNDATION_EXPORT BOOL JavaUtilHashtable_initialized;
J2OBJC_STATIC_INIT(JavaUtilHashtable)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilHashtable, MINIMUM_CAPACITY, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilHashtable, MAXIMUM_CAPACITY, jint)

FOUNDATION_EXPORT IOSObjectArray *JavaUtilHashtable_EMPTY_TABLE_;
J2OBJC_STATIC_FIELD_GETTER(JavaUtilHashtable, EMPTY_TABLE_, IOSObjectArray *)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilHashtable, DEFAULT_LOAD_FACTOR, jfloat)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilHashtable, CHARS_PER_ENTRY, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaUtilHashtable, serialVersionUID, jlong)

FOUNDATION_EXPORT IOSObjectArray *JavaUtilHashtable_serialPersistentFields_;
J2OBJC_STATIC_FIELD_GETTER(JavaUtilHashtable, serialPersistentFields_, IOSObjectArray *)

@interface JavaUtilHashtable_HashtableEntry : NSObject < JavaUtilMap_Entry > {
 @public
  id key_;
  id value_;
  jint hash__;
  JavaUtilHashtable_HashtableEntry *next_;
}

- (instancetype)initWithId:(id)key
                    withId:(id)value
                   withInt:(jint)hash_
withJavaUtilHashtable_HashtableEntry:(JavaUtilHashtable_HashtableEntry *)next;

- (id)getKey;

- (id)getValue;

- (id)setValueWithId:(id)value;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

- (NSString *)description;

@end

__attribute__((always_inline)) inline void JavaUtilHashtable_HashtableEntry_init() {}

J2OBJC_FIELD_SETTER(JavaUtilHashtable_HashtableEntry, key_, id)
J2OBJC_FIELD_SETTER(JavaUtilHashtable_HashtableEntry, value_, id)
J2OBJC_FIELD_SETTER(JavaUtilHashtable_HashtableEntry, next_, JavaUtilHashtable_HashtableEntry *)

@interface JavaUtilHashtable_HashIterator : NSObject {
 @public
  jint nextIndex_;
  JavaUtilHashtable_HashtableEntry *nextEntry__;
  JavaUtilHashtable_HashtableEntry *lastEntryReturned_;
  jint expectedModCount_;
}

- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)outer$;

- (jboolean)hasNext;

- (JavaUtilHashtable_HashtableEntry *)nextEntry;

- (JavaUtilHashtable_HashtableEntry *)nextEntryNotFailFast;

- (void)remove;

@end

__attribute__((always_inline)) inline void JavaUtilHashtable_HashIterator_init() {}

J2OBJC_FIELD_SETTER(JavaUtilHashtable_HashIterator, nextEntry__, JavaUtilHashtable_HashtableEntry *)
J2OBJC_FIELD_SETTER(JavaUtilHashtable_HashIterator, lastEntryReturned_, JavaUtilHashtable_HashtableEntry *)

@interface JavaUtilHashtable_KeyIterator : JavaUtilHashtable_HashIterator < JavaUtilIterator > {
}

- (id)next;

- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)outer$;

@end

__attribute__((always_inline)) inline void JavaUtilHashtable_KeyIterator_init() {}

@interface JavaUtilHashtable_ValueIterator : JavaUtilHashtable_HashIterator < JavaUtilIterator > {
}

- (id)next;

- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)outer$;

@end

__attribute__((always_inline)) inline void JavaUtilHashtable_ValueIterator_init() {}

@interface JavaUtilHashtable_EntryIterator : JavaUtilHashtable_HashIterator < JavaUtilIterator > {
}

- (id<JavaUtilMap_Entry>)next;

- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)outer$;

@end

__attribute__((always_inline)) inline void JavaUtilHashtable_EntryIterator_init() {}

@interface JavaUtilHashtable_KeyEnumeration : JavaUtilHashtable_HashIterator < JavaUtilEnumeration > {
}

- (jboolean)hasMoreElements;

- (id)nextElement;

- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)outer$;

@end

__attribute__((always_inline)) inline void JavaUtilHashtable_KeyEnumeration_init() {}

@interface JavaUtilHashtable_ValueEnumeration : JavaUtilHashtable_HashIterator < JavaUtilEnumeration > {
}

- (jboolean)hasMoreElements;

- (id)nextElement;

- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)outer$;

@end

__attribute__((always_inline)) inline void JavaUtilHashtable_ValueEnumeration_init() {}

@interface JavaUtilHashtable_KeySet : JavaUtilAbstractSet {
}

- (id<JavaUtilIterator>)iterator;

- (jint)size;

- (jboolean)containsWithId:(id)o;

- (jboolean)removeWithId:(id)o;

- (void)clear;

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)isEqual:(id)object;

- (NSUInteger)hash;

- (NSString *)description;

- (IOSObjectArray *)toArray;

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)a;

- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)outer$;


@end

__attribute__((always_inline)) inline void JavaUtilHashtable_KeySet_init() {}

@interface JavaUtilHashtable_Values : JavaUtilAbstractCollection {
}

- (id<JavaUtilIterator>)iterator;

- (jint)size;

- (jboolean)containsWithId:(id)o;

- (void)clear;

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (NSString *)description;

- (IOSObjectArray *)toArray;

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)a;

- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)outer$;


@end

__attribute__((always_inline)) inline void JavaUtilHashtable_Values_init() {}

@interface JavaUtilHashtable_EntrySet : JavaUtilAbstractSet {
}

- (id<JavaUtilIterator>)iterator;

- (jboolean)containsWithId:(id)o;

- (jboolean)removeWithId:(id)o;

- (jint)size;

- (void)clear;

- (jboolean)removeAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)retainAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)containsAllWithJavaUtilCollection:(id<JavaUtilCollection>)collection;

- (jboolean)isEqual:(id)object;

- (NSUInteger)hash;

- (NSString *)description;

- (IOSObjectArray *)toArray;

- (IOSObjectArray *)toArrayWithNSObjectArray:(IOSObjectArray *)a;

- (instancetype)initWithJavaUtilHashtable:(JavaUtilHashtable *)outer$;


@end

__attribute__((always_inline)) inline void JavaUtilHashtable_EntrySet_init() {}

#endif // _JavaUtilHashtable_H_
