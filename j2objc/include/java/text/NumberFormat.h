//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/text/NumberFormat.java
//

#ifndef _JavaTextNumberFormat_H_
#define _JavaTextNumberFormat_H_

@class IOSObjectArray;
@class JavaLangStringBuffer;
@class JavaMathRoundingModeEnum;
@class JavaTextFieldPosition;
@class JavaTextParsePosition;
@class JavaUtilCurrency;
@class JavaUtilLocale;

#import "JreEmulation.h"
#include "java/text/Format.h"

#define JavaTextNumberFormat_FRACTION_FIELD 1
#define JavaTextNumberFormat_INTEGER_FIELD 0
#define JavaTextNumberFormat_serialVersionUID -2308460125733713944LL

@interface JavaTextNumberFormat : JavaTextFormat {
}

- (instancetype)init;

- (id)clone;

- (jboolean)isEqual:(id)object;

- (NSString *)formatWithDouble:(jdouble)value;

- (JavaLangStringBuffer *)formatWithDouble:(jdouble)value
                  withJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
                 withJavaTextFieldPosition:(JavaTextFieldPosition *)field;

- (NSString *)formatWithLong:(jlong)value;

- (JavaLangStringBuffer *)formatWithLong:(jlong)value
                withJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
               withJavaTextFieldPosition:(JavaTextFieldPosition *)field;

- (JavaLangStringBuffer *)formatWithId:(id)object
              withJavaLangStringBuffer:(JavaLangStringBuffer *)buffer
             withJavaTextFieldPosition:(JavaTextFieldPosition *)field;

+ (IOSObjectArray *)getAvailableLocales;

- (JavaUtilCurrency *)getCurrency;

+ (JavaTextNumberFormat *)getCurrencyInstance;

+ (JavaTextNumberFormat *)getCurrencyInstanceWithJavaUtilLocale:(JavaUtilLocale *)locale;

+ (JavaTextNumberFormat *)getIntegerInstance;

+ (JavaTextNumberFormat *)getIntegerInstanceWithJavaUtilLocale:(JavaUtilLocale *)locale;

+ (JavaTextNumberFormat *)getInstance;

+ (JavaTextNumberFormat *)getInstanceWithJavaUtilLocale:(JavaUtilLocale *)locale;

- (jint)getMaximumFractionDigits;

- (jint)getMaximumIntegerDigits;

- (jint)getMinimumFractionDigits;

- (jint)getMinimumIntegerDigits;

+ (JavaTextNumberFormat *)getNumberInstance;

+ (JavaTextNumberFormat *)getNumberInstanceWithJavaUtilLocale:(JavaUtilLocale *)locale;

+ (JavaTextNumberFormat *)getPercentInstance;

+ (JavaTextNumberFormat *)getPercentInstanceWithJavaUtilLocale:(JavaUtilLocale *)locale;

- (NSUInteger)hash;

- (jboolean)isGroupingUsed;

- (jboolean)isParseIntegerOnly;

- (NSNumber *)parseWithNSString:(NSString *)string;

- (NSNumber *)parseWithNSString:(NSString *)string
      withJavaTextParsePosition:(JavaTextParsePosition *)position;

- (id)parseObjectWithNSString:(NSString *)string
    withJavaTextParsePosition:(JavaTextParsePosition *)position;

- (void)setCurrencyWithJavaUtilCurrency:(JavaUtilCurrency *)currency;

- (void)setGroupingUsedWithBoolean:(jboolean)value;

- (void)setMaximumFractionDigitsWithInt:(jint)value;

- (void)setMaximumIntegerDigitsWithInt:(jint)value;

- (void)setMinimumFractionDigitsWithInt:(jint)value;

- (void)setMinimumIntegerDigitsWithInt:(jint)value;

- (void)setParseIntegerOnlyWithBoolean:(jboolean)value;

- (JavaMathRoundingModeEnum *)getRoundingMode;

- (void)setRoundingModeWithJavaMathRoundingModeEnum:(JavaMathRoundingModeEnum *)roundingMode;

@end

__attribute__((always_inline)) inline void JavaTextNumberFormat_init() {}
FOUNDATION_EXPORT IOSObjectArray *JavaTextNumberFormat_getAvailableLocales();
FOUNDATION_EXPORT JavaTextNumberFormat *JavaTextNumberFormat_getCurrencyInstance();
FOUNDATION_EXPORT JavaTextNumberFormat *JavaTextNumberFormat_getCurrencyInstanceWithJavaUtilLocale_(JavaUtilLocale *locale);
FOUNDATION_EXPORT JavaTextNumberFormat *JavaTextNumberFormat_getIntegerInstance();
FOUNDATION_EXPORT JavaTextNumberFormat *JavaTextNumberFormat_getIntegerInstanceWithJavaUtilLocale_(JavaUtilLocale *locale);
FOUNDATION_EXPORT JavaTextNumberFormat *JavaTextNumberFormat_getInstance();
FOUNDATION_EXPORT JavaTextNumberFormat *JavaTextNumberFormat_getInstanceWithJavaUtilLocale_(JavaUtilLocale *locale);
FOUNDATION_EXPORT JavaTextNumberFormat *JavaTextNumberFormat_getNumberInstance();
FOUNDATION_EXPORT JavaTextNumberFormat *JavaTextNumberFormat_getNumberInstanceWithJavaUtilLocale_(JavaUtilLocale *locale);
FOUNDATION_EXPORT JavaTextNumberFormat *JavaTextNumberFormat_getPercentInstance();
FOUNDATION_EXPORT JavaTextNumberFormat *JavaTextNumberFormat_getPercentInstanceWithJavaUtilLocale_(JavaUtilLocale *locale);

J2OBJC_STATIC_FIELD_GETTER(JavaTextNumberFormat, serialVersionUID, jlong)

J2OBJC_STATIC_FIELD_GETTER(JavaTextNumberFormat, INTEGER_FIELD, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaTextNumberFormat, FRACTION_FIELD, jint)

#define JavaTextNumberFormat_Field_serialVersionUID 7494728892700160890LL

@interface JavaTextNumberFormat_Field : JavaTextFormat_Field {
}

- (instancetype)initWithNSString:(NSString *)fieldName;

@end

FOUNDATION_EXPORT BOOL JavaTextNumberFormat_Field_initialized;
J2OBJC_STATIC_INIT(JavaTextNumberFormat_Field)

J2OBJC_STATIC_FIELD_GETTER(JavaTextNumberFormat_Field, serialVersionUID, jlong)

FOUNDATION_EXPORT JavaTextNumberFormat_Field *JavaTextNumberFormat_Field_SIGN_;
J2OBJC_STATIC_FIELD_GETTER(JavaTextNumberFormat_Field, SIGN_, JavaTextNumberFormat_Field *)

FOUNDATION_EXPORT JavaTextNumberFormat_Field *JavaTextNumberFormat_Field_INTEGER_;
J2OBJC_STATIC_FIELD_GETTER(JavaTextNumberFormat_Field, INTEGER_, JavaTextNumberFormat_Field *)

FOUNDATION_EXPORT JavaTextNumberFormat_Field *JavaTextNumberFormat_Field_FRACTION_;
J2OBJC_STATIC_FIELD_GETTER(JavaTextNumberFormat_Field, FRACTION_, JavaTextNumberFormat_Field *)

FOUNDATION_EXPORT JavaTextNumberFormat_Field *JavaTextNumberFormat_Field_EXPONENT_;
J2OBJC_STATIC_FIELD_GETTER(JavaTextNumberFormat_Field, EXPONENT_, JavaTextNumberFormat_Field *)

FOUNDATION_EXPORT JavaTextNumberFormat_Field *JavaTextNumberFormat_Field_EXPONENT_SIGN_;
J2OBJC_STATIC_FIELD_GETTER(JavaTextNumberFormat_Field, EXPONENT_SIGN_, JavaTextNumberFormat_Field *)

FOUNDATION_EXPORT JavaTextNumberFormat_Field *JavaTextNumberFormat_Field_EXPONENT_SYMBOL_;
J2OBJC_STATIC_FIELD_GETTER(JavaTextNumberFormat_Field, EXPONENT_SYMBOL_, JavaTextNumberFormat_Field *)

FOUNDATION_EXPORT JavaTextNumberFormat_Field *JavaTextNumberFormat_Field_DECIMAL_SEPARATOR_;
J2OBJC_STATIC_FIELD_GETTER(JavaTextNumberFormat_Field, DECIMAL_SEPARATOR_, JavaTextNumberFormat_Field *)

FOUNDATION_EXPORT JavaTextNumberFormat_Field *JavaTextNumberFormat_Field_GROUPING_SEPARATOR_;
J2OBJC_STATIC_FIELD_GETTER(JavaTextNumberFormat_Field, GROUPING_SEPARATOR_, JavaTextNumberFormat_Field *)

FOUNDATION_EXPORT JavaTextNumberFormat_Field *JavaTextNumberFormat_Field_PERCENT_;
J2OBJC_STATIC_FIELD_GETTER(JavaTextNumberFormat_Field, PERCENT_, JavaTextNumberFormat_Field *)

FOUNDATION_EXPORT JavaTextNumberFormat_Field *JavaTextNumberFormat_Field_PERMILLE_;
J2OBJC_STATIC_FIELD_GETTER(JavaTextNumberFormat_Field, PERMILLE_, JavaTextNumberFormat_Field *)

FOUNDATION_EXPORT JavaTextNumberFormat_Field *JavaTextNumberFormat_Field_CURRENCY_;
J2OBJC_STATIC_FIELD_GETTER(JavaTextNumberFormat_Field, CURRENCY_, JavaTextNumberFormat_Field *)

#endif // _JavaTextNumberFormat_H_
