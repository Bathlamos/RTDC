//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/net/InetAddress.java
//

#ifndef _JavaNetInetAddress_H_
#define _JavaNetInetAddress_H_

@class IOSByteArray;
@class IOSObjectArray;
@class JavaIoObjectInputStream;
@class JavaIoObjectOutputStream;
@class JavaNetAddressCache;
@class JavaNetNetworkInterface;
@class JavaNetUnknownHostException;
@class JavaUtilConcurrentAtomicAtomicBoolean;
@class JavaUtilConcurrentCountDownLatch;

#import "JreEmulation.h"
#include "java/io/Serializable.h"
#include "java/lang/Thread.h"

#define JavaNetInetAddress_serialVersionUID 3286316764910316507LL

@interface JavaNetInetAddress : NSObject < JavaIoSerializable > {
 @public
  IOSByteArray *ipaddress_;
  NSString *hostName_;
}

- (instancetype)initWithInt:(jint)family
              withByteArray:(IOSByteArray *)ipaddress
               withNSString:(NSString *)hostName;

- (jboolean)isEqual:(id)obj;

- (IOSByteArray *)getAddress;

+ (IOSObjectArray *)getAllByNameWithNSString:(NSString *)host;

+ (JavaNetInetAddress *)getByNameWithNSString:(NSString *)host;

- (NSString *)getHostAddress;

- (NSString *)getHostName;

- (NSString *)getCanonicalHostName;

+ (JavaNetInetAddress *)getLocalHost;

- (NSUInteger)hash;

+ (void)clearDnsCache;

- (NSString *)description;

+ (jboolean)isNumericWithNSString:(NSString *)address;

+ (JavaNetInetAddress *)parseNumericAddressWithNSString:(NSString *)numericAddress;

+ (JavaNetInetAddress *)getLoopbackAddress;

- (jboolean)isAnyLocalAddress;

- (jboolean)isLinkLocalAddress;

- (jboolean)isLoopbackAddress;

- (jboolean)isMCGlobal;

- (jboolean)isMCLinkLocal;

- (jboolean)isMCNodeLocal;

- (jboolean)isMCOrgLocal;

- (jboolean)isMCSiteLocal;

- (jboolean)isMulticastAddress;

- (jboolean)isSiteLocalAddress;

- (jboolean)isReachableWithInt:(jint)timeout;

- (jboolean)isReachableWithJavaNetNetworkInterface:(JavaNetNetworkInterface *)networkInterface
                                           withInt:(jint)ttl
                                           withInt:(jint)timeout;

+ (JavaNetInetAddress *)getByAddressWithByteArray:(IOSByteArray *)ipAddress;

+ (JavaNetInetAddress *)getByAddressWithNSString:(NSString *)hostName
                                   withByteArray:(IOSByteArray *)ipAddress;

+ (JavaNetInetAddress *)getByAddressWithNSString:(NSString *)hostName
                                   withByteArray:(IOSByteArray *)ipAddress
                                         withInt:(jint)scopeId;

- (jint)getFamily;

@end

FOUNDATION_EXPORT BOOL JavaNetInetAddress_initialized;
J2OBJC_STATIC_INIT(JavaNetInetAddress)

J2OBJC_FIELD_SETTER(JavaNetInetAddress, ipaddress_, IOSByteArray *)
J2OBJC_FIELD_SETTER(JavaNetInetAddress, hostName_, NSString *)
FOUNDATION_EXPORT IOSObjectArray *JavaNetInetAddress_getAllByNameWithNSString_(NSString *host);
FOUNDATION_EXPORT JavaNetInetAddress *JavaNetInetAddress_getByNameWithNSString_(NSString *host);
FOUNDATION_EXPORT JavaNetInetAddress *JavaNetInetAddress_getLocalHost();
FOUNDATION_EXPORT void JavaNetInetAddress_clearDnsCache();
FOUNDATION_EXPORT jboolean JavaNetInetAddress_isNumericWithNSString_(NSString *address);
FOUNDATION_EXPORT JavaNetInetAddress *JavaNetInetAddress_parseNumericAddressWithNSString_(NSString *numericAddress);
FOUNDATION_EXPORT JavaNetInetAddress *JavaNetInetAddress_getLoopbackAddress();
FOUNDATION_EXPORT JavaNetInetAddress *JavaNetInetAddress_getByAddressWithByteArray_(IOSByteArray *ipAddress);
FOUNDATION_EXPORT JavaNetInetAddress *JavaNetInetAddress_getByAddressWithNSString_withByteArray_(NSString *hostName, IOSByteArray *ipAddress);
FOUNDATION_EXPORT JavaNetInetAddress *JavaNetInetAddress_getByAddressWithNSString_withByteArray_withInt_(NSString *hostName, IOSByteArray *ipAddress, jint scopeId);

FOUNDATION_EXPORT JavaNetAddressCache *JavaNetInetAddress_addressCache_;
J2OBJC_STATIC_FIELD_GETTER(JavaNetInetAddress, addressCache_, JavaNetAddressCache *)

J2OBJC_STATIC_FIELD_GETTER(JavaNetInetAddress, serialVersionUID, jlong)

FOUNDATION_EXPORT JavaNetInetAddress *JavaNetInetAddress_UNSPECIFIED_;
J2OBJC_STATIC_FIELD_GETTER(JavaNetInetAddress, UNSPECIFIED_, JavaNetInetAddress *)

FOUNDATION_EXPORT IOSObjectArray *JavaNetInetAddress_serialPersistentFields_;
J2OBJC_STATIC_FIELD_GETTER(JavaNetInetAddress, serialPersistentFields_, IOSObjectArray *)

@interface JavaNetInetAddress_$1 : JavaLangThread {
}

- (void)run;

- (instancetype)initWithJavaNetInetAddress:(JavaNetInetAddress *)outer$
                    withJavaNetInetAddress:(JavaNetInetAddress *)capture$0
                    withJavaNetInetAddress:(JavaNetInetAddress *)capture$1
                                   withInt:(jint)capture$2
 withJavaUtilConcurrentAtomicAtomicBoolean:(JavaUtilConcurrentAtomicAtomicBoolean *)capture$3
      withJavaUtilConcurrentCountDownLatch:(JavaUtilConcurrentCountDownLatch *)capture$4;

@end

__attribute__((always_inline)) inline void JavaNetInetAddress_$1_init() {}

#endif // _JavaNetInetAddress_H_
