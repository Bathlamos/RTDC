//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/sql/Connection.java
//

#ifndef _JavaSqlConnection_H_
#define _JavaSqlConnection_H_

@class IOSIntArray;
@class IOSObjectArray;
@class JavaSqlSQLWarning;
@class JavaUtilProperties;
@protocol JavaSqlArray;
@protocol JavaSqlBlob;
@protocol JavaSqlCallableStatement;
@protocol JavaSqlClob;
@protocol JavaSqlDatabaseMetaData;
@protocol JavaSqlNClob;
@protocol JavaSqlPreparedStatement;
@protocol JavaSqlSQLXML;
@protocol JavaSqlSavepoint;
@protocol JavaSqlStatement;
@protocol JavaSqlStruct;
@protocol JavaUtilMap;

#import "JreEmulation.h"
#include "java/lang/AutoCloseable.h"
#include "java/sql/Wrapper.h"

#define JavaSqlConnection_TRANSACTION_NONE 0
#define JavaSqlConnection_TRANSACTION_READ_COMMITTED 2
#define JavaSqlConnection_TRANSACTION_READ_UNCOMMITTED 1
#define JavaSqlConnection_TRANSACTION_REPEATABLE_READ 4
#define JavaSqlConnection_TRANSACTION_SERIALIZABLE 8

@protocol JavaSqlConnection < JavaSqlWrapper, JavaLangAutoCloseable, NSObject, JavaObject >
- (void)clearWarnings;

- (void)close;

- (void)commit;

- (id<JavaSqlStatement>)createStatement;

- (id<JavaSqlStatement>)createStatementWithInt:(jint)resultSetType
                                       withInt:(jint)resultSetConcurrency;

- (id<JavaSqlStatement>)createStatementWithInt:(jint)resultSetType
                                       withInt:(jint)resultSetConcurrency
                                       withInt:(jint)resultSetHoldability;

- (jboolean)getAutoCommit;

- (NSString *)getCatalog;

- (jint)getHoldability;

- (id<JavaSqlDatabaseMetaData>)getMetaData;

- (jint)getTransactionIsolation;

- (id<JavaUtilMap>)getTypeMap;

- (JavaSqlSQLWarning *)getWarnings;

- (jboolean)isClosed;

- (jboolean)isReadOnly;

- (NSString *)nativeSQLWithNSString:(NSString *)sql;

- (id<JavaSqlCallableStatement>)prepareCallWithNSString:(NSString *)sql;

- (id<JavaSqlCallableStatement>)prepareCallWithNSString:(NSString *)sql
                                                withInt:(jint)resultSetType
                                                withInt:(jint)resultSetConcurrency;

- (id<JavaSqlCallableStatement>)prepareCallWithNSString:(NSString *)sql
                                                withInt:(jint)resultSetType
                                                withInt:(jint)resultSetConcurrency
                                                withInt:(jint)resultSetHoldability;

- (id<JavaSqlPreparedStatement>)prepareStatementWithNSString:(NSString *)sql;

- (id<JavaSqlPreparedStatement>)prepareStatementWithNSString:(NSString *)sql
                                                     withInt:(jint)autoGeneratedKeys;

- (id<JavaSqlPreparedStatement>)prepareStatementWithNSString:(NSString *)sql
                                                withIntArray:(IOSIntArray *)columnIndexes;

- (id<JavaSqlPreparedStatement>)prepareStatementWithNSString:(NSString *)sql
                                                     withInt:(jint)resultSetType
                                                     withInt:(jint)resultSetConcurrency;

- (id<JavaSqlPreparedStatement>)prepareStatementWithNSString:(NSString *)sql
                                                     withInt:(jint)resultSetType
                                                     withInt:(jint)resultSetConcurrency
                                                     withInt:(jint)resultSetHoldability;

- (id<JavaSqlPreparedStatement>)prepareStatementWithNSString:(NSString *)sql
                                           withNSStringArray:(IOSObjectArray *)columnNames;

- (void)releaseSavepointWithJavaSqlSavepoint:(id<JavaSqlSavepoint>)savepoint;

- (void)rollback;

- (void)rollbackWithJavaSqlSavepoint:(id<JavaSqlSavepoint>)savepoint;

- (void)setAutoCommitWithBoolean:(jboolean)autoCommit;

- (void)setCatalogWithNSString:(NSString *)catalog;

- (void)setHoldabilityWithInt:(jint)holdability;

- (void)setReadOnlyWithBoolean:(jboolean)readOnly;

- (id<JavaSqlSavepoint>)setSavepoint;

- (id<JavaSqlSavepoint>)setSavepointWithNSString:(NSString *)name;

- (void)setTransactionIsolationWithInt:(jint)level;

- (void)setTypeMapWithJavaUtilMap:(id<JavaUtilMap>)map;

- (id<JavaSqlClob>)createClob;

- (id<JavaSqlBlob>)createBlob;

- (id<JavaSqlNClob>)createNClob;

- (id<JavaSqlSQLXML>)createSQLXML;

- (jboolean)isValidWithInt:(jint)timeout;

- (void)setClientInfoWithNSString:(NSString *)name
                     withNSString:(NSString *)value;

- (void)setClientInfoWithJavaUtilProperties:(JavaUtilProperties *)properties;

- (NSString *)getClientInfoWithNSString:(NSString *)name;

- (JavaUtilProperties *)getClientInfo;

- (id<JavaSqlArray>)createArrayOfWithNSString:(NSString *)typeName
                            withNSObjectArray:(IOSObjectArray *)elements;

- (id<JavaSqlStruct>)createStructWithNSString:(NSString *)typeName
                            withNSObjectArray:(IOSObjectArray *)attributes;

@end

__attribute__((always_inline)) inline void JavaSqlConnection_init() {}

J2OBJC_STATIC_FIELD_GETTER(JavaSqlConnection, TRANSACTION_NONE, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlConnection, TRANSACTION_READ_COMMITTED, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlConnection, TRANSACTION_READ_UNCOMMITTED, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlConnection, TRANSACTION_REPEATABLE_READ, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlConnection, TRANSACTION_SERIALIZABLE, jint)

#endif // _JavaSqlConnection_H_
