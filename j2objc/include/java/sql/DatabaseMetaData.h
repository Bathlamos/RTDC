//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/sql/DatabaseMetaData.java
//

#ifndef _JavaSqlDatabaseMetaData_H_
#define _JavaSqlDatabaseMetaData_H_

@class IOSIntArray;
@class IOSObjectArray;
@class JavaSqlRowIdLifetimeEnum;
@protocol JavaSqlConnection;
@protocol JavaSqlResultSet;

#import "JreEmulation.h"
#include "java/sql/Wrapper.h"

#define JavaSqlDatabaseMetaData_attributeNoNulls 0
#define JavaSqlDatabaseMetaData_attributeNullable 1
#define JavaSqlDatabaseMetaData_attributeNullableUnknown 2
#define JavaSqlDatabaseMetaData_bestRowNotPseudo 1
#define JavaSqlDatabaseMetaData_bestRowPseudo 2
#define JavaSqlDatabaseMetaData_bestRowSession 2
#define JavaSqlDatabaseMetaData_bestRowTemporary 0
#define JavaSqlDatabaseMetaData_bestRowTransaction 1
#define JavaSqlDatabaseMetaData_bestRowUnknown 0
#define JavaSqlDatabaseMetaData_columnNoNulls 0
#define JavaSqlDatabaseMetaData_columnNullable 1
#define JavaSqlDatabaseMetaData_columnNullableUnknown 2
#define JavaSqlDatabaseMetaData_functionColumnIn 1
#define JavaSqlDatabaseMetaData_functionColumnInOut 2
#define JavaSqlDatabaseMetaData_functionColumnOut 3
#define JavaSqlDatabaseMetaData_functionColumnResult 5
#define JavaSqlDatabaseMetaData_functionColumnUnknown 0
#define JavaSqlDatabaseMetaData_functionNoNulls 0
#define JavaSqlDatabaseMetaData_functionNoTable 1
#define JavaSqlDatabaseMetaData_functionNullable 1
#define JavaSqlDatabaseMetaData_functionNullableUnknown 2
#define JavaSqlDatabaseMetaData_functionResultUnknown 0
#define JavaSqlDatabaseMetaData_functionReturn 4
#define JavaSqlDatabaseMetaData_functionReturnsTable 2
#define JavaSqlDatabaseMetaData_importedKeyCascade 0
#define JavaSqlDatabaseMetaData_importedKeyInitiallyDeferred 5
#define JavaSqlDatabaseMetaData_importedKeyInitiallyImmediate 6
#define JavaSqlDatabaseMetaData_importedKeyNoAction 3
#define JavaSqlDatabaseMetaData_importedKeyNotDeferrable 7
#define JavaSqlDatabaseMetaData_importedKeyRestrict 1
#define JavaSqlDatabaseMetaData_importedKeySetDefault 4
#define JavaSqlDatabaseMetaData_importedKeySetNull 2
#define JavaSqlDatabaseMetaData_procedureColumnIn 1
#define JavaSqlDatabaseMetaData_procedureColumnInOut 2
#define JavaSqlDatabaseMetaData_procedureColumnOut 4
#define JavaSqlDatabaseMetaData_procedureColumnResult 3
#define JavaSqlDatabaseMetaData_procedureColumnReturn 5
#define JavaSqlDatabaseMetaData_procedureColumnUnknown 0
#define JavaSqlDatabaseMetaData_procedureNoNulls 0
#define JavaSqlDatabaseMetaData_procedureNoResult 1
#define JavaSqlDatabaseMetaData_procedureNullable 1
#define JavaSqlDatabaseMetaData_procedureNullableUnknown 2
#define JavaSqlDatabaseMetaData_procedureResultUnknown 0
#define JavaSqlDatabaseMetaData_procedureReturnsResult 2
#define JavaSqlDatabaseMetaData_sqlStateSQL 2
#define JavaSqlDatabaseMetaData_sqlStateSQL99 2
#define JavaSqlDatabaseMetaData_sqlStateXOpen 1
#define JavaSqlDatabaseMetaData_tableIndexClustered 1
#define JavaSqlDatabaseMetaData_tableIndexHashed 2
#define JavaSqlDatabaseMetaData_tableIndexOther 3
#define JavaSqlDatabaseMetaData_tableIndexStatistic 0
#define JavaSqlDatabaseMetaData_typeNoNulls 0
#define JavaSqlDatabaseMetaData_typeNullable 1
#define JavaSqlDatabaseMetaData_typeNullableUnknown 2
#define JavaSqlDatabaseMetaData_typePredBasic 2
#define JavaSqlDatabaseMetaData_typePredChar 1
#define JavaSqlDatabaseMetaData_typePredNone 0
#define JavaSqlDatabaseMetaData_typeSearchable 3
#define JavaSqlDatabaseMetaData_versionColumnNotPseudo 1
#define JavaSqlDatabaseMetaData_versionColumnPseudo 2
#define JavaSqlDatabaseMetaData_versionColumnUnknown 0

@protocol JavaSqlDatabaseMetaData < JavaSqlWrapper, NSObject, JavaObject >
- (jboolean)allProceduresAreCallable;

- (jboolean)allTablesAreSelectable;

- (jboolean)dataDefinitionCausesTransactionCommit;

- (jboolean)dataDefinitionIgnoredInTransactions;

- (jboolean)deletesAreDetectedWithInt:(jint)type;

- (jboolean)doesMaxRowSizeIncludeBlobs;

- (id<JavaSqlResultSet>)getAttributesWithNSString:(NSString *)catalog
                                     withNSString:(NSString *)schemaPattern
                                     withNSString:(NSString *)typeNamePattern
                                     withNSString:(NSString *)attributeNamePattern;

- (id<JavaSqlResultSet>)getBestRowIdentifierWithNSString:(NSString *)catalog
                                            withNSString:(NSString *)schema
                                            withNSString:(NSString *)table
                                                 withInt:(jint)scope
                                             withBoolean:(jboolean)nullable;

- (id<JavaSqlResultSet>)getCatalogs;

- (NSString *)getCatalogSeparator;

- (NSString *)getCatalogTerm;

- (id<JavaSqlResultSet>)getColumnPrivilegesWithNSString:(NSString *)catalog
                                           withNSString:(NSString *)schema
                                           withNSString:(NSString *)table
                                           withNSString:(NSString *)columnNamePattern;

- (id<JavaSqlResultSet>)getColumnsWithNSString:(NSString *)catalog
                                  withNSString:(NSString *)schemaPattern
                                  withNSString:(NSString *)tableNamePattern
                                  withNSString:(NSString *)columnNamePattern;

- (id<JavaSqlConnection>)getConnection;

- (id<JavaSqlResultSet>)getCrossReferenceWithNSString:(NSString *)primaryCatalog
                                         withNSString:(NSString *)primarySchema
                                         withNSString:(NSString *)primaryTable
                                         withNSString:(NSString *)foreignCatalog
                                         withNSString:(NSString *)foreignSchema
                                         withNSString:(NSString *)foreignTable;

- (jint)getDatabaseMajorVersion;

- (jint)getDatabaseMinorVersion;

- (NSString *)getDatabaseProductName;

- (NSString *)getDatabaseProductVersion;

- (jint)getDefaultTransactionIsolation;

- (jint)getDriverMajorVersion;

- (jint)getDriverMinorVersion;

- (NSString *)getDriverName;

- (NSString *)getDriverVersion;

- (id<JavaSqlResultSet>)getExportedKeysWithNSString:(NSString *)catalog
                                       withNSString:(NSString *)schema
                                       withNSString:(NSString *)table;

- (NSString *)getExtraNameCharacters;

- (NSString *)getIdentifierQuoteString;

- (id<JavaSqlResultSet>)getImportedKeysWithNSString:(NSString *)catalog
                                       withNSString:(NSString *)schema
                                       withNSString:(NSString *)table;

- (id<JavaSqlResultSet>)getIndexInfoWithNSString:(NSString *)catalog
                                    withNSString:(NSString *)schema
                                    withNSString:(NSString *)table
                                     withBoolean:(jboolean)unique
                                     withBoolean:(jboolean)approximate;

- (jint)getJDBCMajorVersion;

- (jint)getJDBCMinorVersion;

- (jint)getMaxBinaryLiteralLength;

- (jint)getMaxCatalogNameLength;

- (jint)getMaxCharLiteralLength;

- (jint)getMaxColumnNameLength;

- (jint)getMaxColumnsInGroupBy;

- (jint)getMaxColumnsInIndex;

- (jint)getMaxColumnsInOrderBy;

- (jint)getMaxColumnsInSelect;

- (jint)getMaxColumnsInTable;

- (jint)getMaxConnections;

- (jint)getMaxCursorNameLength;

- (jint)getMaxIndexLength;

- (jint)getMaxProcedureNameLength;

- (jint)getMaxRowSize;

- (jint)getMaxSchemaNameLength;

- (jint)getMaxStatementLength;

- (jint)getMaxStatements;

- (jint)getMaxTableNameLength;

- (jint)getMaxTablesInSelect;

- (jint)getMaxUserNameLength;

- (NSString *)getNumericFunctions;

- (id<JavaSqlResultSet>)getPrimaryKeysWithNSString:(NSString *)catalog
                                      withNSString:(NSString *)schema
                                      withNSString:(NSString *)table;

- (id<JavaSqlResultSet>)getProcedureColumnsWithNSString:(NSString *)catalog
                                           withNSString:(NSString *)schemaPattern
                                           withNSString:(NSString *)procedureNamePattern
                                           withNSString:(NSString *)columnNamePattern;

- (id<JavaSqlResultSet>)getProceduresWithNSString:(NSString *)catalog
                                     withNSString:(NSString *)schemaPattern
                                     withNSString:(NSString *)procedureNamePattern;

- (NSString *)getProcedureTerm;

- (jint)getResultSetHoldability;

- (id<JavaSqlResultSet>)getSchemas;

- (NSString *)getSchemaTerm;

- (NSString *)getSearchStringEscape;

- (NSString *)getSQLKeywords;

- (jint)getSQLStateType;

- (NSString *)getStringFunctions;

- (id<JavaSqlResultSet>)getSuperTablesWithNSString:(NSString *)catalog
                                      withNSString:(NSString *)schemaPattern
                                      withNSString:(NSString *)tableNamePattern;

- (id<JavaSqlResultSet>)getSuperTypesWithNSString:(NSString *)catalog
                                     withNSString:(NSString *)schemaPattern
                                     withNSString:(NSString *)typeNamePattern;

- (NSString *)getSystemFunctions;

- (id<JavaSqlResultSet>)getTablePrivilegesWithNSString:(NSString *)catalog
                                          withNSString:(NSString *)schemaPattern
                                          withNSString:(NSString *)tableNamePattern;

- (id<JavaSqlResultSet>)getTablesWithNSString:(NSString *)catalog
                                 withNSString:(NSString *)schemaPattern
                                 withNSString:(NSString *)tableNamePattern
                            withNSStringArray:(IOSObjectArray *)types;

- (id<JavaSqlResultSet>)getTableTypes;

- (NSString *)getTimeDateFunctions;

- (id<JavaSqlResultSet>)getTypeInfo;

- (id<JavaSqlResultSet>)getUDTsWithNSString:(NSString *)catalog
                               withNSString:(NSString *)schemaPattern
                               withNSString:(NSString *)typeNamePattern
                               withIntArray:(IOSIntArray *)types;

- (NSString *)getURL;

- (NSString *)getUserName;

- (id<JavaSqlResultSet>)getVersionColumnsWithNSString:(NSString *)catalog
                                         withNSString:(NSString *)schema
                                         withNSString:(NSString *)table;

- (jboolean)insertsAreDetectedWithInt:(jint)type;

- (jboolean)isCatalogAtStart;

- (jboolean)isReadOnly;

- (jboolean)locatorsUpdateCopy;

- (jboolean)nullPlusNonNullIsNull;

- (jboolean)nullsAreSortedAtEnd;

- (jboolean)nullsAreSortedAtStart;

- (jboolean)nullsAreSortedHigh;

- (jboolean)nullsAreSortedLow;

- (jboolean)othersDeletesAreVisibleWithInt:(jint)type;

- (jboolean)othersInsertsAreVisibleWithInt:(jint)type;

- (jboolean)othersUpdatesAreVisibleWithInt:(jint)type;

- (jboolean)ownDeletesAreVisibleWithInt:(jint)type;

- (jboolean)ownInsertsAreVisibleWithInt:(jint)type;

- (jboolean)ownUpdatesAreVisibleWithInt:(jint)type;

- (jboolean)storesLowerCaseIdentifiers;

- (jboolean)storesLowerCaseQuotedIdentifiers;

- (jboolean)storesMixedCaseIdentifiers;

- (jboolean)storesMixedCaseQuotedIdentifiers;

- (jboolean)storesUpperCaseIdentifiers;

- (jboolean)storesUpperCaseQuotedIdentifiers;

- (jboolean)supportsAlterTableWithAddColumn;

- (jboolean)supportsAlterTableWithDropColumn;

- (jboolean)supportsANSI92EntryLevelSQL;

- (jboolean)supportsANSI92FullSQL;

- (jboolean)supportsANSI92IntermediateSQL;

- (jboolean)supportsBatchUpdates;

- (jboolean)supportsCatalogsInDataManipulation;

- (jboolean)supportsCatalogsInIndexDefinitions;

- (jboolean)supportsCatalogsInPrivilegeDefinitions;

- (jboolean)supportsCatalogsInProcedureCalls;

- (jboolean)supportsCatalogsInTableDefinitions;

- (jboolean)supportsColumnAliasing;

- (jboolean)supportsConvert;

- (jboolean)supportsConvertWithInt:(jint)fromType
                           withInt:(jint)toType;

- (jboolean)supportsCoreSQLGrammar;

- (jboolean)supportsCorrelatedSubqueries;

- (jboolean)supportsDataDefinitionAndDataManipulationTransactions;

- (jboolean)supportsDataManipulationTransactionsOnly;

- (jboolean)supportsDifferentTableCorrelationNames;

- (jboolean)supportsExpressionsInOrderBy;

- (jboolean)supportsExtendedSQLGrammar;

- (jboolean)supportsFullOuterJoins;

- (jboolean)supportsGetGeneratedKeys;

- (jboolean)supportsGroupBy;

- (jboolean)supportsGroupByBeyondSelect;

- (jboolean)supportsGroupByUnrelated;

- (jboolean)supportsIntegrityEnhancementFacility;

- (jboolean)supportsLikeEscapeClause;

- (jboolean)supportsLimitedOuterJoins;

- (jboolean)supportsMinimumSQLGrammar;

- (jboolean)supportsMixedCaseIdentifiers;

- (jboolean)supportsMixedCaseQuotedIdentifiers;

- (jboolean)supportsMultipleOpenResults;

- (jboolean)supportsMultipleResultSets;

- (jboolean)supportsMultipleTransactions;

- (jboolean)supportsNamedParameters;

- (jboolean)supportsNonNullableColumns;

- (jboolean)supportsOpenCursorsAcrossCommit;

- (jboolean)supportsOpenCursorsAcrossRollback;

- (jboolean)supportsOpenStatementsAcrossCommit;

- (jboolean)supportsOpenStatementsAcrossRollback;

- (jboolean)supportsOrderByUnrelated;

- (jboolean)supportsOuterJoins;

- (jboolean)supportsPositionedDelete;

- (jboolean)supportsPositionedUpdate;

- (jboolean)supportsResultSetConcurrencyWithInt:(jint)type
                                        withInt:(jint)concurrency;

- (jboolean)supportsResultSetHoldabilityWithInt:(jint)holdability;

- (jboolean)supportsResultSetTypeWithInt:(jint)type;

- (jboolean)supportsSavepoints;

- (jboolean)supportsSchemasInDataManipulation;

- (jboolean)supportsSchemasInIndexDefinitions;

- (jboolean)supportsSchemasInPrivilegeDefinitions;

- (jboolean)supportsSchemasInProcedureCalls;

- (jboolean)supportsSchemasInTableDefinitions;

- (jboolean)supportsSelectForUpdate;

- (jboolean)supportsStatementPooling;

- (jboolean)supportsStoredProcedures;

- (jboolean)supportsSubqueriesInComparisons;

- (jboolean)supportsSubqueriesInExists;

- (jboolean)supportsSubqueriesInIns;

- (jboolean)supportsSubqueriesInQuantifieds;

- (jboolean)supportsTableCorrelationNames;

- (jboolean)supportsTransactionIsolationLevelWithInt:(jint)level;

- (jboolean)supportsTransactions;

- (jboolean)supportsUnion;

- (jboolean)supportsUnionAll;

- (jboolean)updatesAreDetectedWithInt:(jint)type;

- (jboolean)usesLocalFilePerTable;

- (jboolean)usesLocalFiles;

- (jboolean)autoCommitFailureClosesAllResultSets;

- (id<JavaSqlResultSet>)getClientInfoProperties;

- (id<JavaSqlResultSet>)getFunctionColumnsWithNSString:(NSString *)catalog
                                          withNSString:(NSString *)schemaPattern
                                          withNSString:(NSString *)functionNamePattern
                                          withNSString:(NSString *)columnNamePattern;

- (id<JavaSqlResultSet>)getFunctionsWithNSString:(NSString *)catalog
                                    withNSString:(NSString *)schemaPattern
                                    withNSString:(NSString *)functionNamePattern;

- (JavaSqlRowIdLifetimeEnum *)getRowIdLifetime;

- (id<JavaSqlResultSet>)getSchemasWithNSString:(NSString *)catalog
                                  withNSString:(NSString *)schemaPattern;

- (jboolean)supportsStoredFunctionsUsingCallSyntax;

@end

__attribute__((always_inline)) inline void JavaSqlDatabaseMetaData_init() {}

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, attributeNoNulls, jshort)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, attributeNullable, jshort)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, attributeNullableUnknown, jshort)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, bestRowNotPseudo, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, bestRowPseudo, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, bestRowSession, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, bestRowTemporary, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, bestRowTransaction, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, bestRowUnknown, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, columnNoNulls, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, columnNullable, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, columnNullableUnknown, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, importedKeyCascade, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, importedKeyInitiallyDeferred, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, importedKeyInitiallyImmediate, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, importedKeyNoAction, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, importedKeyNotDeferrable, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, importedKeyRestrict, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, importedKeySetDefault, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, importedKeySetNull, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, procedureColumnIn, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, procedureColumnInOut, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, procedureColumnOut, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, procedureColumnResult, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, procedureColumnReturn, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, procedureColumnUnknown, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, procedureNoNulls, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, procedureNoResult, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, procedureNullable, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, procedureNullableUnknown, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, procedureResultUnknown, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, procedureReturnsResult, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, sqlStateSQL99, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, sqlStateXOpen, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, tableIndexClustered, jshort)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, tableIndexHashed, jshort)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, tableIndexOther, jshort)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, tableIndexStatistic, jshort)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, typeNoNulls, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, typeNullable, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, typeNullableUnknown, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, typePredBasic, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, typePredChar, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, typePredNone, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, typeSearchable, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, versionColumnNotPseudo, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, versionColumnPseudo, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, versionColumnUnknown, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, sqlStateSQL, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, functionColumnIn, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, functionColumnInOut, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, functionColumnOut, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, functionReturn, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, functionColumnUnknown, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, functionColumnResult, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, functionNoNulls, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, functionNullable, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, functionNullableUnknown, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, functionResultUnknown, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, functionNoTable, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaSqlDatabaseMetaData, functionReturnsTable, jint)

#endif // _JavaSqlDatabaseMetaData_H_
