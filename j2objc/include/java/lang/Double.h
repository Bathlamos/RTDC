//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/lang/Double.java
//

#ifndef _JavaLangDouble_H_
#define _JavaLangDouble_H_

@class IOSClass;

#import "JreEmulation.h"
#include "java/lang/Comparable.h"

#define JavaLangDouble_EXPONENT_BIAS 1023
#define JavaLangDouble_EXPONENT_BITS 12
#define JavaLangDouble_EXPONENT_MASK 9218868437227405312LL
#define JavaLangDouble_MANTISSA_BITS 52
#define JavaLangDouble_MANTISSA_MASK 4503599627370495LL
#define JavaLangDouble_MAX_EXPONENT 1023
#define JavaLangDouble_MAX_VALUE __DBL_MAX__
#define JavaLangDouble_MIN_EXPONENT -1022
#define JavaLangDouble_MIN_NORMAL __DBL_MIN__
#define JavaLangDouble_MIN_VALUE 4.9E-324
#define JavaLangDouble_NEGATIVE_INFINITY -INFINITY
#define JavaLangDouble_NON_MANTISSA_BITS 12
#define JavaLangDouble_NaN NAN
#define JavaLangDouble_POSITIVE_INFINITY INFINITY
#define JavaLangDouble_SIGN_MASK ((jlong) 0x8000000000000000LL)
#define JavaLangDouble_SIZE 64
#define JavaLangDouble_serialVersionUID -9172774392245257468LL

@interface JavaLangDouble : NSNumber < JavaLangComparable > {
}

- (instancetype)initWithDouble:(jdouble)value;

- (instancetype)initWithNSString:(NSString *)string;

- (jint)compareToWithId:(JavaLangDouble *)object;

- (jbyte)charValue;

+ (jlong)doubleToLongBitsWithDouble:(jdouble)value;

+ (jlong)doubleToRawLongBitsWithDouble:(jdouble)value;

- (jdouble)doubleValue;

- (jboolean)isEqual:(id)object;

- (jfloat)floatValue;

- (NSUInteger)hash;

- (jint)intValue;

- (jboolean)isInfinite;

+ (jboolean)isInfiniteWithDouble:(jdouble)d;

- (jboolean)isNaN;

+ (jboolean)isNaNWithDouble:(jdouble)d;

+ (jdouble)longBitsToDoubleWithLong:(jlong)bits;

- (jlong)longLongValue;

+ (jdouble)parseDoubleWithNSString:(NSString *)string;

- (jshort)shortValue;

- (NSString *)description;

+ (NSString *)toStringWithDouble:(jdouble)d;

+ (JavaLangDouble *)valueOfWithNSString:(NSString *)string;

+ (jint)compareWithDouble:(jdouble)double1
               withDouble:(jdouble)double2;

+ (JavaLangDouble *)valueOfWithDouble:(jdouble)d;

+ (NSString *)toHexStringWithDouble:(jdouble)d;


@end

FOUNDATION_EXPORT BOOL JavaLangDouble_initialized;
J2OBJC_STATIC_INIT(JavaLangDouble)
FOUNDATION_EXPORT jlong JavaLangDouble_doubleToLongBitsWithDouble_(jdouble value);
FOUNDATION_EXPORT jlong JavaLangDouble_doubleToRawLongBitsWithDouble_(jdouble value);
FOUNDATION_EXPORT jboolean JavaLangDouble_isInfiniteWithDouble_(jdouble d);
FOUNDATION_EXPORT jboolean JavaLangDouble_isNaNWithDouble_(jdouble d);
FOUNDATION_EXPORT jdouble JavaLangDouble_longBitsToDoubleWithLong_(jlong bits);
FOUNDATION_EXPORT jdouble JavaLangDouble_parseDoubleWithNSString_(NSString *string);
FOUNDATION_EXPORT NSString *JavaLangDouble_toStringWithDouble_(jdouble d);
FOUNDATION_EXPORT JavaLangDouble *JavaLangDouble_valueOfWithNSString_(NSString *string);
FOUNDATION_EXPORT jint JavaLangDouble_compareWithDouble_withDouble_(jdouble double1, jdouble double2);
FOUNDATION_EXPORT JavaLangDouble *JavaLangDouble_valueOfWithDouble_(jdouble d);
FOUNDATION_EXPORT NSString *JavaLangDouble_toHexStringWithDouble_(jdouble d);

FOUNDATION_EXPORT NSString *JavaLangDouble_FLOATING_POINT_REGEX_;
J2OBJC_STATIC_FIELD_GETTER(JavaLangDouble, FLOATING_POINT_REGEX_, NSString *)

J2OBJC_STATIC_FIELD_GETTER(JavaLangDouble, EXPONENT_BIAS, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaLangDouble, EXPONENT_BITS, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaLangDouble, MANTISSA_BITS, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaLangDouble, NON_MANTISSA_BITS, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaLangDouble, SIGN_MASK, jlong)

J2OBJC_STATIC_FIELD_GETTER(JavaLangDouble, EXPONENT_MASK, jlong)

J2OBJC_STATIC_FIELD_GETTER(JavaLangDouble, MANTISSA_MASK, jlong)

J2OBJC_STATIC_FIELD_GETTER(JavaLangDouble, serialVersionUID, jlong)

J2OBJC_STATIC_FIELD_GETTER(JavaLangDouble, MAX_VALUE, jdouble)

J2OBJC_STATIC_FIELD_GETTER(JavaLangDouble, MIN_VALUE, jdouble)

J2OBJC_STATIC_FIELD_GETTER(JavaLangDouble, NaN, jdouble)

J2OBJC_STATIC_FIELD_GETTER(JavaLangDouble, POSITIVE_INFINITY, jdouble)

J2OBJC_STATIC_FIELD_GETTER(JavaLangDouble, NEGATIVE_INFINITY, jdouble)

J2OBJC_STATIC_FIELD_GETTER(JavaLangDouble, MIN_NORMAL, jdouble)

J2OBJC_STATIC_FIELD_GETTER(JavaLangDouble, MAX_EXPONENT, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaLangDouble, MIN_EXPONENT, jint)

FOUNDATION_EXPORT IOSClass *JavaLangDouble_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(JavaLangDouble, TYPE_, IOSClass *)

J2OBJC_STATIC_FIELD_GETTER(JavaLangDouble, SIZE, jint)

BOXED_INC_AND_DEC(Double, doubleValue, JavaLangDouble)

#endif // _JavaLangDouble_H_
