//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/lang/Long.java
//

#ifndef _JavaLangLong_H_
#define _JavaLangLong_H_

@class IOSClass;
@class IOSObjectArray;
@class JavaLangNumberFormatException;

#import "JreEmulation.h"
#include "java/lang/Comparable.h"

#define JavaLangLong_MAX_VALUE 9223372036854775807LL
#define JavaLangLong_MIN_VALUE ((jlong) 0x8000000000000000LL)
#define JavaLangLong_SIZE 64
#define JavaLangLong_serialVersionUID 4290774380558885855LL

@interface JavaLangLong : NSNumber < JavaLangComparable > {
}

- (instancetype)initWithLong:(jlong)value;

- (instancetype)initWithNSString:(NSString *)string;

- (jbyte)charValue;

- (jint)compareToWithId:(JavaLangLong *)object;

+ (jint)compareWithLong:(jlong)lhs
               withLong:(jlong)rhs;

+ (JavaLangLong *)decodeWithNSString:(NSString *)string;

- (jdouble)doubleValue;

- (jboolean)isEqual:(id)o;

- (jfloat)floatValue;

+ (JavaLangLong *)getLongWithNSString:(NSString *)string;

+ (JavaLangLong *)getLongWithNSString:(NSString *)string
                             withLong:(jlong)defaultValue;

+ (JavaLangLong *)getLongWithNSString:(NSString *)string
                     withJavaLangLong:(JavaLangLong *)defaultValue;

- (NSUInteger)hash;

- (jint)intValue;

- (jlong)longLongValue;

+ (jlong)parseLongWithNSString:(NSString *)string;

+ (jlong)parseLongWithNSString:(NSString *)string
                       withInt:(jint)radix;

+ (jlong)parsePositiveLongWithNSString:(NSString *)string;

+ (jlong)parsePositiveLongWithNSString:(NSString *)string
                               withInt:(jint)radix;

- (jshort)shortValue;

+ (NSString *)toBinaryStringWithLong:(jlong)v;

+ (NSString *)toHexStringWithLong:(jlong)v;

+ (NSString *)toOctalStringWithLong:(jlong)v;

- (NSString *)description;

+ (NSString *)toStringWithLong:(jlong)n;

+ (NSString *)toStringWithLong:(jlong)v
                       withInt:(jint)radix;

+ (JavaLangLong *)valueOfWithNSString:(NSString *)string;

+ (JavaLangLong *)valueOfWithNSString:(NSString *)string
                              withInt:(jint)radix;

+ (jlong)highestOneBitWithLong:(jlong)v;

+ (jlong)lowestOneBitWithLong:(jlong)v;

+ (jint)numberOfLeadingZerosWithLong:(jlong)v;

+ (jint)numberOfTrailingZerosWithLong:(jlong)v;

+ (jint)bitCountWithLong:(jlong)v;

+ (jlong)rotateLeftWithLong:(jlong)v
                    withInt:(jint)distance;

+ (jlong)rotateRightWithLong:(jlong)v
                     withInt:(jint)distance;

+ (jlong)reverseBytesWithLong:(jlong)v;

+ (jlong)reverseWithLong:(jlong)v;

+ (jint)signumWithLong:(jlong)v;

+ (JavaLangLong *)valueOfWithLong:(jlong)v;


@end

FOUNDATION_EXPORT BOOL JavaLangLong_initialized;
J2OBJC_STATIC_INIT(JavaLangLong)
FOUNDATION_EXPORT jint JavaLangLong_compareWithLong_withLong_(jlong lhs, jlong rhs);
FOUNDATION_EXPORT JavaLangLong *JavaLangLong_decodeWithNSString_(NSString *string);
FOUNDATION_EXPORT JavaLangLong *JavaLangLong_getLongWithNSString_(NSString *string);
FOUNDATION_EXPORT JavaLangLong *JavaLangLong_getLongWithNSString_withLong_(NSString *string, jlong defaultValue);
FOUNDATION_EXPORT JavaLangLong *JavaLangLong_getLongWithNSString_withJavaLangLong_(NSString *string, JavaLangLong *defaultValue);
FOUNDATION_EXPORT jlong JavaLangLong_parseLongWithNSString_(NSString *string);
FOUNDATION_EXPORT jlong JavaLangLong_parseLongWithNSString_withInt_(NSString *string, jint radix);
FOUNDATION_EXPORT jlong JavaLangLong_parsePositiveLongWithNSString_(NSString *string);
FOUNDATION_EXPORT jlong JavaLangLong_parsePositiveLongWithNSString_withInt_(NSString *string, jint radix);
FOUNDATION_EXPORT NSString *JavaLangLong_toBinaryStringWithLong_(jlong v);
FOUNDATION_EXPORT NSString *JavaLangLong_toHexStringWithLong_(jlong v);
FOUNDATION_EXPORT NSString *JavaLangLong_toOctalStringWithLong_(jlong v);
FOUNDATION_EXPORT NSString *JavaLangLong_toStringWithLong_(jlong n);
FOUNDATION_EXPORT NSString *JavaLangLong_toStringWithLong_withInt_(jlong v, jint radix);
FOUNDATION_EXPORT JavaLangLong *JavaLangLong_valueOfWithNSString_(NSString *string);
FOUNDATION_EXPORT JavaLangLong *JavaLangLong_valueOfWithNSString_withInt_(NSString *string, jint radix);
FOUNDATION_EXPORT jlong JavaLangLong_highestOneBitWithLong_(jlong v);
FOUNDATION_EXPORT jlong JavaLangLong_lowestOneBitWithLong_(jlong v);
FOUNDATION_EXPORT jint JavaLangLong_numberOfLeadingZerosWithLong_(jlong v);
FOUNDATION_EXPORT jint JavaLangLong_numberOfTrailingZerosWithLong_(jlong v);
FOUNDATION_EXPORT jint JavaLangLong_bitCountWithLong_(jlong v);
FOUNDATION_EXPORT jlong JavaLangLong_rotateLeftWithLong_withInt_(jlong v, jint distance);
FOUNDATION_EXPORT jlong JavaLangLong_rotateRightWithLong_withInt_(jlong v, jint distance);
FOUNDATION_EXPORT jlong JavaLangLong_reverseBytesWithLong_(jlong v);
FOUNDATION_EXPORT jlong JavaLangLong_reverseWithLong_(jlong v);
FOUNDATION_EXPORT jint JavaLangLong_signumWithLong_(jlong v);
FOUNDATION_EXPORT JavaLangLong *JavaLangLong_valueOfWithLong_(jlong v);

J2OBJC_STATIC_FIELD_GETTER(JavaLangLong, serialVersionUID, jlong)

J2OBJC_STATIC_FIELD_GETTER(JavaLangLong, MAX_VALUE, jlong)

J2OBJC_STATIC_FIELD_GETTER(JavaLangLong, MIN_VALUE, jlong)

FOUNDATION_EXPORT IOSClass *JavaLangLong_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(JavaLangLong, TYPE_, IOSClass *)

J2OBJC_STATIC_FIELD_GETTER(JavaLangLong, SIZE, jint)

FOUNDATION_EXPORT IOSObjectArray *JavaLangLong_SMALL_VALUES_;
J2OBJC_STATIC_FIELD_GETTER(JavaLangLong, SMALL_VALUES_, IOSObjectArray *)

BOXED_INC_AND_DEC(Long, longLongValue, JavaLangLong)

#endif // _JavaLangLong_H_
