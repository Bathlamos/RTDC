//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: android/libcore/luni/src/main/java/java/lang/Float.java
//

#ifndef _JavaLangFloat_H_
#define _JavaLangFloat_H_

@class IOSClass;

#import "JreEmulation.h"
#include "java/lang/Comparable.h"

#define JavaLangFloat_EXPONENT_BIAS 127
#define JavaLangFloat_EXPONENT_BITS 9
#define JavaLangFloat_EXPONENT_MASK 2139095040
#define JavaLangFloat_MANTISSA_BITS 23
#define JavaLangFloat_MANTISSA_MASK 8388607
#define JavaLangFloat_MAX_EXPONENT 127
#define JavaLangFloat_MAX_VALUE __FLT_MAX__
#define JavaLangFloat_MIN_EXPONENT -126
#define JavaLangFloat_MIN_NORMAL __FLT_MIN__
#define JavaLangFloat_MIN_VALUE 1.4E-45f
#define JavaLangFloat_NEGATIVE_INFINITY -INFINITY
#define JavaLangFloat_NON_MANTISSA_BITS 9
#define JavaLangFloat_NaN NAN
#define JavaLangFloat_POSITIVE_INFINITY INFINITY
#define JavaLangFloat_SIGN_MASK ((jint) 0x80000000)
#define JavaLangFloat_SIZE 32
#define JavaLangFloat_serialVersionUID -2671257302660747028LL

@interface JavaLangFloat : NSNumber < JavaLangComparable > {
}

- (instancetype)initWithFloat:(jfloat)value;

- (instancetype)initWithDouble:(jdouble)value;

- (instancetype)initWithNSString:(NSString *)string;

- (jint)compareToWithId:(JavaLangFloat *)object;

- (jbyte)charValue;

- (jdouble)doubleValue;

- (jboolean)isEqual:(id)object;

+ (jint)floatToIntBitsWithFloat:(jfloat)value;

+ (jint)floatToRawIntBitsWithFloat:(jfloat)value;

- (jfloat)floatValue;

- (NSUInteger)hash;

+ (jfloat)intBitsToFloatWithInt:(jint)bits;

- (jint)intValue;

- (jboolean)isInfinite;

+ (jboolean)isInfiniteWithFloat:(jfloat)f;

- (jboolean)isNaN;

+ (jboolean)isNaNWithFloat:(jfloat)f;

- (jlong)longLongValue;

+ (jfloat)parseFloatWithNSString:(NSString *)string;

- (jshort)shortValue;

- (NSString *)description;

+ (NSString *)toStringWithFloat:(jfloat)f;

+ (JavaLangFloat *)valueOfWithNSString:(NSString *)string;

+ (jint)compareWithFloat:(jfloat)float1
               withFloat:(jfloat)float2;

+ (JavaLangFloat *)valueOfWithFloat:(jfloat)f;

+ (NSString *)toHexStringWithFloat:(jfloat)f;


@end

FOUNDATION_EXPORT BOOL JavaLangFloat_initialized;
J2OBJC_STATIC_INIT(JavaLangFloat)
FOUNDATION_EXPORT jint JavaLangFloat_floatToIntBitsWithFloat_(jfloat value);
FOUNDATION_EXPORT jint JavaLangFloat_floatToRawIntBitsWithFloat_(jfloat value);
FOUNDATION_EXPORT jfloat JavaLangFloat_intBitsToFloatWithInt_(jint bits);
FOUNDATION_EXPORT jboolean JavaLangFloat_isInfiniteWithFloat_(jfloat f);
FOUNDATION_EXPORT jboolean JavaLangFloat_isNaNWithFloat_(jfloat f);
FOUNDATION_EXPORT jfloat JavaLangFloat_parseFloatWithNSString_(NSString *string);
FOUNDATION_EXPORT NSString *JavaLangFloat_toStringWithFloat_(jfloat f);
FOUNDATION_EXPORT JavaLangFloat *JavaLangFloat_valueOfWithNSString_(NSString *string);
FOUNDATION_EXPORT jint JavaLangFloat_compareWithFloat_withFloat_(jfloat float1, jfloat float2);
FOUNDATION_EXPORT JavaLangFloat *JavaLangFloat_valueOfWithFloat_(jfloat f);
FOUNDATION_EXPORT NSString *JavaLangFloat_toHexStringWithFloat_(jfloat f);

J2OBJC_STATIC_FIELD_GETTER(JavaLangFloat, EXPONENT_BIAS, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaLangFloat, EXPONENT_BITS, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaLangFloat, MANTISSA_BITS, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaLangFloat, NON_MANTISSA_BITS, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaLangFloat, SIGN_MASK, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaLangFloat, EXPONENT_MASK, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaLangFloat, MANTISSA_MASK, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaLangFloat, serialVersionUID, jlong)

J2OBJC_STATIC_FIELD_GETTER(JavaLangFloat, MAX_VALUE, jfloat)

J2OBJC_STATIC_FIELD_GETTER(JavaLangFloat, MIN_VALUE, jfloat)

J2OBJC_STATIC_FIELD_GETTER(JavaLangFloat, NaN, jfloat)

J2OBJC_STATIC_FIELD_GETTER(JavaLangFloat, POSITIVE_INFINITY, jfloat)

J2OBJC_STATIC_FIELD_GETTER(JavaLangFloat, NEGATIVE_INFINITY, jfloat)

J2OBJC_STATIC_FIELD_GETTER(JavaLangFloat, MIN_NORMAL, jfloat)

J2OBJC_STATIC_FIELD_GETTER(JavaLangFloat, MAX_EXPONENT, jint)

J2OBJC_STATIC_FIELD_GETTER(JavaLangFloat, MIN_EXPONENT, jint)

FOUNDATION_EXPORT IOSClass *JavaLangFloat_TYPE_;
J2OBJC_STATIC_FIELD_GETTER(JavaLangFloat, TYPE_, IOSClass *)

J2OBJC_STATIC_FIELD_GETTER(JavaLangFloat, SIZE, jint)

BOXED_INC_AND_DEC(Float, floatValue, JavaLangFloat)

#endif // _JavaLangFloat_H_
