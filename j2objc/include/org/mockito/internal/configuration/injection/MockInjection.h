//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/kstanger/j2objc-0.9.5/j2objc/testing/mockito/build_result/java/org/mockito/internal/configuration/injection/MockInjection.java
//

#ifndef _OrgMockitoInternalConfigurationInjectionMockInjection_H_
#define _OrgMockitoInternalConfigurationInjectionMockInjection_H_

@class JavaLangReflectField;
@class OrgMockitoInternalConfigurationInjectionMockInjectionStrategy;
@class OrgMockitoInternalConfigurationInjectionMockInjection_OngoingMockInjection;
@protocol JavaUtilSet;

#import "JreEmulation.h"

@interface OrgMockitoInternalConfigurationInjectionMockInjection : NSObject {
}

+ (OrgMockitoInternalConfigurationInjectionMockInjection_OngoingMockInjection *)onFieldWithJavaLangReflectField:(JavaLangReflectField *)field
                                                                                                         withId:(id)ofInstance;

+ (OrgMockitoInternalConfigurationInjectionMockInjection_OngoingMockInjection *)onFieldsWithJavaUtilSet:(id<JavaUtilSet>)fields
                                                                                                 withId:(id)ofInstance;

- (instancetype)init;

@end

__attribute__((always_inline)) inline void OrgMockitoInternalConfigurationInjectionMockInjection_init() {}
FOUNDATION_EXPORT OrgMockitoInternalConfigurationInjectionMockInjection_OngoingMockInjection *OrgMockitoInternalConfigurationInjectionMockInjection_onFieldWithJavaLangReflectField_withId_(JavaLangReflectField *field, id ofInstance);
FOUNDATION_EXPORT OrgMockitoInternalConfigurationInjectionMockInjection_OngoingMockInjection *OrgMockitoInternalConfigurationInjectionMockInjection_onFieldsWithJavaUtilSet_withId_(id<JavaUtilSet> fields, id ofInstance);

@interface OrgMockitoInternalConfigurationInjectionMockInjection_OngoingMockInjection : NSObject {
 @public
  id<JavaUtilSet> fields_;
  id<JavaUtilSet> mocks_;
  id fieldOwner_;
  OrgMockitoInternalConfigurationInjectionMockInjectionStrategy *injectionStrategies_;
  OrgMockitoInternalConfigurationInjectionMockInjectionStrategy *postInjectionStrategies_;
}

- (instancetype)initWithJavaLangReflectField:(JavaLangReflectField *)field
                                      withId:(id)fieldOwner;

- (instancetype)initWithJavaUtilSet:(id<JavaUtilSet>)fields
                             withId:(id)fieldOwner;

- (OrgMockitoInternalConfigurationInjectionMockInjection_OngoingMockInjection *)withMocksWithJavaUtilSet:(id<JavaUtilSet>)mocks;

- (OrgMockitoInternalConfigurationInjectionMockInjection_OngoingMockInjection *)tryConstructorInjection;

- (OrgMockitoInternalConfigurationInjectionMockInjection_OngoingMockInjection *)tryPropertyOrFieldInjection;

- (OrgMockitoInternalConfigurationInjectionMockInjection_OngoingMockInjection *)handleSpyAnnotation;

- (void)apply;

- (void)dealloc;

- (void)copyAllFieldsTo:(OrgMockitoInternalConfigurationInjectionMockInjection_OngoingMockInjection *)other;

@end

__attribute__((always_inline)) inline void OrgMockitoInternalConfigurationInjectionMockInjection_OngoingMockInjection_init() {}

J2OBJC_FIELD_SETTER(OrgMockitoInternalConfigurationInjectionMockInjection_OngoingMockInjection, fields_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(OrgMockitoInternalConfigurationInjectionMockInjection_OngoingMockInjection, mocks_, id<JavaUtilSet>)
J2OBJC_FIELD_SETTER(OrgMockitoInternalConfigurationInjectionMockInjection_OngoingMockInjection, fieldOwner_, id)
J2OBJC_FIELD_SETTER(OrgMockitoInternalConfigurationInjectionMockInjection_OngoingMockInjection, injectionStrategies_, OrgMockitoInternalConfigurationInjectionMockInjectionStrategy *)
J2OBJC_FIELD_SETTER(OrgMockitoInternalConfigurationInjectionMockInjection_OngoingMockInjection, postInjectionStrategies_, OrgMockitoInternalConfigurationInjectionMockInjectionStrategy *)

#endif // _OrgMockitoInternalConfigurationInjectionMockInjection_H_
