//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: src/main/java/org/mockito/internal/creation/ios/IosMockMaker.java
//

#ifndef _OrgMockitoInternalCreationIosIosMockMaker_H_
#define _OrgMockitoInternalCreationIosIosMockMaker_H_

@class IOSClass;
@class IOSObjectArray;
@class OrgMockitoInternalCreationIosInvocationHandlerAdapter;
@protocol JavaLangReflectInvocationHandler;
@protocol JavaUtilMap;
@protocol OrgMockitoInvocationMockHandler;
@protocol OrgMockitoMockMockCreationSettings;

#import "JreEmulation.h"
#include "org/mockito/plugins/MockMaker.h"

@interface OrgMockitoInternalCreationIosIosMockMaker : NSObject < OrgMockitoPluginsMockMaker > {
}

- (id)createMockWithOrgMockitoMockMockCreationSettings:(id<OrgMockitoMockMockCreationSettings>)settings
                   withOrgMockitoInvocationMockHandler:(id<OrgMockitoInvocationMockHandler>)handler;

- (id<OrgMockitoInvocationMockHandler>)getHandlerWithId:(id)mock;

- (void)resetMockWithId:(id)mock
withOrgMockitoInvocationMockHandler:(id<OrgMockitoInvocationMockHandler>)newHandler
withOrgMockitoMockMockCreationSettings:(id<OrgMockitoMockMockCreationSettings>)settings;

- (OrgMockitoInternalCreationIosInvocationHandlerAdapter *)getInvocationHandlerAdapterWithId:(id)mock;

- (IOSClass *)getProxyClassWithIOSClass:(IOSClass *)typeToMock
                      withIOSClassArray:(IOSObjectArray *)interfaces;

+ (IOSClass *)generateClassProxyWithNSString:(NSString *)name
                                withIOSClass:(IOSClass *)classToMock
                           withIOSClassArray:(IOSObjectArray *)interfaces;

- (instancetype)init;

@end

FOUNDATION_EXPORT BOOL OrgMockitoInternalCreationIosIosMockMaker_initialized;
J2OBJC_STATIC_INIT(OrgMockitoInternalCreationIosIosMockMaker)

FOUNDATION_EXPORT id<JavaUtilMap> OrgMockitoInternalCreationIosIosMockMaker_classCache_;
J2OBJC_STATIC_FIELD_GETTER(OrgMockitoInternalCreationIosIosMockMaker, classCache_, id<JavaUtilMap>)
J2OBJC_STATIC_FIELD_SETTER(OrgMockitoInternalCreationIosIosMockMaker, classCache_, id<JavaUtilMap>)

FOUNDATION_EXPORT id<JavaUtilMap> OrgMockitoInternalCreationIosIosMockMaker_proxyCache_;
J2OBJC_STATIC_FIELD_GETTER(OrgMockitoInternalCreationIosIosMockMaker, proxyCache_, id<JavaUtilMap>)

FOUNDATION_EXPORT jint OrgMockitoInternalCreationIosIosMockMaker_nextClassNameIndex_;
J2OBJC_STATIC_FIELD_GETTER(OrgMockitoInternalCreationIosIosMockMaker, nextClassNameIndex_, jint)
J2OBJC_STATIC_FIELD_REF_GETTER(OrgMockitoInternalCreationIosIosMockMaker, nextClassNameIndex_, jint)

@interface OrgMockitoInternalCreationIosIosMockMaker_ClassProxy : NSObject {
 @public
  id<JavaLangReflectInvocationHandler> $__handler_;
}

- (id<JavaLangReflectInvocationHandler>)getHandler;

- (void)setHandlerWithJavaLangReflectInvocationHandler:(id<JavaLangReflectInvocationHandler>)handler;

- (instancetype)init;

- (void)dealloc;

- (void)copyAllFieldsTo:(OrgMockitoInternalCreationIosIosMockMaker_ClassProxy *)other;


@end

__attribute__((always_inline)) inline void OrgMockitoInternalCreationIosIosMockMaker_ClassProxy_init() {}

J2OBJC_FIELD_SETTER(OrgMockitoInternalCreationIosIosMockMaker_ClassProxy, $__handler_, id<JavaLangReflectInvocationHandler>)

#endif // _OrgMockitoInternalCreationIosIosMockMaker_H_
