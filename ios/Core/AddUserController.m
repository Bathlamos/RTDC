//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: Z:\RTDC\core\src\main\java\rtdc\core\controller\AddUserController.java
//

#include "AddUserController.h"
#include "AddUserView.h"
#include "IOSClass.h"
#include "Service.h"
#include "User.h"
#include "java/lang/Boolean.h"

@implementation RtdcCoreControllerAddUserController

- (instancetype)initWithRtdcCoreViewAddUserView:(id<RtdcCoreViewAddUserView>)view {
  if (self = [super init]) {
    RtdcCoreControllerAddUserController_set_view_(self, view);
  }
  return self;
}

- (void)addUser {
  RtdcCoreModelUser *newUser = [[[RtdcCoreModelUser alloc] init] autorelease];
  [newUser setUsernameWithNSString:[((id<RtdcCoreViewAddUserView>) nil_chk(view_)) getUsernameAsString]];
  [newUser setFirstNameWithNSString:[view_ getFirstnameAsString]];
  [newUser setLastNameWithNSString:[view_ getSurnameAsString]];
  [newUser setEmailWithNSString:[view_ getEmailAsString]];
  [newUser setPermissionWithNSString:[view_ getPermissionAsString]];
  [newUser setRoleWithNSString:[view_ getRoleAsString]];
  NSString *password = [view_ getPasswordAsString];
  RtdcCoreServiceService_updateOrSaveUserWithRtdcCoreModelUser_withNSString_withRtdcCoreServiceAsyncCallback_(newUser, password, [[[RtdcCoreControllerAddUserController_$1 alloc] initWithRtdcCoreControllerAddUserController:self] autorelease]);
}

- (void)dealloc {
  RtdcCoreControllerAddUserController_set_view_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(RtdcCoreControllerAddUserController *)other {
  [super copyAllFieldsTo:other];
  RtdcCoreControllerAddUserController_set_view_(other, view_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRtdcCoreViewAddUserView:", "AddUserController", NULL, 0x1, NULL },
    { "addUser", NULL, "V", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "view_", NULL, 0x2, "Lrtdc.core.view.AddUserView;", NULL,  },
  };
  static const J2ObjcClassInfo _RtdcCoreControllerAddUserController = { "AddUserController", "rtdc.core.controller", NULL, 0x1, 2, methods, 1, fields, 0, NULL};
  return &_RtdcCoreControllerAddUserController;
}

@end

@implementation RtdcCoreControllerAddUserController_$1

- (void)onSuccessWithId:(JavaLangBoolean *)result {
  [((id<RtdcCoreViewAddUserView>) nil_chk(this$0_->view_)) displayErrorWithNSString:@"Success" withNSString:@"Success"];
}

- (void)onErrorWithNSString:(NSString *)message {
  [((id<RtdcCoreViewAddUserView>) nil_chk(this$0_->view_)) displayErrorWithNSString:@"CommError" withNSString:message];
}

- (instancetype)initWithRtdcCoreControllerAddUserController:(RtdcCoreControllerAddUserController *)outer$ {
  RtdcCoreControllerAddUserController_$1_set_this$0_(self, outer$);
  return [super init];
}

- (void)dealloc {
  RtdcCoreControllerAddUserController_$1_set_this$0_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(RtdcCoreControllerAddUserController_$1 *)other {
  [super copyAllFieldsTo:other];
  RtdcCoreControllerAddUserController_$1_set_this$0_(other, this$0_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onSuccessWithJavaLangBoolean:", "onSuccess", "V", 0x1, NULL },
    { "onErrorWithNSString:", "onError", "V", 0x1, NULL },
    { "initWithRtdcCoreControllerAddUserController:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "this$0_", NULL, 0x1012, "Lrtdc.core.controller.AddUserController;", NULL,  },
  };
  static const J2ObjcClassInfo _RtdcCoreControllerAddUserController_$1 = { "$1", "rtdc.core.controller", "AddUserController", 0x8000, 3, methods, 1, fields, 0, NULL};
  return &_RtdcCoreControllerAddUserController_$1;
}

@end
