//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nicolasmenard/IdeaProjects/RTDC/core/src/main/java/rtdc/core/controller/ActionListController.java
//

#include "Action.h"
#include "ActionListController.h"
#include "ActionListView.h"
#include "Bootstrapper.h"
#include "Cache.h"
#include "Controller.h"
#include "Dispatcher.h"
#include "Event.h"
#include "EventType.h"
#include "Factory.h"
#include "FetchActionsEvent.h"
#include "J2ObjC_source.h"
#include "Service.h"
#include "SimpleComparator.h"
#include "com/google/common/collect/ImmutableSet.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"

@interface ControllerActionListController () {
 @public
  JavaUtilArrayList *actions_;
}

@end

J2OBJC_FIELD_SETTER(ControllerActionListController, actions_, JavaUtilArrayList *)

@implementation ControllerActionListController

- (instancetype)initWithRtdcCoreViewActionListView:(id<RtdcCoreViewActionListView>)view {
  ControllerActionListController_initWithRtdcCoreViewActionListView_(self, view);
  return self;
}

- (NSString *)getTitle {
  return @"Action Plan";
}

- (void)sortActionsWithModelAction_PropertiesEnum:(ModelAction_PropertiesEnum *)property {
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(actions_, [((ModelSimpleComparator_Builder *) nil_chk(ModelSimpleComparator_forPropertyWithModelObjectProperty_(property))) build]);
  [((id<RtdcCoreViewActionListView>) nil_chk(view_)) setActionsWithJavaUtilList:actions_];
}

- (void)editActionWithModelAction:(ModelAction *)action {
  [((UtilCache *) nil_chk(UtilCache_getInstance())) putWithNSString:@"action" withId:action];
  [((id<ImplDispatcher>) nil_chk([((id<ImplFactory>) nil_chk(JreLoadStatic(RtdcCoreBootstrapper, FACTORY_))) newDispatcher])) goToEditActionWithControllerController:self];
}

- (void)saveActionWithModelAction:(ModelAction *)action {
  ServiceService_updateOrSaveActionsWithModelAction_(action);
}

- (void)deleteActionWithModelAction:(ModelAction *)action {
  [((JavaUtilArrayList *) nil_chk(actions_)) removeWithId:action];
  [((id<RtdcCoreViewActionListView>) nil_chk(view_)) setActionsWithJavaUtilList:actions_];
  ServiceService_deleteActionWithInt_([((ModelAction *) nil_chk(action)) getId]);
}

- (void)onActionsFetchedWithRtdcCoreEventFetchActionsEvent:(RtdcCoreEventFetchActionsEvent *)event {
  JreStrongAssignAndConsume(&actions_, new_JavaUtilArrayList_initWithJavaUtilCollection_([((RtdcCoreEventFetchActionsEvent *) nil_chk(event)) getActions]));
  [self sortActionsWithModelAction_PropertiesEnum:JreLoadStatic(ModelAction_PropertiesEnum, task)];
}

- (void)onStop {
  [super onStop];
  RtdcCoreEventEvent_unsubscribeWithRtdcCoreEventEventType_withRtdcCoreEventEventHandler_(JreLoadStatic(RtdcCoreEventFetchActionsEvent, TYPE_), self);
}

- (void)dealloc {
  RELEASE_(actions_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithRtdcCoreViewActionListView:", "ActionListController", NULL, 0x1, NULL, NULL },
    { "getTitle", NULL, "Ljava.lang.String;", 0x0, NULL, NULL },
    { "sortActionsWithModelAction_PropertiesEnum:", "sortActions", "V", 0x1, NULL, NULL },
    { "editActionWithModelAction:", "editAction", "V", 0x1, NULL, NULL },
    { "saveActionWithModelAction:", "saveAction", "V", 0x1, NULL, NULL },
    { "deleteActionWithModelAction:", "deleteAction", "V", 0x1, NULL, NULL },
    { "onActionsFetchedWithRtdcCoreEventFetchActionsEvent:", "onActionsFetched", "V", 0x1, NULL, NULL },
    { "onStop", NULL, "V", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "actions_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lrtdc/core/model/Action;>;", .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lrtdc.core.view.ActionListView;"};
  static const J2ObjcClassInfo _ControllerActionListController = { 2, "ActionListController", "rtdc.core.controller", NULL, 0x1, 8, methods, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "Lrtdc/core/controller/Controller<Lrtdc/core/view/ActionListView;>;Lrtdc/core/event/FetchActionsEvent$Handler;" };
  return &_ControllerActionListController;
}

@end

void ControllerActionListController_initWithRtdcCoreViewActionListView_(ControllerActionListController *self, id<RtdcCoreViewActionListView> view) {
  ControllerController_initWithRtdcCoreViewView_(self, view);
  RtdcCoreEventEvent_subscribeWithRtdcCoreEventEventType_withRtdcCoreEventEventHandler_(JreLoadStatic(RtdcCoreEventFetchActionsEvent, TYPE_), self);
  ServiceService_getActions();
}

ControllerActionListController *new_ControllerActionListController_initWithRtdcCoreViewActionListView_(id<RtdcCoreViewActionListView> view) {
  ControllerActionListController *self = [ControllerActionListController alloc];
  ControllerActionListController_initWithRtdcCoreViewActionListView_(self, view);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ControllerActionListController)
