//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: Z:\RTDC\core\src\main\java\rtdc\core\service\Service.java
//

#include "AsyncCallback.h"
#include "Bootstrapper.h"
#include "Dispatcher.h"
#include "Factory.h"
#include "HttpRequest.h"
#include "HttpResponse.h"
#include "IOSClass.h"
#include "JsonTransmissionWrapper.h"
#include "Service.h"
#include "SessionExpiredException.h"
#include "Unit.h"
#include "User.h"
#include "java/lang/Boolean.h"
#include "java/util/logging/Level.h"
#include "java/util/logging/Logger.h"

__attribute__((unused)) static void RtdcCoreServiceService_catchSessionExpiredExceptionWithRtdcCoreModelJsonTransmissionWrapper_(RtdcCoreModelJsonTransmissionWrapper *wrapper);

@implementation RtdcCoreServiceService

NSString * RtdcCoreServiceService_URL_ = @"http://192.168.2.49:8888/api/";

- (instancetype)init {
  return [super init];
}

+ (void)authenticateUserWithNSString:(NSString *)username
                        withNSString:(NSString *)password
    withRtdcCoreServiceAsyncCallback:(id<RtdcCoreServiceAsyncCallback>)callback {
  RtdcCoreServiceService_authenticateUserWithNSString_withNSString_withRtdcCoreServiceAsyncCallback_(username, password, callback);
}

+ (void)updateOrSaveUserWithRtdcCoreModelUser:(RtdcCoreModelUser *)user
                                 withNSString:(NSString *)password
             withRtdcCoreServiceAsyncCallback:(id<RtdcCoreServiceAsyncCallback>)callback {
  RtdcCoreServiceService_updateOrSaveUserWithRtdcCoreModelUser_withNSString_withRtdcCoreServiceAsyncCallback_(user, password, callback);
}

+ (void)updateOrSaveUnitWithRtdcCoreModelUnit:(RtdcCoreModelUnit *)unit
             withRtdcCoreServiceAsyncCallback:(id<RtdcCoreServiceAsyncCallback>)callback {
  RtdcCoreServiceService_updateOrSaveUnitWithRtdcCoreModelUnit_withRtdcCoreServiceAsyncCallback_(unit, callback);
}

+ (void)getUnitsWithRtdcCoreServiceAsyncCallback:(id<RtdcCoreServiceAsyncCallback>)callback {
  RtdcCoreServiceService_getUnitsWithRtdcCoreServiceAsyncCallback_(callback);
}

+ (void)getUsersWithRtdcCoreServiceAsyncCallback:(id<RtdcCoreServiceAsyncCallback>)callback {
  RtdcCoreServiceService_getUsersWithRtdcCoreServiceAsyncCallback_(callback);
}

+ (void)catchSessionExpiredExceptionWithRtdcCoreModelJsonTransmissionWrapper:(RtdcCoreModelJsonTransmissionWrapper *)wrapper {
  RtdcCoreServiceService_catchSessionExpiredExceptionWithRtdcCoreModelJsonTransmissionWrapper_(wrapper);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "Service", NULL, 0x2, NULL },
    { "authenticateUserWithNSString:withNSString:withRtdcCoreServiceAsyncCallback:", "authenticateUser", "V", 0x9, NULL },
    { "updateOrSaveUserWithRtdcCoreModelUser:withNSString:withRtdcCoreServiceAsyncCallback:", "updateOrSaveUser", "V", 0x9, NULL },
    { "updateOrSaveUnitWithRtdcCoreModelUnit:withRtdcCoreServiceAsyncCallback:", "updateOrSaveUnit", "V", 0x9, NULL },
    { "getUnitsWithRtdcCoreServiceAsyncCallback:", "getUnits", "V", 0x9, NULL },
    { "getUsersWithRtdcCoreServiceAsyncCallback:", "getUsers", "V", 0x9, NULL },
    { "catchSessionExpiredExceptionWithRtdcCoreModelJsonTransmissionWrapper:", "catchSessionExpiredException", "V", 0xa, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "URL_", NULL, 0x1a, "Ljava.lang.String;", &RtdcCoreServiceService_URL_,  },
  };
  static const J2ObjcClassInfo _RtdcCoreServiceService = { "Service", "rtdc.core.service", NULL, 0x11, 7, methods, 1, fields, 0, NULL};
  return &_RtdcCoreServiceService;
}

@end

void RtdcCoreServiceService_authenticateUserWithNSString_withNSString_withRtdcCoreServiceAsyncCallback_(NSString *username, NSString *password, id<RtdcCoreServiceAsyncCallback> callback) {
  RtdcCoreServiceService_init();
  id<RtdcCoreImplHttpRequest> req = [((id<RtdcCoreImplFactory>) nil_chk(RtdcCoreBootstrapper_get_FACTORY_())) newHttpRequestWithNSString:JreStrcat("$$", RtdcCoreServiceService_URL_, @"authenticate") withRtdcCoreImplHttpRequest_RequestMethodEnum:RtdcCoreImplHttpRequest_RequestMethodEnum_get_POST()];
  [((id<RtdcCoreImplHttpRequest>) nil_chk(req)) setHeaderWithNSString:@"Content-type" withNSString:@"application/x-www-form-urlencoded"];
  [req addParameterWithNSString:@"username" withNSString:username];
  [req addParameterWithNSString:@"password" withNSString:password];
  [req executeWithRtdcCoreServiceAsyncCallback:[[[RtdcCoreServiceService_$1 alloc] initWithRtdcCoreServiceAsyncCallback:callback] autorelease]];
}

void RtdcCoreServiceService_updateOrSaveUserWithRtdcCoreModelUser_withNSString_withRtdcCoreServiceAsyncCallback_(RtdcCoreModelUser *user, NSString *password, id<RtdcCoreServiceAsyncCallback> callback) {
  RtdcCoreServiceService_init();
  id<RtdcCoreImplHttpRequest> req = [((id<RtdcCoreImplFactory>) nil_chk(RtdcCoreBootstrapper_get_FACTORY_())) newHttpRequestWithNSString:JreStrcat("$$", RtdcCoreServiceService_URL_, @"users") withRtdcCoreImplHttpRequest_RequestMethodEnum:RtdcCoreImplHttpRequest_RequestMethodEnum_get_PUT()];
  [((id<RtdcCoreImplHttpRequest>) nil_chk(req)) setHeaderWithNSString:@"Content-type" withNSString:@"application/x-www-form-urlencoded"];
  [req addParameterWithNSString:@"authToken" withNSString:RtdcCoreBootstrapper_get_AUTHENTICATION_TOKEN_()];
  [req addParameterWithNSString:@"user" withNSString:[((RtdcCoreModelUser *) nil_chk(user)) description]];
  [req addParameterWithNSString:@"password" withNSString:password];
  [req executeWithRtdcCoreServiceAsyncCallback:[[[RtdcCoreServiceService_$2 alloc] initWithRtdcCoreServiceAsyncCallback:callback] autorelease]];
}

void RtdcCoreServiceService_updateOrSaveUnitWithRtdcCoreModelUnit_withRtdcCoreServiceAsyncCallback_(RtdcCoreModelUnit *unit, id<RtdcCoreServiceAsyncCallback> callback) {
  RtdcCoreServiceService_init();
  id<RtdcCoreImplHttpRequest> req = [((id<RtdcCoreImplFactory>) nil_chk(RtdcCoreBootstrapper_get_FACTORY_())) newHttpRequestWithNSString:JreStrcat("$$", RtdcCoreServiceService_URL_, @"units") withRtdcCoreImplHttpRequest_RequestMethodEnum:RtdcCoreImplHttpRequest_RequestMethodEnum_get_PUT()];
  [((id<RtdcCoreImplHttpRequest>) nil_chk(req)) setHeaderWithNSString:@"Content-type" withNSString:@"application/x-www-form-urlencoded"];
  [req addParameterWithNSString:@"authToken" withNSString:RtdcCoreBootstrapper_get_AUTHENTICATION_TOKEN_()];
  [req addParameterWithNSString:@"unit" withNSString:[((RtdcCoreModelUnit *) nil_chk(unit)) description]];
  [req executeWithRtdcCoreServiceAsyncCallback:[[[RtdcCoreServiceService_$3 alloc] initWithRtdcCoreServiceAsyncCallback:callback] autorelease]];
}

void RtdcCoreServiceService_getUnitsWithRtdcCoreServiceAsyncCallback_(id<RtdcCoreServiceAsyncCallback> callback) {
  RtdcCoreServiceService_init();
  id<RtdcCoreImplHttpRequest> req = [((id<RtdcCoreImplFactory>) nil_chk(RtdcCoreBootstrapper_get_FACTORY_())) newHttpRequestWithNSString:JreStrcat("$$", RtdcCoreServiceService_URL_, @"units") withRtdcCoreImplHttpRequest_RequestMethodEnum:RtdcCoreImplHttpRequest_RequestMethodEnum_get_GET()];
  [((id<RtdcCoreImplHttpRequest>) nil_chk(req)) setHeaderWithNSString:@"Content-type" withNSString:@"application/x-www-form-urlencoded"];
  [req addParameterWithNSString:@"authToken" withNSString:RtdcCoreBootstrapper_get_AUTHENTICATION_TOKEN_()];
  [req executeWithRtdcCoreServiceAsyncCallback:[[[RtdcCoreServiceService_$4 alloc] initWithRtdcCoreServiceAsyncCallback:callback] autorelease]];
}

void RtdcCoreServiceService_getUsersWithRtdcCoreServiceAsyncCallback_(id<RtdcCoreServiceAsyncCallback> callback) {
  RtdcCoreServiceService_init();
  id<RtdcCoreImplHttpRequest> req = [((id<RtdcCoreImplFactory>) nil_chk(RtdcCoreBootstrapper_get_FACTORY_())) newHttpRequestWithNSString:JreStrcat("$$", RtdcCoreServiceService_URL_, @"users") withRtdcCoreImplHttpRequest_RequestMethodEnum:RtdcCoreImplHttpRequest_RequestMethodEnum_get_GET()];
  [((id<RtdcCoreImplHttpRequest>) nil_chk(req)) setHeaderWithNSString:@"Content-type" withNSString:@"application/x-www-form-urlencoded"];
  [req addParameterWithNSString:@"authToken" withNSString:RtdcCoreBootstrapper_get_AUTHENTICATION_TOKEN_()];
  [req executeWithRtdcCoreServiceAsyncCallback:[[[RtdcCoreServiceService_$5 alloc] initWithRtdcCoreServiceAsyncCallback:callback] autorelease]];
}

void RtdcCoreServiceService_catchSessionExpiredExceptionWithRtdcCoreModelJsonTransmissionWrapper_(RtdcCoreModelJsonTransmissionWrapper *wrapper) {
  RtdcCoreServiceService_init();
  [((JavaUtilLoggingLogger *) nil_chk(JavaUtilLoggingLogger_getLoggerWithNSString_(@"RTDC"))) logWithJavaUtilLoggingLevel:JavaUtilLoggingLevel_get_INFO_() withNSString:JreStrcat("$$$", [[IOSClass classWithClass:[RtdcCoreExceptionSessionExpiredException class]] getSimpleName], @" : ", [((RtdcCoreModelJsonTransmissionWrapper *) nil_chk(wrapper)) getStatus])];
  if ([((NSString *) nil_chk([[IOSClass classWithClass:[RtdcCoreExceptionSessionExpiredException class]] getSimpleName])) isEqual:[wrapper getStatus]]) {
    RtdcCoreBootstrapper_set_AUTHENTICATION_TOKEN_(nil);
    [((id<RtdcCoreImplDispatcher>) nil_chk([((id<RtdcCoreImplFactory>) nil_chk(RtdcCoreBootstrapper_get_FACTORY_())) newDispatcher])) goToLoginWithBoolean:YES];
  }
}

@implementation RtdcCoreServiceService_$1

- (void)onSuccessWithId:(id<RtdcCoreImplHttpResponse>)resp {
  RtdcCoreModelJsonTransmissionWrapper *wrapper = [[[RtdcCoreModelJsonTransmissionWrapper alloc] initWithId:[((id<RtdcCoreImplHttpResponse>) nil_chk(resp)) getContent]] autorelease];
  RtdcCoreServiceService_catchSessionExpiredExceptionWithRtdcCoreModelJsonTransmissionWrapper_(wrapper);
  if ([@"success" isEqual:[wrapper getStatus]]) {
    RtdcCoreModelUser *user = [[[RtdcCoreModelUser alloc] init] autorelease];
    [((id<RtdcCoreServiceAsyncCallback>) nil_chk(val$callback_)) onSuccessWithId:user];
  }
  else [((id<RtdcCoreServiceAsyncCallback>) nil_chk(val$callback_)) onErrorWithNSString:JreStrcat("$$$", [wrapper getStatus], @" : ", [wrapper getDescription])];
}

- (void)onErrorWithNSString:(NSString *)message {
  [((id<RtdcCoreServiceAsyncCallback>) nil_chk(val$callback_)) onErrorWithNSString:message];
}

- (instancetype)initWithRtdcCoreServiceAsyncCallback:(id<RtdcCoreServiceAsyncCallback>)capture$0 {
  RtdcCoreServiceService_$1_set_val$callback_(self, capture$0);
  return [super init];
}

- (void)dealloc {
  RtdcCoreServiceService_$1_set_val$callback_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(RtdcCoreServiceService_$1 *)other {
  [super copyAllFieldsTo:other];
  RtdcCoreServiceService_$1_set_val$callback_(other, val$callback_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onSuccessWithRtdcCoreImplHttpResponse:", "onSuccess", "V", 0x1, NULL },
    { "onErrorWithNSString:", "onError", "V", 0x1, NULL },
    { "initWithRtdcCoreServiceAsyncCallback:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$callback_", NULL, 0x1012, "Lrtdc.core.service.AsyncCallback;", NULL,  },
  };
  static const J2ObjcClassInfo _RtdcCoreServiceService_$1 = { "$1", "rtdc.core.service", "Service", 0x8000, 3, methods, 1, fields, 0, NULL};
  return &_RtdcCoreServiceService_$1;
}

@end

@implementation RtdcCoreServiceService_$2

- (void)onSuccessWithId:(id<RtdcCoreImplHttpResponse>)resp {
  RtdcCoreModelJsonTransmissionWrapper *wrapper = [[[RtdcCoreModelJsonTransmissionWrapper alloc] initWithId:[((id<RtdcCoreImplHttpResponse>) nil_chk(resp)) getContent]] autorelease];
  RtdcCoreServiceService_catchSessionExpiredExceptionWithRtdcCoreModelJsonTransmissionWrapper_(wrapper);
  if ([@"success" isEqual:[wrapper getStatus]]) [((id<RtdcCoreServiceAsyncCallback>) nil_chk(val$callback_)) onSuccessWithId:JavaLangBoolean_valueOfWithBoolean_(YES)];
  else [((id<RtdcCoreServiceAsyncCallback>) nil_chk(val$callback_)) onErrorWithNSString:JreStrcat("$$$", [wrapper getStatus], @" : ", [wrapper getDescription])];
}

- (void)onErrorWithNSString:(NSString *)message {
  [((id<RtdcCoreServiceAsyncCallback>) nil_chk(val$callback_)) onErrorWithNSString:message];
}

- (instancetype)initWithRtdcCoreServiceAsyncCallback:(id<RtdcCoreServiceAsyncCallback>)capture$0 {
  RtdcCoreServiceService_$2_set_val$callback_(self, capture$0);
  return [super init];
}

- (void)dealloc {
  RtdcCoreServiceService_$2_set_val$callback_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(RtdcCoreServiceService_$2 *)other {
  [super copyAllFieldsTo:other];
  RtdcCoreServiceService_$2_set_val$callback_(other, val$callback_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onSuccessWithRtdcCoreImplHttpResponse:", "onSuccess", "V", 0x1, NULL },
    { "onErrorWithNSString:", "onError", "V", 0x1, NULL },
    { "initWithRtdcCoreServiceAsyncCallback:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$callback_", NULL, 0x1012, "Lrtdc.core.service.AsyncCallback;", NULL,  },
  };
  static const J2ObjcClassInfo _RtdcCoreServiceService_$2 = { "$2", "rtdc.core.service", "Service", 0x8000, 3, methods, 1, fields, 0, NULL};
  return &_RtdcCoreServiceService_$2;
}

@end

@implementation RtdcCoreServiceService_$3

- (void)onSuccessWithId:(id<RtdcCoreImplHttpResponse>)resp {
  RtdcCoreModelJsonTransmissionWrapper *wrapper = [[[RtdcCoreModelJsonTransmissionWrapper alloc] initWithId:[((id<RtdcCoreImplHttpResponse>) nil_chk(resp)) getContent]] autorelease];
  RtdcCoreServiceService_catchSessionExpiredExceptionWithRtdcCoreModelJsonTransmissionWrapper_(wrapper);
  if ([@"success" isEqual:[wrapper getStatus]]) [((id<RtdcCoreServiceAsyncCallback>) nil_chk(val$callback_)) onSuccessWithId:JavaLangBoolean_valueOfWithBoolean_(YES)];
  else [((id<RtdcCoreServiceAsyncCallback>) nil_chk(val$callback_)) onErrorWithNSString:JreStrcat("$$$", [wrapper getStatus], @" : ", [wrapper getDescription])];
}

- (void)onErrorWithNSString:(NSString *)message {
  [((id<RtdcCoreServiceAsyncCallback>) nil_chk(val$callback_)) onErrorWithNSString:message];
}

- (instancetype)initWithRtdcCoreServiceAsyncCallback:(id<RtdcCoreServiceAsyncCallback>)capture$0 {
  RtdcCoreServiceService_$3_set_val$callback_(self, capture$0);
  return [super init];
}

- (void)dealloc {
  RtdcCoreServiceService_$3_set_val$callback_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(RtdcCoreServiceService_$3 *)other {
  [super copyAllFieldsTo:other];
  RtdcCoreServiceService_$3_set_val$callback_(other, val$callback_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onSuccessWithRtdcCoreImplHttpResponse:", "onSuccess", "V", 0x1, NULL },
    { "onErrorWithNSString:", "onError", "V", 0x1, NULL },
    { "initWithRtdcCoreServiceAsyncCallback:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$callback_", NULL, 0x1012, "Lrtdc.core.service.AsyncCallback;", NULL,  },
  };
  static const J2ObjcClassInfo _RtdcCoreServiceService_$3 = { "$3", "rtdc.core.service", "Service", 0x8000, 3, methods, 1, fields, 0, NULL};
  return &_RtdcCoreServiceService_$3;
}

@end

@implementation RtdcCoreServiceService_$4

- (void)onSuccessWithId:(id<RtdcCoreImplHttpResponse>)resp {
  RtdcCoreModelJsonTransmissionWrapper *wrapper = [[[RtdcCoreModelJsonTransmissionWrapper alloc] initWithId:[((id<RtdcCoreImplHttpResponse>) nil_chk(resp)) getContent]] autorelease];
  RtdcCoreServiceService_catchSessionExpiredExceptionWithRtdcCoreModelJsonTransmissionWrapper_(wrapper);
  if ([@"success" isEqual:[wrapper getStatus]]) {
  }
  else [((id<RtdcCoreServiceAsyncCallback>) nil_chk(val$callback_)) onErrorWithNSString:JreStrcat("$$$", [wrapper getStatus], @" : ", [wrapper getDescription])];
}

- (void)onErrorWithNSString:(NSString *)message {
  [((id<RtdcCoreServiceAsyncCallback>) nil_chk(val$callback_)) onErrorWithNSString:message];
}

- (instancetype)initWithRtdcCoreServiceAsyncCallback:(id<RtdcCoreServiceAsyncCallback>)capture$0 {
  RtdcCoreServiceService_$4_set_val$callback_(self, capture$0);
  return [super init];
}

- (void)dealloc {
  RtdcCoreServiceService_$4_set_val$callback_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(RtdcCoreServiceService_$4 *)other {
  [super copyAllFieldsTo:other];
  RtdcCoreServiceService_$4_set_val$callback_(other, val$callback_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onSuccessWithRtdcCoreImplHttpResponse:", "onSuccess", "V", 0x1, NULL },
    { "onErrorWithNSString:", "onError", "V", 0x1, NULL },
    { "initWithRtdcCoreServiceAsyncCallback:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$callback_", NULL, 0x1012, "Lrtdc.core.service.AsyncCallback;", NULL,  },
  };
  static const J2ObjcClassInfo _RtdcCoreServiceService_$4 = { "$4", "rtdc.core.service", "Service", 0x8000, 3, methods, 1, fields, 0, NULL};
  return &_RtdcCoreServiceService_$4;
}

@end

@implementation RtdcCoreServiceService_$5

- (void)onSuccessWithId:(id<RtdcCoreImplHttpResponse>)resp {
  RtdcCoreModelJsonTransmissionWrapper *wrapper = [[[RtdcCoreModelJsonTransmissionWrapper alloc] initWithId:[((id<RtdcCoreImplHttpResponse>) nil_chk(resp)) getContent]] autorelease];
  RtdcCoreServiceService_catchSessionExpiredExceptionWithRtdcCoreModelJsonTransmissionWrapper_(wrapper);
  if ([@"success" isEqual:[wrapper getStatus]]) {
  }
  else [((id<RtdcCoreServiceAsyncCallback>) nil_chk(val$callback_)) onErrorWithNSString:JreStrcat("$$$", [wrapper getStatus], @" : ", [wrapper getDescription])];
}

- (void)onErrorWithNSString:(NSString *)message {
  [((id<RtdcCoreServiceAsyncCallback>) nil_chk(val$callback_)) onErrorWithNSString:message];
}

- (instancetype)initWithRtdcCoreServiceAsyncCallback:(id<RtdcCoreServiceAsyncCallback>)capture$0 {
  RtdcCoreServiceService_$5_set_val$callback_(self, capture$0);
  return [super init];
}

- (void)dealloc {
  RtdcCoreServiceService_$5_set_val$callback_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(RtdcCoreServiceService_$5 *)other {
  [super copyAllFieldsTo:other];
  RtdcCoreServiceService_$5_set_val$callback_(other, val$callback_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onSuccessWithRtdcCoreImplHttpResponse:", "onSuccess", "V", 0x1, NULL },
    { "onErrorWithNSString:", "onError", "V", 0x1, NULL },
    { "initWithRtdcCoreServiceAsyncCallback:", "init", NULL, 0x0, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "val$callback_", NULL, 0x1012, "Lrtdc.core.service.AsyncCallback;", NULL,  },
  };
  static const J2ObjcClassInfo _RtdcCoreServiceService_$5 = { "$5", "rtdc.core.service", "Service", 0x8000, 3, methods, 1, fields, 0, NULL};
  return &_RtdcCoreServiceService_$5;
}

@end
