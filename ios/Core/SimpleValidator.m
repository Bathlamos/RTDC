//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nicolasmenard/IdeaProjects/RTDC/core/src/main/java/rtdc/core/model/SimpleValidator.java
//

#include "J2ObjC_source.h"
#include "SimpleValidator.h"
#include "ValidationException.h"

@implementation ModelSimpleValidator

- (jboolean)expectNotNullWithId:(id)value {
  if (value == nil) @throw new_ExceptionValidationException_initWithNSString_(@"Expected a value");
  return true;
}

- (jboolean)expectNotEmptyWithNSString:(NSString *)value {
  [self expectNotNullWithId:value];
  if ([((NSString *) nil_chk(value)) isEmpty]) @throw new_ExceptionValidationException_initWithNSString_(@"Expected a non-empty value");
  return true;
}

- (jboolean)expectPositiveNumberWithInt:(jint)number {
  if (number <= 0) @throw new_ExceptionValidationException_initWithNSString_(@"Expected a positive number");
  return true;
}

- (jboolean)expectEmailWithNSString:(NSString *)value {
  if (value != nil && [value matches:@"^\\S+@\\S+\\.\\S+$"]) @throw new_ExceptionValidationException_initWithNSString_(@"Invalid email");
  return true;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ModelSimpleValidator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "expectNotNullWithId:", "expectNotNull", "Z", 0x1, NULL, NULL },
    { "expectNotEmptyWithNSString:", "expectNotEmpty", "Z", 0x1, NULL, NULL },
    { "expectPositiveNumberWithInt:", "expectPositiveNumber", "Z", 0x1, NULL, NULL },
    { "expectEmailWithNSString:", "expectEmail", "Z", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ModelSimpleValidator = { 2, "SimpleValidator", "rtdc.core.model", NULL, 0x1, 5, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ModelSimpleValidator;
}

@end

void ModelSimpleValidator_init(ModelSimpleValidator *self) {
  (void) NSObject_init(self);
}

ModelSimpleValidator *new_ModelSimpleValidator_init() {
  ModelSimpleValidator *self = [ModelSimpleValidator alloc];
  ModelSimpleValidator_init(self);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ModelSimpleValidator)
