//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nicolasmenard/IdeaProjects/RTDC/core/src/main/java/rtdc/core/event/Event.java
//

#include "ActionCompleteEvent.h"
#include "AuthenticationEvent.h"
#include "ErrorEvent.h"
#include "Event.h"
#include "EventAggregator.h"
#include "EventHandler.h"
#include "EventType.h"
#include "FetchActionsEvent.h"
#include "FetchUnitsEvent.h"
#include "FetchUsersEvent.h"
#include "J2ObjC_source.h"
#include "JSONObject.h"
#include "LogoutEvent.h"
#include "RootObject.h"
#include "SessionExpiredEvent.h"
#include "com/google/common/collect/ImmutableSet.h"
#include "java/lang/RuntimeException.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

static id<JavaUtilMap> RtdcCoreEventEvent_handlers_;
J2OBJC_STATIC_FIELD_GETTER(RtdcCoreEventEvent, handlers_, id<JavaUtilMap>)
J2OBJC_STATIC_FIELD_SETTER(RtdcCoreEventEvent, handlers_, id<JavaUtilMap>)

J2OBJC_INITIALIZED_DEFN(RtdcCoreEventEvent)

@implementation RtdcCoreEventEvent

+ (void)fireWithJSONJSONObject:(JSONJSONObject *)object {
  RtdcCoreEventEvent_fireWithJSONJSONObject_(object);
}

+ (void)subscribeWithRtdcCoreEventEventType:(RtdcCoreEventEventType *)eventType
              withRtdcCoreEventEventHandler:(id<RtdcCoreEventEventHandler>)eventHandler {
  RtdcCoreEventEvent_subscribeWithRtdcCoreEventEventType_withRtdcCoreEventEventHandler_(eventType, eventHandler);
}

+ (void)unsubscribeWithRtdcCoreEventEventType:(RtdcCoreEventEventType *)eventType
                withRtdcCoreEventEventHandler:(id<RtdcCoreEventEventHandler>)eventHandler {
  RtdcCoreEventEvent_unsubscribeWithRtdcCoreEventEventType_withRtdcCoreEventEventHandler_(eventType, eventHandler);
}

- (ComGoogleCommonCollectImmutableSet *)getHandlersWithRtdcCoreEventEventType:(RtdcCoreEventEventType *)type {
  RtdcCoreEventEventAggregator *eventAggregator = [((id<JavaUtilMap>) nil_chk(RtdcCoreEventEvent_handlers_)) getWithId:type];
  if (eventAggregator == nil) return ComGoogleCommonCollectImmutableSet_of();
  else return [eventAggregator getHandlers];
}

- (void)fire {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  RtdcCoreEventEvent_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)initialize {
  if (self == [RtdcCoreEventEvent class]) {
    JreStrongAssignAndConsume(&RtdcCoreEventEvent_handlers_, new_JavaUtilHashMap_init());
    J2OBJC_SET_INITIALIZED(RtdcCoreEventEvent)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "fireWithJSONJSONObject:", "fire", "V", 0x9, NULL, NULL },
    { "subscribeWithRtdcCoreEventEventType:withRtdcCoreEventEventHandler:", "subscribe", "V", 0x9, NULL, "<T::Lrtdc/core/event/EventHandler;>(Lrtdc/core/event/EventType<TT;>;TT;)V" },
    { "unsubscribeWithRtdcCoreEventEventType:withRtdcCoreEventEventHandler:", "unsubscribe", "V", 0x9, NULL, "<T::Lrtdc/core/event/EventHandler;>(Lrtdc/core/event/EventType<TT;>;TT;)V" },
    { "getHandlersWithRtdcCoreEventEventType:", "getHandlers", "Lcom.google.common.collect.ImmutableSet;", 0x4, NULL, "<T::Lrtdc/core/event/EventHandler;>(Lrtdc/core/event/EventType<TT;>;)Lcom/google/common/collect/ImmutableSet<TT;>;" },
    { "fire", NULL, "V", 0x400, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "handlers_", NULL, 0xa, "Ljava.util.Map;", &RtdcCoreEventEvent_handlers_, "Ljava/util/Map<Lrtdc/core/event/EventType;Lrtdc/core/event/EventAggregator;>;", .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _RtdcCoreEventEvent = { 2, "Event", "rtdc.core.event", NULL, 0x401, 6, methods, 1, fields, 0, NULL, 0, NULL, NULL, "<T::Lrtdc/core/event/EventHandler;>Lrtdc/core/model/RootObject;" };
  return &_RtdcCoreEventEvent;
}

@end

void RtdcCoreEventEvent_fireWithJSONJSONObject_(JSONJSONObject *object) {
  RtdcCoreEventEvent_initialize();
  NSString *type = [((JSONJSONObject *) nil_chk(object)) optStringWithNSString:@"_type"];
  if (type == nil) [((RtdcCoreEventErrorEvent *) [new_RtdcCoreEventErrorEvent_initWithNSString_(JreStrcat("$$", @"Message type not recognized ", [object description])) autorelease]) fire];
  else {
    RtdcCoreEventEvent *e = nil;
    if ([type equalsIgnoreCase:[((RtdcCoreEventEventType *) nil_chk(JreLoadStatic(RtdcCoreEventAuthenticationEvent, TYPE_))) getName]]) e = [new_RtdcCoreEventAuthenticationEvent_initWithJSONJSONObject_(object) autorelease];
    else if ([type equalsIgnoreCase:[((RtdcCoreEventEventType *) nil_chk(JreLoadStatic(RtdcCoreEventErrorEvent, TYPE_))) getName]]) e = [new_RtdcCoreEventErrorEvent_initWithJSONJSONObject_(object) autorelease];
    else if ([type equalsIgnoreCase:[((RtdcCoreEventEventType *) nil_chk(JreLoadStatic(RtdcCoreEventFetchUnitsEvent, TYPE_))) getName]]) e = [new_RtdcCoreEventFetchUnitsEvent_initWithJSONJSONObject_(object) autorelease];
    else if ([type equalsIgnoreCase:[((RtdcCoreEventEventType *) nil_chk(JreLoadStatic(RtdcCoreEventFetchUsersEvent, TYPE_))) getName]]) e = [new_RtdcCoreEventFetchUsersEvent_initWithJSONJSONObject_(object) autorelease];
    else if ([type equalsIgnoreCase:[((RtdcCoreEventEventType *) nil_chk(JreLoadStatic(RtdcCoreEventFetchActionsEvent, TYPE_))) getName]]) e = [new_RtdcCoreEventFetchActionsEvent_initWithJSONJSONObject_(object) autorelease];
    else if ([type equalsIgnoreCase:[((RtdcCoreEventEventType *) nil_chk(JreLoadStatic(RtdcCoreEventActionCompleteEvent, TYPE_))) getName]]) e = [new_RtdcCoreEventActionCompleteEvent_initWithJSONJSONObject_(object) autorelease];
    else if ([type equalsIgnoreCase:[((RtdcCoreEventEventType *) nil_chk(JreLoadStatic(RtdcCoreEventSessionExpiredEvent, TYPE_))) getName]]) e = [new_RtdcCoreEventSessionExpiredEvent_init() autorelease];
    else if ([type equalsIgnoreCase:[((RtdcCoreEventEventType *) nil_chk(JreLoadStatic(RtdcCoreEventLogoutEvent, TYPE_))) getName]]) e = [new_RtdcCoreEventLogoutEvent_init() autorelease];
    if (e != nil) [e fire];
    else @throw [new_JavaLangRuntimeException_initWithNSString_(JreStrcat("$$", @"Event has not been registred under Event.java/fire: ", [object description])) autorelease];
  }
}

void RtdcCoreEventEvent_subscribeWithRtdcCoreEventEventType_withRtdcCoreEventEventHandler_(RtdcCoreEventEventType *eventType, id<RtdcCoreEventEventHandler> eventHandler) {
  RtdcCoreEventEvent_initialize();
  if (![((id<JavaUtilMap>) nil_chk(RtdcCoreEventEvent_handlers_)) containsKeyWithId:eventType]) [RtdcCoreEventEvent_handlers_ putWithId:eventType withId:[new_RtdcCoreEventEventAggregator_init() autorelease]];
  [((RtdcCoreEventEventAggregator *) nil_chk([RtdcCoreEventEvent_handlers_ getWithId:eventType])) addHandlerWithId:eventHandler];
}

void RtdcCoreEventEvent_unsubscribeWithRtdcCoreEventEventType_withRtdcCoreEventEventHandler_(RtdcCoreEventEventType *eventType, id<RtdcCoreEventEventHandler> eventHandler) {
  RtdcCoreEventEvent_initialize();
  if ([((id<JavaUtilMap>) nil_chk(RtdcCoreEventEvent_handlers_)) containsKeyWithId:eventType]) [((RtdcCoreEventEventAggregator *) nil_chk([RtdcCoreEventEvent_handlers_ getWithId:eventType])) removeHandlerWithId:eventHandler];
}

void RtdcCoreEventEvent_init(RtdcCoreEventEvent *self) {
  ModelRootObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(RtdcCoreEventEvent)
