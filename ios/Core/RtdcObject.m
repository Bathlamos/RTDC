//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: Z:\RTDC\core\src\main\java\rtdc\core\model\RtdcObject.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "JSONArray.h"
#include "JSONException.h"
#include "JSONObject.h"
#include "RtdcObject.h"
#include "Unit.h"
#include "User.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@implementation RtdcCoreModelRtdcObject

- (instancetype)initWithJavaUtilSet:(id<JavaUtilSet>)objectProperties {
  return [self initRtdcCoreModelRtdcObjectWithJavaUtilSet:objectProperties withRtdcCoreJsonJSONObject:[[[RtdcCoreJsonJSONObject alloc] init] autorelease]];
}

- (instancetype)initRtdcCoreModelRtdcObjectWithJavaUtilSet:(id<JavaUtilSet>)objectProperties
                                withRtdcCoreJsonJSONObject:(RtdcCoreJsonJSONObject *)jsonObject {
  if (self = [super init]) {
    RtdcCoreModelRtdcObject_set_jsonObject_(self, jsonObject);
    RtdcCoreModelRtdcObject_setAndConsume_objectProperties_(self, [[JavaUtilHashMap alloc] init]);
    for (RtdcCoreModelRtdcObject_Property * __strong property in nil_chk(objectProperties)) {
      [self->objectProperties_ putWithId:((RtdcCoreModelRtdcObject_Property *) nil_chk(property))->propertyName_ withId:property];
      switch ([property->dataType_ ordinal]) {
        case RtdcCoreModelRtdcObject_DataType_UNIT:
        if ([[self getPropertyWithRtdcCoreModelRtdcObject_Property:property] isKindOfClass:[RtdcCoreJsonJSONObject class]]) [self setPropertyWithRtdcCoreModelRtdcObject_Property:property withId:[[[RtdcCoreModelUnit alloc] initWithRtdcCoreJsonJSONObject:(RtdcCoreJsonJSONObject *) check_class_cast([self getPropertyWithRtdcCoreModelRtdcObject_Property:property], [RtdcCoreJsonJSONObject class])] autorelease]];
        break;
        case RtdcCoreModelRtdcObject_DataType_USER:
        if ([[self getPropertyWithRtdcCoreModelRtdcObject_Property:property] isKindOfClass:[RtdcCoreJsonJSONObject class]]) [self setPropertyWithRtdcCoreModelRtdcObject_Property:property withId:[[[RtdcCoreModelUser alloc] initWithRtdcCoreJsonJSONObject:(RtdcCoreJsonJSONObject *) check_class_cast([self getPropertyWithRtdcCoreModelRtdcObject_Property:property], [RtdcCoreJsonJSONObject class])] autorelease]];
        break;
      }
    }
    RtdcCoreJsonJSONArray *names = [((RtdcCoreJsonJSONObject *) nil_chk(jsonObject)) names];
    for (jint i = 0; i < [((RtdcCoreJsonJSONArray *) nil_chk(names)) length]; i++) {
      NSString *propertyName = [names getStringWithInt:i];
      RtdcCoreModelRtdcObject_Property *property = [self->objectProperties_ getWithId:propertyName];
      if (property == nil) @throw [[[RtdcCoreJsonJSONException alloc] initWithNSString:JreStrcat("$$$$C", @"Property ", propertyName, @"does not belong to object ", [jsonObject description], '.')] autorelease];
      else if (![self validateTypeWithRtdcCoreModelRtdcObject_Property:property]) @throw [[[RtdcCoreJsonJSONException alloc] initWithNSString:JreStrcat("$$$$$$C", @"Property ", propertyName, @" of object ", [jsonObject description], @" expected to be: ", [((RtdcCoreModelRtdcObject_DataTypeEnum *) nil_chk(property->dataType_)) description], '.')] autorelease];
    }
  }
  return self;
}

- (instancetype)initWithJavaUtilSet:(id<JavaUtilSet>)objectProperties
         withRtdcCoreJsonJSONObject:(RtdcCoreJsonJSONObject *)jsonObject {
  return [self initRtdcCoreModelRtdcObjectWithJavaUtilSet:objectProperties withRtdcCoreJsonJSONObject:jsonObject];
}

- (id<JavaUtilSet>)validatePropertyWithRtdcCoreModelRtdcObject_Property:(RtdcCoreModelRtdcObject_Property *)property {
  id<JavaUtilSet> constraintViolations = [[[JavaUtilHashSet alloc] init] autorelease];
  NSString *propertyName = ((RtdcCoreModelRtdcObject_Property *) nil_chk(property))->propertyName_;
  if (property->validationConstraints_ != nil) {
    IOSObjectArray *a__ = property->validationConstraints_;
    RtdcCoreModelRtdcObject_ValidationConstraintsEnum * const *b__ = a__->buffer_;
    RtdcCoreModelRtdcObject_ValidationConstraintsEnum * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      RtdcCoreModelRtdcObject_ValidationConstraintsEnum *constraint = *b__++;
      switch ([constraint ordinal]) {
        case RtdcCoreModelRtdcObject_ValidationConstraints_NOT_EMPTY:
        if ([((NSString *) nil_chk([((RtdcCoreJsonJSONObject *) nil_chk(jsonObject_)) optStringWithNSString:propertyName])) isEmpty]) [constraintViolations addWithId:@"Cannot be empty"];
        break;
        case RtdcCoreModelRtdcObject_ValidationConstraints_NOT_NULL:
        if ([((RtdcCoreJsonJSONObject *) nil_chk(jsonObject_)) getWithNSString:propertyName] == nil) [constraintViolations addWithId:@"Cannot be empty"];
        break;
        case RtdcCoreModelRtdcObject_ValidationConstraints_REGEX_EMAIL:
        if ([((NSString *) nil_chk([((RtdcCoreJsonJSONObject *) nil_chk(jsonObject_)) optStringWithNSString:propertyName])) matches:@"^\\S+@\\S+\\.\\S+$"]) ;
        [constraintViolations addWithId:@"Invalid email"];
        break;
        case RtdcCoreModelRtdcObject_ValidationConstraints_POSITIVE_NUMBER:
        if ([((RtdcCoreJsonJSONObject *) nil_chk(jsonObject_)) optLongWithNSString:propertyName] < 0) ;
        [constraintViolations addWithId:@"The number needs to be greater than zero"];
        break;
      }
    }
  }
  return constraintViolations;
}

- (jboolean)validateTypeWithRtdcCoreModelRtdcObject_Property:(RtdcCoreModelRtdcObject_Property *)property {
  NSString *propertyName = ((RtdcCoreModelRtdcObject_Property *) nil_chk(property))->propertyName_;
  @try {
    switch ([property->dataType_ ordinal]) {
      case RtdcCoreModelRtdcObject_DataType_BOOLEAN:
      return [self assertBooleanWithNSString:propertyName];
      case RtdcCoreModelRtdcObject_DataType_INT:
      return [self assertIntWithNSString:propertyName];
      case RtdcCoreModelRtdcObject_DataType_LONG:
      return [self assertLongWithNSString:propertyName];
      case RtdcCoreModelRtdcObject_DataType_STRING:
      return [self assertStringWithNSString:propertyName];
      case RtdcCoreModelRtdcObject_DataType_JSON_ARRAY:
      return [self assertJsonArrayWithNSString:propertyName];
      case RtdcCoreModelRtdcObject_DataType_JSON_OBJECT:
      return [self assertJsonObjectWithNSString:propertyName];
      case RtdcCoreModelRtdcObject_DataType_UNIT:
      return [[((RtdcCoreJsonJSONObject *) nil_chk(jsonObject_)) optWithNSString:propertyName] isKindOfClass:[RtdcCoreModelUnit class]];
      case RtdcCoreModelRtdcObject_DataType_USER:
      return [[((RtdcCoreJsonJSONObject *) nil_chk(jsonObject_)) optWithNSString:propertyName] isKindOfClass:[RtdcCoreModelUser class]];
      default:
      return NO;
    }
  }
  @catch (RtdcCoreJsonJSONException *e) {
    return NO;
  }
}

- (id)getPropertyWithRtdcCoreModelRtdcObject_Property:(RtdcCoreModelRtdcObject_Property *)property {
  return [((RtdcCoreJsonJSONObject *) nil_chk(jsonObject_)) optWithNSString:((RtdcCoreModelRtdcObject_Property *) nil_chk(property))->propertyName_];
}

- (jboolean)hasPropertyWithRtdcCoreModelRtdcObject_Property:(RtdcCoreModelRtdcObject_Property *)property {
  return [((RtdcCoreJsonJSONObject *) nil_chk(jsonObject_)) hasWithNSString:((RtdcCoreModelRtdcObject_Property *) nil_chk(property))->propertyName_];
}

- (void)setPropertyWithRtdcCoreModelRtdcObject_Property:(RtdcCoreModelRtdcObject_Property *)property
                                                 withId:(id)value {
  [((RtdcCoreJsonJSONObject *) nil_chk(jsonObject_)) putWithNSString:((RtdcCoreModelRtdcObject_Property *) nil_chk(property))->propertyName_ withId:value];
}

- (jboolean)assertBooleanWithNSString:(NSString *)propertyName {
  [((RtdcCoreJsonJSONObject *) nil_chk(jsonObject_)) getBooleanWithNSString:propertyName];
  return YES;
}

- (jboolean)assertIntWithNSString:(NSString *)propertyName {
  [((RtdcCoreJsonJSONObject *) nil_chk(jsonObject_)) getIntWithNSString:propertyName];
  return YES;
}

- (jboolean)assertLongWithNSString:(NSString *)propertyName {
  [((RtdcCoreJsonJSONObject *) nil_chk(jsonObject_)) getLongWithNSString:propertyName];
  return YES;
}

- (jboolean)assertStringWithNSString:(NSString *)propertyName {
  [((RtdcCoreJsonJSONObject *) nil_chk(jsonObject_)) getStringWithNSString:propertyName];
  return YES;
}

- (jboolean)assertJsonArrayWithNSString:(NSString *)propertyName {
  [((RtdcCoreJsonJSONObject *) nil_chk(jsonObject_)) getJSONArrayWithNSString:propertyName];
  return YES;
}

- (jboolean)assertJsonObjectWithNSString:(NSString *)propertyName {
  [((RtdcCoreJsonJSONObject *) nil_chk(jsonObject_)) getJSONObjectWithNSString:propertyName];
  return YES;
}

- (NSString *)description {
  return [((RtdcCoreJsonJSONObject *) nil_chk(jsonObject_)) description];
}

+ (id<JavaUtilSet>)setFromWithRtdcCoreModelRtdcObject_PropertyArray:(IOSObjectArray *)properties {
  return RtdcCoreModelRtdcObject_setFromWithRtdcCoreModelRtdcObject_PropertyArray_(properties);
}

- (void)dealloc {
  RtdcCoreModelRtdcObject_set_objectProperties_(self, nil);
  RtdcCoreModelRtdcObject_set_jsonObject_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(RtdcCoreModelRtdcObject *)other {
  [super copyAllFieldsTo:other];
  RtdcCoreModelRtdcObject_set_objectProperties_(other, objectProperties_);
  RtdcCoreModelRtdcObject_set_jsonObject_(other, jsonObject_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithJavaUtilSet:", "RtdcObject", NULL, 0x1, NULL },
    { "initWithJavaUtilSet:withRtdcCoreJsonJSONObject:", "RtdcObject", NULL, 0x1, NULL },
    { "validatePropertyWithRtdcCoreModelRtdcObject_Property:", "validateProperty", "Ljava.util.Set;", 0x1, NULL },
    { "validateTypeWithRtdcCoreModelRtdcObject_Property:", "validateType", "Z", 0x1, NULL },
    { "getPropertyWithRtdcCoreModelRtdcObject_Property:", "getProperty", "Ljava.lang.Object;", 0x4, NULL },
    { "hasPropertyWithRtdcCoreModelRtdcObject_Property:", "hasProperty", "Z", 0x4, NULL },
    { "setPropertyWithRtdcCoreModelRtdcObject_Property:withId:", "setProperty", "V", 0x4, NULL },
    { "assertBooleanWithNSString:", "assertBoolean", "Z", 0x2, "Lrtdc.core.json.JSONException;" },
    { "assertIntWithNSString:", "assertInt", "Z", 0x2, "Lrtdc.core.json.JSONException;" },
    { "assertLongWithNSString:", "assertLong", "Z", 0x2, "Lrtdc.core.json.JSONException;" },
    { "assertStringWithNSString:", "assertString", "Z", 0x2, "Lrtdc.core.json.JSONException;" },
    { "assertJsonArrayWithNSString:", "assertJsonArray", "Z", 0x2, "Lrtdc.core.json.JSONException;" },
    { "assertJsonObjectWithNSString:", "assertJsonObject", "Z", 0x2, "Lrtdc.core.json.JSONException;" },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL },
    { "setFromWithRtdcCoreModelRtdcObject_PropertyArray:", "setFrom", "Ljava.util.Set;", 0x8c, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "objectProperties_", NULL, 0x12, "Ljava.util.Map;", NULL,  },
    { "jsonObject_", NULL, 0x12, "Lrtdc.core.json.JSONObject;", NULL,  },
  };
  static const J2ObjcClassInfo _RtdcCoreModelRtdcObject = { "RtdcObject", "rtdc.core.model", NULL, 0x401, 15, methods, 2, fields, 0, NULL};
  return &_RtdcCoreModelRtdcObject;
}

@end

id<JavaUtilSet> RtdcCoreModelRtdcObject_setFromWithRtdcCoreModelRtdcObject_PropertyArray_(IOSObjectArray *properties) {
  RtdcCoreModelRtdcObject_init();
  id<JavaUtilSet> set = [[[JavaUtilHashSet alloc] initWithInt:((IOSObjectArray *) nil_chk(properties))->size_] autorelease];
  {
    IOSObjectArray *a__ = properties;
    RtdcCoreModelRtdcObject_Property * const *b__ = a__->buffer_;
    RtdcCoreModelRtdcObject_Property * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      RtdcCoreModelRtdcObject_Property *property = *b__++;
      [set addWithId:property];
    }
  }
  return set;
}

BOOL RtdcCoreModelRtdcObject_DataTypeEnum_initialized = NO;

RtdcCoreModelRtdcObject_DataTypeEnum *RtdcCoreModelRtdcObject_DataTypeEnum_values_[8];

@implementation RtdcCoreModelRtdcObject_DataTypeEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

FOUNDATION_EXPORT IOSObjectArray *RtdcCoreModelRtdcObject_DataTypeEnum_values() {
  return [IOSObjectArray arrayWithObjects:RtdcCoreModelRtdcObject_DataTypeEnum_values_ count:8 type:[IOSClass classWithClass:[RtdcCoreModelRtdcObject_DataTypeEnum class]]];
}
+ (IOSObjectArray *)values {
  return RtdcCoreModelRtdcObject_DataTypeEnum_values();
}

+ (RtdcCoreModelRtdcObject_DataTypeEnum *)valueOfWithNSString:(NSString *)name {
  return RtdcCoreModelRtdcObject_DataTypeEnum_valueOfWithNSString_(name);
}

RtdcCoreModelRtdcObject_DataTypeEnum *RtdcCoreModelRtdcObject_DataTypeEnum_valueOfWithNSString_(NSString *name) {
  for (int i = 0; i < 8; i++) {
    RtdcCoreModelRtdcObject_DataTypeEnum *e = RtdcCoreModelRtdcObject_DataTypeEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [RtdcCoreModelRtdcObject_DataTypeEnum class]) {
    RtdcCoreModelRtdcObject_DataTypeEnum_BOOLEAN = [[RtdcCoreModelRtdcObject_DataTypeEnum alloc] initWithNSString:@"BOOLEAN" withInt:0];
    RtdcCoreModelRtdcObject_DataTypeEnum_INT = [[RtdcCoreModelRtdcObject_DataTypeEnum alloc] initWithNSString:@"INT" withInt:1];
    RtdcCoreModelRtdcObject_DataTypeEnum_LONG = [[RtdcCoreModelRtdcObject_DataTypeEnum alloc] initWithNSString:@"LONG" withInt:2];
    RtdcCoreModelRtdcObject_DataTypeEnum_STRING = [[RtdcCoreModelRtdcObject_DataTypeEnum alloc] initWithNSString:@"STRING" withInt:3];
    RtdcCoreModelRtdcObject_DataTypeEnum_JSON_ARRAY = [[RtdcCoreModelRtdcObject_DataTypeEnum alloc] initWithNSString:@"JSON_ARRAY" withInt:4];
    RtdcCoreModelRtdcObject_DataTypeEnum_JSON_OBJECT = [[RtdcCoreModelRtdcObject_DataTypeEnum alloc] initWithNSString:@"JSON_OBJECT" withInt:5];
    RtdcCoreModelRtdcObject_DataTypeEnum_UNIT = [[RtdcCoreModelRtdcObject_DataTypeEnum alloc] initWithNSString:@"UNIT" withInt:6];
    RtdcCoreModelRtdcObject_DataTypeEnum_USER = [[RtdcCoreModelRtdcObject_DataTypeEnum alloc] initWithNSString:@"USER" withInt:7];
    J2OBJC_SET_INITIALIZED(RtdcCoreModelRtdcObject_DataTypeEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withInt:", "init", NULL, 0x4, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "BOOLEAN", "BOOLEAN", 0x4019, "Lrtdc.core.model.RtdcObject$DataType;", &RtdcCoreModelRtdcObject_DataTypeEnum_BOOLEAN,  },
    { "INT", "INT", 0x4019, "Lrtdc.core.model.RtdcObject$DataType;", &RtdcCoreModelRtdcObject_DataTypeEnum_INT,  },
    { "LONG", "LONG", 0x4019, "Lrtdc.core.model.RtdcObject$DataType;", &RtdcCoreModelRtdcObject_DataTypeEnum_LONG,  },
    { "STRING", "STRING", 0x4019, "Lrtdc.core.model.RtdcObject$DataType;", &RtdcCoreModelRtdcObject_DataTypeEnum_STRING,  },
    { "JSON_ARRAY", "JSON_ARRAY", 0x4019, "Lrtdc.core.model.RtdcObject$DataType;", &RtdcCoreModelRtdcObject_DataTypeEnum_JSON_ARRAY,  },
    { "JSON_OBJECT", "JSON_OBJECT", 0x4019, "Lrtdc.core.model.RtdcObject$DataType;", &RtdcCoreModelRtdcObject_DataTypeEnum_JSON_OBJECT,  },
    { "UNIT", "UNIT", 0x4019, "Lrtdc.core.model.RtdcObject$DataType;", &RtdcCoreModelRtdcObject_DataTypeEnum_UNIT,  },
    { "USER", "USER", 0x4019, "Lrtdc.core.model.RtdcObject$DataType;", &RtdcCoreModelRtdcObject_DataTypeEnum_USER,  },
  };
  static const char *superclass_type_args[] = {"Lrtdc.core.model.RtdcObject$DataType;"};
  static const J2ObjcClassInfo _RtdcCoreModelRtdcObject_DataTypeEnum = { "DataType", "rtdc.core.model", "RtdcObject", 0x401c, 1, methods, 8, fields, 1, superclass_type_args};
  return &_RtdcCoreModelRtdcObject_DataTypeEnum;
}

@end

BOOL RtdcCoreModelRtdcObject_ValidationConstraintsEnum_initialized = NO;

RtdcCoreModelRtdcObject_ValidationConstraintsEnum *RtdcCoreModelRtdcObject_ValidationConstraintsEnum_values_[4];

@implementation RtdcCoreModelRtdcObject_ValidationConstraintsEnum

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  return [super initWithNSString:__name withInt:__ordinal];
}

FOUNDATION_EXPORT IOSObjectArray *RtdcCoreModelRtdcObject_ValidationConstraintsEnum_values() {
  return [IOSObjectArray arrayWithObjects:RtdcCoreModelRtdcObject_ValidationConstraintsEnum_values_ count:4 type:[IOSClass classWithClass:[RtdcCoreModelRtdcObject_ValidationConstraintsEnum class]]];
}
+ (IOSObjectArray *)values {
  return RtdcCoreModelRtdcObject_ValidationConstraintsEnum_values();
}

+ (RtdcCoreModelRtdcObject_ValidationConstraintsEnum *)valueOfWithNSString:(NSString *)name {
  return RtdcCoreModelRtdcObject_ValidationConstraintsEnum_valueOfWithNSString_(name);
}

RtdcCoreModelRtdcObject_ValidationConstraintsEnum *RtdcCoreModelRtdcObject_ValidationConstraintsEnum_valueOfWithNSString_(NSString *name) {
  for (int i = 0; i < 4; i++) {
    RtdcCoreModelRtdcObject_ValidationConstraintsEnum *e = RtdcCoreModelRtdcObject_ValidationConstraintsEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[[JavaLangIllegalArgumentException alloc] initWithNSString:name] autorelease];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return [self retain];
}

+ (void)initialize {
  if (self == [RtdcCoreModelRtdcObject_ValidationConstraintsEnum class]) {
    RtdcCoreModelRtdcObject_ValidationConstraintsEnum_NOT_NULL = [[RtdcCoreModelRtdcObject_ValidationConstraintsEnum alloc] initWithNSString:@"NOT_NULL" withInt:0];
    RtdcCoreModelRtdcObject_ValidationConstraintsEnum_NOT_EMPTY = [[RtdcCoreModelRtdcObject_ValidationConstraintsEnum alloc] initWithNSString:@"NOT_EMPTY" withInt:1];
    RtdcCoreModelRtdcObject_ValidationConstraintsEnum_REGEX_EMAIL = [[RtdcCoreModelRtdcObject_ValidationConstraintsEnum alloc] initWithNSString:@"REGEX_EMAIL" withInt:2];
    RtdcCoreModelRtdcObject_ValidationConstraintsEnum_POSITIVE_NUMBER = [[RtdcCoreModelRtdcObject_ValidationConstraintsEnum alloc] initWithNSString:@"POSITIVE_NUMBER" withInt:3];
    J2OBJC_SET_INITIALIZED(RtdcCoreModelRtdcObject_ValidationConstraintsEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withInt:", "init", NULL, 0x4, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "NOT_NULL", "NOT_NULL", 0x4019, "Lrtdc.core.model.RtdcObject$ValidationConstraints;", &RtdcCoreModelRtdcObject_ValidationConstraintsEnum_NOT_NULL,  },
    { "NOT_EMPTY", "NOT_EMPTY", 0x4019, "Lrtdc.core.model.RtdcObject$ValidationConstraints;", &RtdcCoreModelRtdcObject_ValidationConstraintsEnum_NOT_EMPTY,  },
    { "REGEX_EMAIL", "REGEX_EMAIL", 0x4019, "Lrtdc.core.model.RtdcObject$ValidationConstraints;", &RtdcCoreModelRtdcObject_ValidationConstraintsEnum_REGEX_EMAIL,  },
    { "POSITIVE_NUMBER", "POSITIVE_NUMBER", 0x4019, "Lrtdc.core.model.RtdcObject$ValidationConstraints;", &RtdcCoreModelRtdcObject_ValidationConstraintsEnum_POSITIVE_NUMBER,  },
  };
  static const char *superclass_type_args[] = {"Lrtdc.core.model.RtdcObject$ValidationConstraints;"};
  static const J2ObjcClassInfo _RtdcCoreModelRtdcObject_ValidationConstraintsEnum = { "ValidationConstraints", "rtdc.core.model", "RtdcObject", 0x401c, 1, methods, 4, fields, 1, superclass_type_args};
  return &_RtdcCoreModelRtdcObject_ValidationConstraintsEnum;
}

@end

@implementation RtdcCoreModelRtdcObject_Property

- (instancetype)initWithNSString:(NSString *)propertyName
withRtdcCoreModelRtdcObject_DataTypeEnum:(RtdcCoreModelRtdcObject_DataTypeEnum *)dataType
withRtdcCoreModelRtdcObject_ValidationConstraintsEnumArray:(IOSObjectArray *)validationConstraints {
  if (self = [super init]) {
    RtdcCoreModelRtdcObject_Property_set_propertyName_(self, propertyName);
    RtdcCoreModelRtdcObject_Property_set_dataType_(self, dataType);
    RtdcCoreModelRtdcObject_Property_set_validationConstraints_(self, validationConstraints);
  }
  return self;
}

- (jboolean)isEqual:(id)obj {
  return !([obj isKindOfClass:[RtdcCoreModelRtdcObject_Property class]]) || [((NSString *) nil_chk(propertyName_)) isEqual:((RtdcCoreModelRtdcObject_Property *) nil_chk(((RtdcCoreModelRtdcObject_Property *) check_class_cast(obj, [RtdcCoreModelRtdcObject_Property class]))))->propertyName_];
}

- (NSUInteger)hash {
  return ((jint) [((NSString *) nil_chk(propertyName_)) hash]);
}

- (void)dealloc {
  RtdcCoreModelRtdcObject_Property_set_propertyName_(self, nil);
  RtdcCoreModelRtdcObject_Property_set_dataType_(self, nil);
  RtdcCoreModelRtdcObject_Property_set_validationConstraints_(self, nil);
  [super dealloc];
}

- (void)copyAllFieldsTo:(RtdcCoreModelRtdcObject_Property *)other {
  [super copyAllFieldsTo:other];
  RtdcCoreModelRtdcObject_Property_set_propertyName_(other, propertyName_);
  RtdcCoreModelRtdcObject_Property_set_dataType_(other, dataType_);
  RtdcCoreModelRtdcObject_Property_set_validationConstraints_(other, validationConstraints_);
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithNSString:withRtdcCoreModelRtdcObject_DataTypeEnum:withRtdcCoreModelRtdcObject_ValidationConstraintsEnumArray:", "Property", NULL, 0x80, NULL },
    { "isEqual:", "equals", "Z", 0x1, NULL },
    { "hash", "hashCode", "I", 0x1, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "propertyName_", NULL, 0x2, "Ljava.lang.String;", NULL,  },
    { "dataType_", NULL, 0x2, "Lrtdc.core.model.RtdcObject$DataType;", NULL,  },
    { "validationConstraints_", NULL, 0x2, "[Lrtdc.core.model.RtdcObject$ValidationConstraints;", NULL,  },
  };
  static const J2ObjcClassInfo _RtdcCoreModelRtdcObject_Property = { "Property", "rtdc.core.model", "RtdcObject", 0x1c, 3, methods, 3, fields, 0, NULL};
  return &_RtdcCoreModelRtdcObject_Property;
}

@end
