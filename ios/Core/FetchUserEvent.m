//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nicolasmenard/IdeaProjects/RTDC/core/src/main/java/rtdc/core/event/FetchUserEvent.java
//

#include "Event.h"
#include "EventType.h"
#include "FetchUserEvent.h"
#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "JSONObject.h"
#include "ObjectProperty.h"
#include "User.h"
#include "com/google/common/collect/ImmutableSet.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

@interface EventFetchUserEvent () {
 @public
  ModelUser *user_;
}

@end

J2OBJC_FIELD_SETTER(EventFetchUserEvent, user_, ModelUser *)

@interface EventFetchUserEvent_Handler : NSObject

@end

__attribute__((unused)) static void EventFetchUserEvent_PropertiesEnum_initWithNSString_withInt_(EventFetchUserEvent_PropertiesEnum *self, NSString *__name, jint __ordinal);

__attribute__((unused)) static EventFetchUserEvent_PropertiesEnum *new_EventFetchUserEvent_PropertiesEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) NS_RETURNS_RETAINED;

J2OBJC_INITIALIZED_DEFN(EventFetchUserEvent)

EventEventType *EventFetchUserEvent_TYPE_;

@implementation EventFetchUserEvent

+ (EventEventType *)TYPE {
  return EventFetchUserEvent_TYPE_;
}

- (instancetype)initWithModelUser:(ModelUser *)user {
  EventFetchUserEvent_initWithModelUser_(self, user);
  return self;
}

- (instancetype)initWithJsonJSONObject:(JsonJSONObject *)object {
  EventFetchUserEvent_initWithJsonJSONObject_(self, object);
  return self;
}

- (ModelUser *)getUser {
  return user_;
}

- (void)fire {
  for (id<EventFetchUserEvent_Handler> __strong handler in nil_chk([self getHandlersWithEventEventType:EventFetchUserEvent_TYPE_])) [((id<EventFetchUserEvent_Handler>) nil_chk(handler)) onUserFetchedWithEventFetchUserEvent:self];
}

- (IOSObjectArray *)getProperties {
  return EventFetchUserEvent_PropertiesEnum_values();
}

- (NSString *)getType {
  return [((EventEventType *) nil_chk(EventFetchUserEvent_TYPE_)) getName];
}

- (id)getValueWithModelObjectProperty:(id<ModelObjectProperty>)property {
  switch ([(EventFetchUserEvent_PropertiesEnum *) check_class_cast(property, [EventFetchUserEvent_PropertiesEnum class]) ordinal]) {
    case EventFetchUserEvent_Properties_user:
    return user_;
  }
  return nil;
}

+ (void)initialize {
  if (self == [EventFetchUserEvent class]) {
    EventFetchUserEvent_TYPE_ = new_EventEventType_initWithNSString_(@"fetchUserEvent");
    J2OBJC_SET_INITIALIZED(EventFetchUserEvent)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithModelUser:", "FetchUserEvent", NULL, 0x1, NULL, NULL },
    { "initWithJsonJSONObject:", "FetchUserEvent", NULL, 0x1, NULL, NULL },
    { "getUser", NULL, "Lrtdc.core.model.User;", 0x1, NULL, NULL },
    { "fire", NULL, "V", 0x1, NULL, NULL },
    { "getProperties", NULL, "[Lrtdc.core.model.ObjectProperty;", 0x1, NULL, NULL },
    { "getType", NULL, "Ljava.lang.String;", 0x1, NULL, NULL },
    { "getValueWithModelObjectProperty:", "getValue", "Ljava.lang.Object;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE_", NULL, 0x19, "Lrtdc.core.event.EventType;", &EventFetchUserEvent_TYPE_, "Lrtdc/core/event/EventType<Lrtdc/core/event/FetchUserEvent$Handler;>;", .constantValue.asLong = 0 },
    { "user_", NULL, 0x12, "Lrtdc.core.model.User;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lrtdc.core.event.FetchUsersEvent$Handler;"};
  static const char *inner_classes[] = {"Lrtdc.core.event.FetchUserEvent$Handler;", "Lrtdc.core.event.FetchUserEvent$Properties;"};
  static const J2ObjcClassInfo _EventFetchUserEvent = { 2, "FetchUserEvent", "rtdc.core.event", NULL, 0x1, 7, methods, 2, fields, 1, superclass_type_args, 2, inner_classes, NULL, "Lrtdc/core/event/Event<Lrtdc/core/event/FetchUsersEvent$Handler;>;" };
  return &_EventFetchUserEvent;
}

@end

void EventFetchUserEvent_initWithModelUser_(EventFetchUserEvent *self, ModelUser *user) {
  (void) EventEvent_init(self);
  self->user_ = user;
}

EventFetchUserEvent *new_EventFetchUserEvent_initWithModelUser_(ModelUser *user) {
  EventFetchUserEvent *self = [EventFetchUserEvent alloc];
  EventFetchUserEvent_initWithModelUser_(self, user);
  return self;
}

void EventFetchUserEvent_initWithJsonJSONObject_(EventFetchUserEvent *self, JsonJSONObject *object) {
  (void) EventEvent_init(self);
  self->user_ = new_ModelUser_initWithJsonJSONObject_([((JsonJSONObject *) nil_chk(object)) getJSONObjectWithNSString:[((EventFetchUserEvent_PropertiesEnum *) nil_chk(JreLoadStatic(EventFetchUserEvent_PropertiesEnum, user))) name]]);
}

EventFetchUserEvent *new_EventFetchUserEvent_initWithJsonJSONObject_(JsonJSONObject *object) {
  EventFetchUserEvent *self = [EventFetchUserEvent alloc];
  EventFetchUserEvent_initWithJsonJSONObject_(self, object);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EventFetchUserEvent)

@implementation EventFetchUserEvent_Handler

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "onUserFetchedWithEventFetchUserEvent:", "onUserFetched", "V", 0x401, NULL, NULL },
  };
  static const J2ObjcClassInfo _EventFetchUserEvent_Handler = { 2, "Handler", "rtdc.core.event", "FetchUserEvent", 0x609, 1, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_EventFetchUserEvent_Handler;
}

@end

J2OBJC_INTERFACE_TYPE_LITERAL_SOURCE(EventFetchUserEvent_Handler)

J2OBJC_INITIALIZED_DEFN(EventFetchUserEvent_PropertiesEnum)

EventFetchUserEvent_PropertiesEnum *EventFetchUserEvent_PropertiesEnum_values_[1];

@implementation EventFetchUserEvent_PropertiesEnum

+ (EventFetchUserEvent_PropertiesEnum *)user {
  return EventFetchUserEvent_PropertiesEnum_user;
}

- (instancetype)initWithNSString:(NSString *)__name
                         withInt:(jint)__ordinal {
  EventFetchUserEvent_PropertiesEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

IOSObjectArray *EventFetchUserEvent_PropertiesEnum_values() {
  EventFetchUserEvent_PropertiesEnum_initialize();
  return [IOSObjectArray arrayWithObjects:EventFetchUserEvent_PropertiesEnum_values_ count:1 type:EventFetchUserEvent_PropertiesEnum_class_()];
}

+ (IOSObjectArray *)values {
  return EventFetchUserEvent_PropertiesEnum_values();
}

+ (EventFetchUserEvent_PropertiesEnum *)valueOfWithNSString:(NSString *)name {
  return EventFetchUserEvent_PropertiesEnum_valueOfWithNSString_(name);
}

EventFetchUserEvent_PropertiesEnum *EventFetchUserEvent_PropertiesEnum_valueOfWithNSString_(NSString *name) {
  EventFetchUserEvent_PropertiesEnum_initialize();
  for (int i = 0; i < 1; i++) {
    EventFetchUserEvent_PropertiesEnum *e = EventFetchUserEvent_PropertiesEnum_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw [[JavaLangIllegalArgumentException alloc] initWithNSString:name];
  return nil;
}

- (id)copyWithZone:(NSZone *)zone {
  return self;
}

+ (void)initialize {
  if (self == [EventFetchUserEvent_PropertiesEnum class]) {
    EventFetchUserEvent_PropertiesEnum_user = new_EventFetchUserEvent_PropertiesEnum_initWithNSString_withInt_(@"user", 0);
    J2OBJC_SET_INITIALIZED(EventFetchUserEvent_PropertiesEnum)
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcFieldInfo fields[] = {
    { "user", "user", 0x4019, "Lrtdc.core.event.FetchUserEvent$Properties;", &EventFetchUserEvent_PropertiesEnum_user, NULL, .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lrtdc.core.event.FetchUserEvent$Properties;"};
  static const J2ObjcClassInfo _EventFetchUserEvent_PropertiesEnum = { 2, "Properties", "rtdc.core.event", "FetchUserEvent", 0x4019, 0, NULL, 1, fields, 1, superclass_type_args, 0, NULL, NULL, "Ljava/lang/Enum<Lrtdc/core/event/FetchUserEvent$Properties;>;Lrtdc/core/model/ObjectProperty<Lrtdc/core/event/FetchUsersEvent;>;" };
  return &_EventFetchUserEvent_PropertiesEnum;
}

@end

void EventFetchUserEvent_PropertiesEnum_initWithNSString_withInt_(EventFetchUserEvent_PropertiesEnum *self, NSString *__name, jint __ordinal) {
  (void) JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

EventFetchUserEvent_PropertiesEnum *new_EventFetchUserEvent_PropertiesEnum_initWithNSString_withInt_(NSString *__name, jint __ordinal) {
  EventFetchUserEvent_PropertiesEnum *self = [EventFetchUserEvent_PropertiesEnum alloc];
  EventFetchUserEvent_PropertiesEnum_initWithNSString_withInt_(self, __name, __ordinal);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(EventFetchUserEvent_PropertiesEnum)
