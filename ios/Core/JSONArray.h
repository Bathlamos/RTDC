//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nicolasmenard/IdeaProjects/RTDC/core/src/main/java/rtdc/core/json/JSONArray.java
//

#ifndef _JSONArray_H_
#define _JSONArray_H_

#include "J2ObjC_header.h"

@class JSONJSONObject;
@class JSONJSONTokener;
@class JavaUtilVector;

@interface JSONJSONArray : NSObject

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithJSONJSONTokener:(JSONJSONTokener *)x;

- (instancetype)initWithNSString:(NSString *)string;

- (instancetype)initWithJavaUtilVector:(JavaUtilVector *)collection;

- (id)getWithInt:(jint)index;

- (jboolean)getBooleanWithInt:(jint)index;

- (JSONJSONArray *)getJSONArrayWithInt:(jint)index;

- (JSONJSONObject *)getJSONObjectWithInt:(jint)index;

- (NSString *)getStringWithInt:(jint)index;

- (jboolean)isNullWithInt:(jint)index;

- (NSString *)joinWithNSString:(NSString *)separator;

- (jint)length;

- (id)optWithInt:(jint)index;

- (jboolean)optBooleanWithInt:(jint)index;

- (jboolean)optBooleanWithInt:(jint)index
                  withBoolean:(jboolean)defaultValue;

- (JSONJSONArray *)optJSONArrayWithInt:(jint)index;

- (JSONJSONObject *)optJSONObjectWithInt:(jint)index;

- (NSString *)optStringWithInt:(jint)index;

- (NSString *)optStringWithInt:(jint)index
                  withNSString:(NSString *)defaultValue;

- (JSONJSONArray *)putWithBoolean:(jboolean)value;

- (JSONJSONArray *)putWithInt:(jint)value;

- (JSONJSONArray *)putWithInt:(jint)index
                  withBoolean:(jboolean)value;

- (JSONJSONArray *)putWithInt:(jint)index
                      withInt:(jint)value;

- (JSONJSONArray *)putWithInt:(jint)index
                     withLong:(jlong)value;

- (JSONJSONArray *)putWithInt:(jint)index
                       withId:(id)value;

- (JSONJSONArray *)putWithInt:(jint)index
           withJavaUtilVector:(JavaUtilVector *)value;

- (JSONJSONArray *)putWithLong:(jlong)value;

- (JSONJSONArray *)putWithId:(id)value;

- (JSONJSONArray *)putWithJavaUtilVector:(JavaUtilVector *)value;

- (JSONJSONObject *)toJSONObjectWithJSONJSONArray:(JSONJSONArray *)names;

- (NSString *)description;

- (NSString *)toStringWithInt:(jint)indentFactor;

#pragma mark Package-Private

- (NSString *)toStringWithInt:(jint)indentFactor
                      withInt:(jint)indent;

@end

J2OBJC_EMPTY_STATIC_INIT(JSONJSONArray)

FOUNDATION_EXPORT void JSONJSONArray_init(JSONJSONArray *self);

FOUNDATION_EXPORT JSONJSONArray *new_JSONJSONArray_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JSONJSONArray_initWithJSONJSONTokener_(JSONJSONArray *self, JSONJSONTokener *x);

FOUNDATION_EXPORT JSONJSONArray *new_JSONJSONArray_initWithJSONJSONTokener_(JSONJSONTokener *x) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JSONJSONArray_initWithNSString_(JSONJSONArray *self, NSString *string);

FOUNDATION_EXPORT JSONJSONArray *new_JSONJSONArray_initWithNSString_(NSString *string) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JSONJSONArray_initWithJavaUtilVector_(JSONJSONArray *self, JavaUtilVector *collection);

FOUNDATION_EXPORT JSONJSONArray *new_JSONJSONArray_initWithJavaUtilVector_(JavaUtilVector *collection) NS_RETURNS_RETAINED;

J2OBJC_TYPE_LITERAL_HEADER(JSONJSONArray)

@compatibility_alias RtdcCoreJsonJSONArray JSONJSONArray;

#endif // _JSONArray_H_
