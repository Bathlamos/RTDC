//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nicolasmenard/IdeaProjects/RTDC/core/src/main/java/rtdc/core/controller/MessageListController.java
//

#include "Controller.h"
#include "Event.h"
#include "EventType.h"
#include "FetchMessagesEvent.h"
#include "FetchRecentContactsEvent.h"
#include "J2ObjC_source.h"
#include "Message.h"
#include "MessageListController.h"
#include "MessageListView.h"
#include "SimpleComparator.h"
#include "User.h"
#include "com/google/common/collect/ImmutableSet.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"
#include "java/util/Date.h"

@interface ControllerMessageListController () {
 @public
  JavaUtilArrayList *recentContacts_;
  JavaUtilArrayList *messages_;
}

- (JavaUtilArrayList *)getRecentContacts;

- (JavaUtilArrayList *)getMessages;

@end

J2OBJC_FIELD_SETTER(ControllerMessageListController, recentContacts_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ControllerMessageListController, messages_, JavaUtilArrayList *)

__attribute__((unused)) static JavaUtilArrayList *ControllerMessageListController_getRecentContacts(ControllerMessageListController *self);

__attribute__((unused)) static JavaUtilArrayList *ControllerMessageListController_getMessages(ControllerMessageListController *self);

@implementation ControllerMessageListController

- (instancetype)initWithViewMessageListView:(id<ViewMessageListView>)view {
  ControllerMessageListController_initWithViewMessageListView_(self, view);
  return self;
}

- (NSString *)getTitle {
  return @"Messages";
}

- (void)sortMessagesWithModelMessage_PropertiesEnum:(ModelMessage_PropertiesEnum *)property {
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(messages_, [((ModelSimpleComparator_Builder *) nil_chk(ModelSimpleComparator_forPropertyWithModelObjectProperty_(property))) build]);
  JavaUtilCollections_reverseWithJavaUtilList_(messages_);
  [((id<ViewMessageListView>) nil_chk(view_)) setMessagesWithJavaUtilList:messages_];
}

- (void)sortRecentContactsWithModelMessage_PropertiesEnum:(ModelMessage_PropertiesEnum *)property {
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(recentContacts_, [((ModelSimpleComparator_Builder *) nil_chk(ModelSimpleComparator_forPropertyWithModelObjectProperty_(property))) build]);
  [((id<ViewMessageListView>) nil_chk(view_)) setRecentContactsWithJavaUtilList:recentContacts_];
}

- (void)onMessagesFetchedWithEventFetchMessagesEvent:(EventFetchMessagesEvent *)event {
  JreStrongAssignAndConsume(&messages_, new_JavaUtilArrayList_initWithJavaUtilCollection_([((EventFetchMessagesEvent *) nil_chk(event)) getMessages]));
  [self sortMessagesWithModelMessage_PropertiesEnum:JreLoadStatic(ModelMessage_PropertiesEnum, timeSent)];
}

- (void)onRecentContactsFetchedWithEventFetchRecentContactsEvent:(EventFetchRecentContactsEvent *)event {
  JreStrongAssignAndConsume(&recentContacts_, new_JavaUtilArrayList_initWithJavaUtilCollection_([((EventFetchRecentContactsEvent *) nil_chk(event)) getRecentContacts]));
  [self sortRecentContactsWithModelMessage_PropertiesEnum:JreLoadStatic(ModelMessage_PropertiesEnum, timeSent)];
}

- (void)onStop {
  [super onStop];
  EventEvent_unsubscribeWithEventEventType_withEventEventHandler_(JreLoadStatic(EventFetchRecentContactsEvent, TYPE_), self);
  EventEvent_unsubscribeWithEventEventType_withEventEventHandler_(JreLoadStatic(EventFetchMessagesEvent, TYPE_), self);
}

- (JavaUtilArrayList *)getRecentContacts {
  return ControllerMessageListController_getRecentContacts(self);
}

- (void)setupMessageList {
  JreStrongAssign(&messages_, ControllerMessageListController_getMessages(self));
  [self sortMessagesWithModelMessage_PropertiesEnum:JreLoadStatic(ModelMessage_PropertiesEnum, timeSent)];
}

- (JavaUtilArrayList *)getMessages {
  return ControllerMessageListController_getMessages(self);
}

- (void)dealloc {
  RELEASE_(recentContacts_);
  RELEASE_(messages_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithViewMessageListView:", "MessageListController", NULL, 0x1, NULL, NULL },
    { "getTitle", NULL, "Ljava.lang.String;", 0x0, NULL, NULL },
    { "sortMessagesWithModelMessage_PropertiesEnum:", "sortMessages", "V", 0x1, NULL, NULL },
    { "sortRecentContactsWithModelMessage_PropertiesEnum:", "sortRecentContacts", "V", 0x1, NULL, NULL },
    { "onMessagesFetchedWithEventFetchMessagesEvent:", "onMessagesFetched", "V", 0x1, NULL, NULL },
    { "onRecentContactsFetchedWithEventFetchRecentContactsEvent:", "onRecentContactsFetched", "V", 0x1, NULL, NULL },
    { "onStop", NULL, "V", 0x1, NULL, NULL },
    { "getRecentContacts", NULL, "Ljava.util.ArrayList;", 0x2, NULL, NULL },
    { "setupMessageList", NULL, "V", 0x1, NULL, NULL },
    { "getMessages", NULL, "Ljava.util.ArrayList;", 0x2, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "recentContacts_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lrtdc/core/model/Message;>;", .constantValue.asLong = 0 },
    { "messages_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lrtdc/core/model/Message;>;", .constantValue.asLong = 0 },
  };
  static const char *superclass_type_args[] = {"Lrtdc.core.view.MessageListView;"};
  static const J2ObjcClassInfo _ControllerMessageListController = { 2, "MessageListController", "rtdc.core.controller", NULL, 0x1, 10, methods, 2, fields, 1, superclass_type_args, 0, NULL, NULL, "Lrtdc/core/controller/Controller<Lrtdc/core/view/MessageListView;>;Lrtdc/core/event/FetchRecentContactsEvent$Handler;Lrtdc/core/event/FetchMessagesEvent$Handler;" };
  return &_ControllerMessageListController;
}

@end

void ControllerMessageListController_initWithViewMessageListView_(ControllerMessageListController *self, id<ViewMessageListView> view) {
  ControllerController_initWithViewView_(self, view);
  EventEvent_subscribeWithEventEventType_withEventEventHandler_(JreLoadStatic(EventFetchRecentContactsEvent, TYPE_), self);
  EventEvent_subscribeWithEventEventType_withEventEventHandler_(JreLoadStatic(EventFetchMessagesEvent, TYPE_), self);
  JreStrongAssign(&self->recentContacts_, ControllerMessageListController_getRecentContacts(self));
  [self sortRecentContactsWithModelMessage_PropertiesEnum:JreLoadStatic(ModelMessage_PropertiesEnum, timeSent)];
}

ControllerMessageListController *new_ControllerMessageListController_initWithViewMessageListView_(id<ViewMessageListView> view) {
  ControllerMessageListController *self = [ControllerMessageListController alloc];
  ControllerMessageListController_initWithViewMessageListView_(self, view);
  return self;
}

JavaUtilArrayList *ControllerMessageListController_getRecentContacts(ControllerMessageListController *self) {
  JavaUtilArrayList *recentContacts = [new_JavaUtilArrayList_init() autorelease];
  ModelUser *sender = [new_ModelUser_init() autorelease];
  [sender setFirstNameWithNSString:@"Nathaniel"];
  [sender setLastNameWithNSString:@"Aumonttt"];
  [sender setUsernameWithNSString:@"Nathaniel"];
  [sender setIdWithInt:90];
  ModelMessage *message2 = [new_ModelMessage_init() autorelease];
  ModelUser *receiver2 = [new_ModelUser_init() autorelease];
  [receiver2 setFirstNameWithNSString:@"Emilie"];
  [receiver2 setLastNameWithNSString:@"Luskberg"];
  [message2 setSenderWithModelUser:sender];
  [message2 setReceiverWithModelUser:receiver2];
  [message2 setContentWithNSString:@"Sounds good!"];
  [message2 setTimeSentWithJavaUtilDate:[new_JavaUtilDate_initWithInt_withInt_withInt_(2015, 10, 5) autorelease]];
  [message2 setStatusWithModelMessage_StatusEnum:JreLoadStatic(ModelMessage_StatusEnum, read)];
  ModelMessage *message = [new_ModelMessage_init() autorelease];
  ModelUser *receiver = [new_ModelUser_init() autorelease];
  [receiver setFirstNameWithNSString:@"Jonathan"];
  [receiver setLastNameWithNSString:@"Ermel"];
  [receiver setUsernameWithNSString:@"Qwe"];
  [receiver setIdWithInt:91];
  [message setSenderWithModelUser:sender];
  [message setReceiverWithModelUser:receiver];
  [message setContentWithNSString:@"Hi, I hope you're doing good! Do you think we could meet up sometime this afternoon?"];
  [message setTimeSentWithJavaUtilDate:[new_JavaUtilDate_initWithInt_withInt_withInt_(2015, 10, 6) autorelease]];
  [message setStatusWithModelMessage_StatusEnum:JreLoadStatic(ModelMessage_StatusEnum, read)];
  [recentContacts addWithId:message];
  return recentContacts;
}

JavaUtilArrayList *ControllerMessageListController_getMessages(ControllerMessageListController *self) {
  JavaUtilArrayList *messageList = [new_JavaUtilArrayList_init() autorelease];
  for (jint i = 0; i < 10; i++) {
    ModelMessage *message = [new_ModelMessage_init() autorelease];
    ModelUser *sender = [new_ModelUser_init() autorelease];
    [sender setFirstNameWithNSString:@"Jonathan"];
    [sender setLastNameWithNSString:@"Ermel"];
    [sender setUsernameWithNSString:@"Qwe"];
    [sender setIdWithInt:87];
    ModelUser *receiver = [new_ModelUser_init() autorelease];
    [receiver setFirstNameWithNSString:@"Nathaniel"];
    [receiver setLastNameWithNSString:@"Aumonttt"];
    [receiver setIdWithInt:86];
    [receiver setUsernameWithNSString:@"Nathaniel"];
    [message setReceiverWithModelUser:receiver];
    [message setSenderWithModelUser:sender];
    [message setContentWithNSString:JreStrcat("I$", i, @"Hi, I hope you're doing good! Do you think we could meet up sometime this afternoon?")];
    [message setTimeSentWithJavaUtilDate:[new_JavaUtilDate_init() autorelease]];
    [message setContentWithNSString:@"Hi, I hope you're doing good! Do you think we could meet up sometime this afternoon?"];
    [message setTimeSentWithJavaUtilDate:[new_JavaUtilDate_initWithInt_withInt_withInt_(2015, 9, i + 1) autorelease]];
    [messageList addWithId:message];
    if (i == 3) {
      ModelMessage *message3 = [new_ModelMessage_init() autorelease];
      [message3 setSenderWithModelUser:sender];
      [message setReceiverWithModelUser:receiver];
      [message3 setContentWithNSString:JreStrcat("I$", i, @"I'd like to discuss a few things about my new schedule")];
      [message3 setTimeSentWithJavaUtilDate:[new_JavaUtilDate_init() autorelease]];
      [message3 setContentWithNSString:@"I'd like to discuss a few things about my new schedule"];
      [message3 setTimeSentWithJavaUtilDate:[new_JavaUtilDate_initWithInt_withInt_withInt_(2015, 9, i + 1) autorelease]];
      [messageList addWithId:message3];
      ModelMessage *message4 = [new_ModelMessage_init() autorelease];
      [message4 setSenderWithModelUser:sender];
      [message setReceiverWithModelUser:receiver];
      [message4 setContentWithNSString:JreStrcat("I$", i, @"Oh I forgot to mention... I'll only be available after 1 PM")];
      [message4 setTimeSentWithJavaUtilDate:[new_JavaUtilDate_init() autorelease]];
      [message4 setContentWithNSString:@"Oh I forgot to mention... I'll only be available after 1 PM"];
      [message4 setTimeSentWithJavaUtilDate:[new_JavaUtilDate_initWithInt_withInt_withInt_(2015, 9, i + 1) autorelease]];
      [messageList addWithId:message4];
    }
    ModelMessage *message2 = [new_ModelMessage_init() autorelease];
    ModelUser *sender2 = [new_ModelUser_init() autorelease];
    [sender2 setFirstNameWithNSString:@"Nathaniel"];
    [sender2 setLastNameWithNSString:@"Aumonttt"];
    [sender2 setIdWithInt:86];
    [sender2 setUsernameWithNSString:@"Nathaniel"];
    [message2 setSenderWithModelUser:sender2];
    [message2 setReceiverWithModelUser:sender];
    [message2 setContentWithNSString:JreStrcat("I$", i, @"Oh hi John! Sure, lets meet around 2 PM in my office.")];
    [message2 setTimeSentWithJavaUtilDate:[new_JavaUtilDate_init() autorelease]];
    [message2 setContentWithNSString:@"Oh hi John! Sure, lets meet around 2 PM in my office."];
    [message2 setTimeSentWithJavaUtilDate:[new_JavaUtilDate_initWithInt_withInt_withInt_(2015, 9, i + 1) autorelease]];
    [messageList addWithId:message2];
  }
  return messageList;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ControllerMessageListController)
