//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nicolasmenard/IdeaProjects/RTDC/core/src/main/java/rtdc/core/json/JSONObject.java
//

#ifndef _JSONObject_H_
#define _JSONObject_H_

#include "J2ObjC_header.h"

@class JSONJSONArray;
@class JSONJSONTokener;
@class JavaLangBoolean;
@class JavaUtilVector;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

@interface JSONJSONObject : NSObject

#pragma mark Public

- (instancetype)init;

- (instancetype)initWithJSONJSONTokener:(JSONJSONTokener *)x;

- (instancetype)initWithNSString:(NSString *)string;

- (JSONJSONObject *)accumulateWithNSString:(NSString *)key
                                    withId:(id)value;

- (id)getWithNSString:(NSString *)key;

- (jboolean)getBooleanWithNSString:(NSString *)key;

- (jint)getIntWithNSString:(NSString *)key;

- (JSONJSONArray *)getJSONArrayWithNSString:(NSString *)key;

- (JSONJSONObject *)getJSONObjectWithNSString:(NSString *)key;

- (jlong)getLongWithNSString:(NSString *)key;

- (NSString *)getStringWithNSString:(NSString *)key;

- (jboolean)hasWithNSString:(NSString *)key;

- (jboolean)isNullWithNSString:(NSString *)key;

- (id<JavaUtilSet>)keySet;

- (jint)length;

- (id<JavaUtilMap>)map;

- (JSONJSONArray *)names;

+ (NSString *)numberToStringWithId:(id)n;

- (id)optWithNSString:(NSString *)key;

- (jboolean)optBooleanWithNSString:(NSString *)key;

- (jboolean)optBooleanWithNSString:(NSString *)key
                       withBoolean:(jboolean)defaultValue;

- (jint)optIntWithNSString:(NSString *)key;

- (jint)optIntWithNSString:(NSString *)key
                   withInt:(jint)defaultValue;

- (JSONJSONArray *)optJSONArrayWithNSString:(NSString *)key;

- (JSONJSONObject *)optJSONObjectWithNSString:(NSString *)key;

- (jlong)optLongWithNSString:(NSString *)key;

- (jlong)optLongWithNSString:(NSString *)key
                    withLong:(jlong)defaultValue;

- (NSString *)optStringWithNSString:(NSString *)key;

- (NSString *)optStringWithNSString:(NSString *)key
                       withNSString:(NSString *)defaultValue;

- (JSONJSONObject *)putWithNSString:(NSString *)key
                        withBoolean:(jboolean)value;

- (JSONJSONObject *)putWithNSString:(NSString *)key
                            withInt:(jint)value;

- (JSONJSONObject *)putWithNSString:(NSString *)key
                           withLong:(jlong)value;

- (JSONJSONObject *)putWithNSString:(NSString *)key
                             withId:(id)value;

- (JSONJSONObject *)putWithNSString:(NSString *)key
                 withJavaUtilVector:(JavaUtilVector *)value;

- (JSONJSONObject *)putOptWithNSString:(NSString *)key
                                withId:(id)value;

+ (NSString *)quoteWithNSString:(NSString *)string;

- (id)removeWithNSString:(NSString *)key;

- (JSONJSONArray *)toJSONArrayWithJSONJSONArray:(JSONJSONArray *)names;

- (NSString *)description;

- (NSString *)toStringWithInt:(jint)indentFactor;

+ (NSString *)trimNumberWithNSString:(NSString *)s;

#pragma mark Package-Private

+ (void)testValidityWithId:(id)o;

- (NSString *)toStringWithInt:(jint)indentFactor
                      withInt:(jint)indent;

+ (NSString *)valueToStringWithId:(id)value;

+ (NSString *)valueToStringWithId:(id)value
                          withInt:(jint)indentFactor
                          withInt:(jint)indent;

@end

J2OBJC_STATIC_INIT(JSONJSONObject)

FOUNDATION_EXPORT JavaLangBoolean *JSONJSONObject_TRUE__;
J2OBJC_STATIC_FIELD_GETTER(JSONJSONObject, TRUE__, JavaLangBoolean *)

FOUNDATION_EXPORT JavaLangBoolean *JSONJSONObject_FALSE__;
J2OBJC_STATIC_FIELD_GETTER(JSONJSONObject, FALSE__, JavaLangBoolean *)

FOUNDATION_EXPORT id JSONJSONObject_NULL__;
J2OBJC_STATIC_FIELD_GETTER(JSONJSONObject, NULL__, id)

FOUNDATION_EXPORT void JSONJSONObject_init(JSONJSONObject *self);

FOUNDATION_EXPORT JSONJSONObject *new_JSONJSONObject_init() NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JSONJSONObject_initWithJSONJSONTokener_(JSONJSONObject *self, JSONJSONTokener *x);

FOUNDATION_EXPORT JSONJSONObject *new_JSONJSONObject_initWithJSONJSONTokener_(JSONJSONTokener *x) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT void JSONJSONObject_initWithNSString_(JSONJSONObject *self, NSString *string);

FOUNDATION_EXPORT JSONJSONObject *new_JSONJSONObject_initWithNSString_(NSString *string) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT NSString *JSONJSONObject_trimNumberWithNSString_(NSString *s);

FOUNDATION_EXPORT NSString *JSONJSONObject_numberToStringWithId_(id n);

FOUNDATION_EXPORT NSString *JSONJSONObject_quoteWithNSString_(NSString *string);

FOUNDATION_EXPORT void JSONJSONObject_testValidityWithId_(id o);

FOUNDATION_EXPORT NSString *JSONJSONObject_valueToStringWithId_(id value);

FOUNDATION_EXPORT NSString *JSONJSONObject_valueToStringWithId_withInt_withInt_(id value, jint indentFactor, jint indent);

J2OBJC_TYPE_LITERAL_HEADER(JSONJSONObject)

@compatibility_alias RtdcCoreJsonJSONObject JSONJSONObject;

#endif // _JSONObject_H_
