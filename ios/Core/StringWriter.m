//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nicolasmenard/IdeaProjects/RTDC/core/src/main/java/rtdc/core/json/StringWriter.java
//

#include "IOSClass.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "StringWriter.h"
#include "java/io/IOException.h"
#include "java/io/Writer.h"
#include "java/lang/StringBuffer.h"

@interface JSONStringWriter () {
 @public
  JavaLangStringBuffer *buf_;
}

@end

J2OBJC_FIELD_SETTER(JSONStringWriter, buf_, JavaLangStringBuffer *)

@implementation JSONStringWriter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  JSONStringWriter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype)initWithInt:(jint)initialSize {
  JSONStringWriter_initWithInt_(self, initialSize);
  return self;
}

- (void)writeWithCharArray:(IOSCharArray *)cbuf
                   withInt:(jint)off
                   withInt:(jint)len {
  [((JavaLangStringBuffer *) nil_chk(buf_)) appendWithCharArray:cbuf withInt:off withInt:len];
}

- (void)writeWithNSString:(NSString *)str {
  [((JavaLangStringBuffer *) nil_chk(buf_)) appendWithNSString:str];
}

- (void)writeWithNSString:(NSString *)str
                  withInt:(jint)off
                  withInt:(jint)len {
  [((JavaLangStringBuffer *) nil_chk(buf_)) appendWithNSString:[((NSString *) nil_chk(str)) substring:off endIndex:len]];
}

- (void)flush {
}

- (void)close {
}

- (void)dealloc {
  RELEASE_(buf_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "init", "StringWriter", NULL, 0x1, NULL, NULL },
    { "initWithInt:", "StringWriter", NULL, 0x1, NULL, NULL },
    { "writeWithCharArray:withInt:withInt:", "write", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "writeWithNSString:", "write", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "writeWithNSString:withInt:withInt:", "write", "V", 0x1, "Ljava.io.IOException;", NULL },
    { "flush", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
    { "close", NULL, "V", 0x1, "Ljava.io.IOException;", NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "buf_", NULL, 0x12, "Ljava.lang.StringBuffer;", NULL, NULL, .constantValue.asLong = 0 },
  };
  static const J2ObjcClassInfo _JSONStringWriter = { 2, "StringWriter", "rtdc.core.json", NULL, 0x1, 7, methods, 1, fields, 0, NULL, 0, NULL, NULL, NULL };
  return &_JSONStringWriter;
}

@end

void JSONStringWriter_init(JSONStringWriter *self) {
  JavaIoWriter_init(self);
  JreStrongAssignAndConsume(&self->buf_, new_JavaLangStringBuffer_init());
}

JSONStringWriter *new_JSONStringWriter_init() {
  JSONStringWriter *self = [JSONStringWriter alloc];
  JSONStringWriter_init(self);
  return self;
}

void JSONStringWriter_initWithInt_(JSONStringWriter *self, jint initialSize) {
  JavaIoWriter_init(self);
  JreStrongAssignAndConsume(&self->buf_, new_JavaLangStringBuffer_initWithInt_(initialSize));
}

JSONStringWriter *new_JSONStringWriter_initWithInt_(jint initialSize) {
  JSONStringWriter *self = [JSONStringWriter alloc];
  JSONStringWriter_initWithInt_(self, initialSize);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(JSONStringWriter)
