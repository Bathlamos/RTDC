//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nicolasmenard/IdeaProjects/RTDC/core/src/main/java/rtdc/core/model/RootObject.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "JSONArray.h"
#include "JSONObject.h"
#include "ObjectProperty.h"
#include "RootObject.h"
#include "com/google/common/base/Function.h"
#include "java/lang/Iterable.h"
#include "java/util/ArrayList.h"
#include "java/util/Date.h"

@implementation ModelRootObject

- (IOSObjectArray *)getProperties {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)getValueWithModelObjectProperty:(id<ModelObjectProperty>)property {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (JavaUtilArrayList *)parseJsonArrayWithJsonJSONArray:(JsonJSONArray *)array
                       withComGoogleCommonBaseFunction:(id<ComGoogleCommonBaseFunction>)function {
  JavaUtilArrayList *arrayList = [new_JavaUtilArrayList_init() autorelease];
  for (jint i = 0; i < [((JsonJSONArray *) nil_chk(array)) length]; i++) [arrayList addWithId:[((id<ComGoogleCommonBaseFunction>) nil_chk(function)) applyWithId:[array getJSONObjectWithInt:i]]];
  return arrayList;
}

- (JsonJSONArray *)toJsonArrayWithJavaLangIterable:(id<JavaLangIterable>)iterable {
  JsonJSONArray *array = [new_JsonJSONArray_init() autorelease];
  for (id __strong o in nil_chk(iterable)) {
    if ([o isKindOfClass:[ModelRootObject class]]) [array putWithId:[((ModelRootObject *) nil_chk(((ModelRootObject *) check_class_cast(o, [ModelRootObject class])))) toJsonObject]];
    else [array putWithId:o];
  }
  return array;
}

- (NSString *)description {
  return [((JsonJSONObject *) nil_chk([self toJsonObject])) description];
}

- (JsonJSONObject *)toJsonObject {
  JsonJSONObject *object = [new_JsonJSONObject_init() autorelease];
  [object putWithNSString:@"_type" withId:[self getType]];
  {
    IOSObjectArray *a__ = [self getProperties];
    id<ModelObjectProperty> const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    id<ModelObjectProperty> const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      id<ModelObjectProperty> p = *b__++;
      id o = [self getValueWithModelObjectProperty:p];
      if (o == nil) ;
      else if ([JavaLangIterable_class_() isInstance:o]) [object putWithNSString:[((id<ModelObjectProperty>) nil_chk(p)) name] withId:[self toJsonArrayWithJavaLangIterable:(id<JavaLangIterable>) check_protocol_cast(o, JavaLangIterable_class_())]];
      else if ([o isKindOfClass:[ModelRootObject class]]) [object putWithNSString:[((id<ModelObjectProperty>) nil_chk(p)) name] withId:[((ModelRootObject *) check_class_cast(o, [ModelRootObject class])) toJsonObject]];
      else if ([o isKindOfClass:[JavaUtilDate class]]) [object putWithNSString:[((id<ModelObjectProperty>) nil_chk(p)) name] withLong:[((JavaUtilDate *) check_class_cast(o, [JavaUtilDate class])) getTime]];
      else [object putWithNSString:[((id<ModelObjectProperty>) nil_chk(p)) name] withId:o];
    }
  }
  return object;
}

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype)init {
  ModelRootObject_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "getProperties", NULL, "[Lrtdc.core.model.ObjectProperty;", 0x401, NULL, NULL },
    { "getType", NULL, "Ljava.lang.String;", 0x401, NULL, NULL },
    { "getValueWithModelObjectProperty:", "getValue", "Ljava.lang.Object;", 0x401, NULL, NULL },
    { "parseJsonArrayWithJsonJSONArray:withComGoogleCommonBaseFunction:", "parseJsonArray", "Ljava.util.ArrayList;", 0x4, NULL, "<T:Ljava/lang/Object;>(Lrtdc/core/json/JSONArray;Lcom/google/common/base/Function<Lrtdc/core/json/JSONObject;TT;>;)Ljava/util/ArrayList<TT;>;" },
    { "toJsonArrayWithJavaLangIterable:", "toJsonArray", "Lrtdc.core.json.JSONArray;", 0x4, NULL, NULL },
    { "description", "toString", "Ljava.lang.String;", 0x1, NULL, NULL },
    { "toJsonObject", NULL, "Lrtdc.core.json.JSONObject;", 0x1, NULL, NULL },
    { "init", NULL, NULL, 0x1, NULL, NULL },
  };
  static const J2ObjcClassInfo _ModelRootObject = { 2, "RootObject", "rtdc.core.model", NULL, 0x401, 8, methods, 0, NULL, 0, NULL, 0, NULL, NULL, NULL };
  return &_ModelRootObject;
}

@end

void ModelRootObject_init(ModelRootObject *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ModelRootObject)
