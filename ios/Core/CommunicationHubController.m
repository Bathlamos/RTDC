//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/nicolasmenard/IdeaProjects/RTDC/core/src/main/java/rtdc/core/controller/CommunicationHubController.java
//

#include "CommunicationHubController.h"
#include "CommunicationHubView.h"
#include "Controller.h"
#include "Event.h"
#include "EventType.h"
#include "FetchMessagesEvent.h"
#include "FetchRecentContactsEvent.h"
#include "FetchUsersEvent.h"
#include "J2ObjC_source.h"
#include "Message.h"
#include "Service.h"
#include "Session.h"
#include "SimpleComparator.h"
#include "User.h"
#include "com/google/common/collect/ImmutableList.h"
#include "com/google/common/collect/ImmutableSet.h"
#include "java/util/ArrayList.h"
#include "java/util/Collections.h"
#include "java/util/Comparator.h"

@interface ControllerCommunicationHubController () {
 @public
  JavaUtilArrayList *recentContacts_;
  JavaUtilArrayList *messages_;
  JavaUtilArrayList *contacts_;
}

@end

J2OBJC_FIELD_SETTER(ControllerCommunicationHubController, recentContacts_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ControllerCommunicationHubController, messages_, JavaUtilArrayList *)
J2OBJC_FIELD_SETTER(ControllerCommunicationHubController, contacts_, JavaUtilArrayList *)

@implementation ControllerCommunicationHubController

+ (jint)FETCHING_SIZE {
  return ControllerCommunicationHubController_FETCHING_SIZE;
}

- (instancetype)initWithViewCommunicationHubView:(id<ViewCommunicationHubView>)view {
  ControllerCommunicationHubController_initWithViewCommunicationHubView_(self, view);
  return self;
}

- (NSString *)getTitle {
  return @"Messages";
}

- (void)sortRecentContactsWithModelMessage_PropertiesEnum:(ModelMessage_PropertiesEnum *)property {
  if ([((JavaUtilArrayList *) nil_chk(recentContacts_)) isEmpty]) {
    [((id<ViewCommunicationHubView>) nil_chk(view_)) setRecentContactsWithJavaUtilList:recentContacts_];
    return;
  }
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(recentContacts_, [((ModelSimpleComparator_Builder *) nil_chk(ModelSimpleComparator_forPropertyWithModelObjectProperty_(property))) build]);
  [((id<ViewCommunicationHubView>) nil_chk(view_)) setRecentContactsWithJavaUtilList:recentContacts_];
  ServiceService_getMessagesWithInt_withInt_withInt_withInt_([((ModelUser *) nil_chk([((ModelMessage *) nil_chk([recentContacts_ getWithInt:0])) getSender])) getId], [((ModelUser *) nil_chk([((ModelMessage *) nil_chk([recentContacts_ getWithInt:0])) getReceiver])) getId], 0, ControllerCommunicationHubController_FETCHING_SIZE);
}

- (void)sortContactsWithModelUser_PropertiesEnum:(ModelUser_PropertiesEnum *)property {
  JavaUtilCollections_sortWithJavaUtilList_withJavaUtilComparator_(contacts_, [((ModelSimpleComparator_Builder *) nil_chk(ModelSimpleComparator_forPropertyWithModelObjectProperty_(property))) build]);
  [((id<ViewCommunicationHubView>) nil_chk(view_)) setContactsWithJavaUtilList:contacts_];
}

- (void)onMessagesFetchedWithEventFetchMessagesEvent:(EventFetchMessagesEvent *)event {
  ModelUser *messagingUser = [((ModelUser *) nil_chk([((EventFetchMessagesEvent *) nil_chk(event)) getUser1])) getId] != [((ModelUser *) nil_chk([((RtdcCoreSession *) nil_chk(RtdcCoreSession_getCurrentSession())) getUser])) getId] ? [event getUser1] : [event getUser2];
  if ([((ComGoogleCommonCollectImmutableSet *) nil_chk([event getMessages])) isEmpty] && [((id<ViewCommunicationHubView>) nil_chk(view_)) getMessagingUser] != nil && [messagingUser getId] == [((ModelUser *) nil_chk([((id<ViewCommunicationHubView>) view_) getMessagingUser])) getId]) return;
  if ([((id<ViewCommunicationHubView>) nil_chk(view_)) getMessagingUser] == nil || [messagingUser getId] != [((ModelUser *) nil_chk([((id<ViewCommunicationHubView>) view_) getMessagingUser])) getId]) {
    messages_ = new_JavaUtilArrayList_initWithJavaUtilCollection_([event getMessages]);
    [((id<ViewCommunicationHubView>) view_) setMessagesWithJavaUtilList:messages_ withModelUser:messagingUser];
  }
  else {
    [((JavaUtilArrayList *) nil_chk(messages_)) addAllWithInt:0 withJavaUtilCollection:[event getMessages]];
    JavaUtilArrayList *temp = new_JavaUtilArrayList_init();
    [temp addAllWithJavaUtilCollection:[((ComGoogleCommonCollectImmutableSet *) nil_chk([event getMessages])) asList]];
    [((id<ViewCommunicationHubView>) view_) addMessagesAtStartWithJavaUtilList:temp];
  }
}

- (void)onRecentContactsFetchedWithEventFetchRecentContactsEvent:(EventFetchRecentContactsEvent *)event {
  recentContacts_ = new_JavaUtilArrayList_initWithJavaUtilCollection_([((EventFetchRecentContactsEvent *) nil_chk(event)) getRecentContacts]);
  [self sortRecentContactsWithModelMessage_PropertiesEnum:JreLoadStatic(ModelMessage_PropertiesEnum, timeSent)];
}

- (void)onUsersFetchedWithEventFetchUsersEvent:(EventFetchUsersEvent *)event {
  contacts_ = new_JavaUtilArrayList_initWithJavaUtilCollection_([((EventFetchUsersEvent *) nil_chk(event)) getUsers]);
  [self sortContactsWithModelUser_PropertiesEnum:JreLoadStatic(ModelUser_PropertiesEnum, lastName)];
}

- (void)onStop {
  [super onStop];
  EventEvent_unsubscribeWithEventEventType_withEventEventHandler_(JreLoadStatic(EventFetchRecentContactsEvent, TYPE_), self);
  EventEvent_unsubscribeWithEventEventType_withEventEventHandler_(JreLoadStatic(EventFetchMessagesEvent, TYPE_), self);
}

- (JavaUtilArrayList *)getMessages {
  return messages_;
}

+ (const J2ObjcClassInfo *)__metadata {
  static const J2ObjcMethodInfo methods[] = {
    { "initWithViewCommunicationHubView:", "CommunicationHubController", NULL, 0x1, NULL, NULL },
    { "getTitle", NULL, "Ljava.lang.String;", 0x0, NULL, NULL },
    { "sortRecentContactsWithModelMessage_PropertiesEnum:", "sortRecentContacts", "V", 0x1, NULL, NULL },
    { "sortContactsWithModelUser_PropertiesEnum:", "sortContacts", "V", 0x1, NULL, NULL },
    { "onMessagesFetchedWithEventFetchMessagesEvent:", "onMessagesFetched", "V", 0x1, NULL, NULL },
    { "onRecentContactsFetchedWithEventFetchRecentContactsEvent:", "onRecentContactsFetched", "V", 0x1, NULL, NULL },
    { "onUsersFetchedWithEventFetchUsersEvent:", "onUsersFetched", "V", 0x1, NULL, NULL },
    { "onStop", NULL, "V", 0x1, NULL, NULL },
    { "getMessages", NULL, "Ljava.util.ArrayList;", 0x1, NULL, NULL },
  };
  static const J2ObjcFieldInfo fields[] = {
    { "recentContacts_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lrtdc/core/model/Message;>;", .constantValue.asLong = 0 },
    { "messages_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lrtdc/core/model/Message;>;", .constantValue.asLong = 0 },
    { "contacts_", NULL, 0x2, "Ljava.util.ArrayList;", NULL, "Ljava/util/ArrayList<Lrtdc/core/model/User;>;", .constantValue.asLong = 0 },
    { "FETCHING_SIZE", "FETCHING_SIZE", 0x19, "I", NULL, NULL, .constantValue.asInt = ControllerCommunicationHubController_FETCHING_SIZE },
  };
  static const char *superclass_type_args[] = {"Lrtdc.core.view.CommunicationHubView;"};
  static const J2ObjcClassInfo _ControllerCommunicationHubController = { 2, "CommunicationHubController", "rtdc.core.controller", NULL, 0x1, 9, methods, 4, fields, 1, superclass_type_args, 0, NULL, NULL, "Lrtdc/core/controller/Controller<Lrtdc/core/view/CommunicationHubView;>;Lrtdc/core/event/FetchRecentContactsEvent$Handler;Lrtdc/core/event/FetchMessagesEvent$Handler;Lrtdc/core/event/FetchUsersEvent$Handler;" };
  return &_ControllerCommunicationHubController;
}

@end

void ControllerCommunicationHubController_initWithViewCommunicationHubView_(ControllerCommunicationHubController *self, id<ViewCommunicationHubView> view) {
  (void) ControllerController_initWithViewView_(self, view);
  EventEvent_subscribeWithEventEventType_withEventEventHandler_(JreLoadStatic(EventFetchRecentContactsEvent, TYPE_), self);
  EventEvent_subscribeWithEventEventType_withEventEventHandler_(JreLoadStatic(EventFetchMessagesEvent, TYPE_), self);
  EventEvent_subscribeWithEventEventType_withEventEventHandler_(JreLoadStatic(EventFetchUsersEvent, TYPE_), self);
  ServiceService_getRecentContactsWithInt_([((ModelUser *) nil_chk([((RtdcCoreSession *) nil_chk(RtdcCoreSession_getCurrentSession())) getUser])) getId]);
  ServiceService_getUsers();
}

ControllerCommunicationHubController *new_ControllerCommunicationHubController_initWithViewCommunicationHubView_(id<ViewCommunicationHubView> view) {
  ControllerCommunicationHubController *self = [ControllerCommunicationHubController alloc];
  ControllerCommunicationHubController_initWithViewCommunicationHubView_(self, view);
  return self;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ControllerCommunicationHubController)
